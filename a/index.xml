<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>progrhyme's Tech Notes – progrhyme's Tech Notes</title><link>https://progrhy.me/tech-notes/a/</link><description>Recent content on progrhyme's Tech Notes</description><generator>Hugo -- gohugo.io</generator><language>ja</language><atom:link href="https://progrhy.me/tech-notes/a/index.xml" rel="self" type="application/rss+xml"/><item><title>A: POSIXシェル</title><link>https://progrhy.me/tech-notes/a/cli/shell/posix/</link><pubDate>Mon, 01 Jun 2020 16:04:37 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/cli/shell/posix/</guid><description>
&lt;p>POSIXシェルの仕様などについて書く。&lt;/p>
&lt;h2 id="about">About&lt;/h2>
&lt;p>sh, bash, ksh, ash, dashなど。&lt;/p>
&lt;p>POSIX準拠だったり、互換だったりするシェル。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/ko1nksm/items/8d28d4f7cb2c325c00fa">スクリプト言語としてみた各POSIXシェルの特徴と互換性上の注意点まとめ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://www.unix.com/man-page/posix/1p/sh/">POSIX 1003.1 - man page for sh (posix section 1p) - Unix &amp;amp; Linux Commands&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html">CONTENTS - Shell &amp;amp; Utilities: Detailed TOC | The Open Group&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18">Shell Command Language&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="http://www.unix.org/whitepapers/shdiffs.html">Shell Command Language (www.unix.org))&lt;/a>
&lt;ul>
&lt;li>System V や POSIX の古典的な仕様がまとまってるっぽい雰囲気&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="spec">Spec&lt;/h2>
&lt;p>※調査が甘くてPOSIXの仕様じゃないものが混ざっているかもしれない。&lt;/p>
&lt;h3 id="パラメータと変数">パラメータと変数&lt;/h3>
&lt;h4 id="parameter-expansion">Parameter Expansion&lt;/h4>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02">Shell Command Language#2.6.2 Parameter Expansion&lt;/a>&lt;/p>
&lt;p>&lt;code>${expression}&lt;/code> こういうやつ。最もシンプルなのは &lt;code>${parameter}&lt;/code> とそのままブレースで囲むだけ。&lt;/p>
&lt;p>種類:&lt;/p>
&lt;ul>
&lt;li>&lt;code>${#parameter}&lt;/code> &amp;hellip; 文字列の長さを表す&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://xtech.nikkei.com/it/article/COLUMN/20060228/231152/">【 文字列の長さを調べる 】 | 日経クロステック（xTECH）&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="演算子">演算子&lt;/h3>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>&lt;code>[ 条件式 ]&lt;/code> は &lt;code>test 条件式&lt;/code> と同じ。
&lt;ul>
&lt;li>See &lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/test.html">test&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>ドキュメント:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tiswww.case.edu/php/chet/bash/bashref.html#Bash-Conditional-Expressions">Bash Reference Manual&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/egawa_kun/items/196cd354c0d8e4e0fefc">シェルスクリプト（bash）のif文やwhile文で使う演算子について - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="単項条件演算子">単項条件演算子&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>演算子&lt;/th>
&lt;th>真の条件&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>-v VAR&lt;/td>
&lt;td>変数VARが定義されている。※ &lt;code>-v $VAR&lt;/code> ではない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-n $str&lt;/td>
&lt;td>$str に長さ1以上の文字列が入っている&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-z $str&lt;/td>
&lt;td>$str が空文字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-x $path&lt;/td>
&lt;td>$path が実行可能ファイル&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-L $path&lt;/td>
&lt;td>$path がシンボリックリンク&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-S $path&lt;/td>
&lt;td>$path がソケット&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://nekoyukimmm.hatenablog.com/entry/2018/01/21/101828">&amp;lt;Bash, zsh&amp;gt; シェル変数が定義されているかを判定する方法 - ねこゆきのメモ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="二項条件演算子">二項条件演算子&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>構文&lt;/th>
&lt;th>真の条件&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&amp;ldquo;$str1&amp;rdquo; = &amp;ldquo;$str2&amp;rdquo;&lt;/td>
&lt;td>$str1と$str2が等しい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ldquo;$str1&amp;rdquo; != &amp;ldquo;$str2&amp;rdquo;&lt;/td>
&lt;td>$str1と$str2が等しくない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -eq $y&lt;/td>
&lt;td>数値$xと$yが等しい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -ne $y&lt;/td>
&lt;td>数値$xと$yが等しくない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -gt $y&lt;/td>
&lt;td>数値$xが$yより大きい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -lt $y&lt;/td>
&lt;td>数値$xが$yより小さい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -ge $y&lt;/td>
&lt;td>数値$xが$y以上&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -le $y&lt;/td>
&lt;td>数値$xが$y以下&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$path1 -nt $path2&lt;/td>
&lt;td>$path1 のタイムスタンプが $path2 より新しい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$path1 -ot $path2&lt;/td>
&lt;td>$path1 のタイムスタンプが $path2 より古い&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="ループ">ループ&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## 無限ループ&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> true&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> true&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">continue&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># 後続の処理をスキップして次の周回へ&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span>
:
&lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
:
&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">## イテレータでループ&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> i in &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>get_some_list&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
:
&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://xtech.nikkei.com/it/article/COLUMN/20060228/231135/">【 次の繰り返しに移る「continue」 】 | 日経クロステック（xTECH）&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="case構文">case構文&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_04_05">Shell Command Language#Case Conditional Construct&lt;/a>&lt;/p>
&lt;p>構文:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> 値 in
パターン1 &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 処理1 &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
パターン2 &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 処理2 &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
パターン3 &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 処理3 &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
…
パターンn &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 処理n &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">esac&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>シェルの&lt;a href="#%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%83%9E%E3%83%83%E3%83%81">パターンマッチ&lt;/a>を使うこともできる&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://shellscript.sunone.me/case.html">case 文の使用方法 | UNIX &amp;amp; Linux コマンド・シェルスクリプト リファレンス&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="パターンマッチ">パターンマッチ&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_13">Shell Command Language#2.13. Pattern Matching Notation&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>パターン&lt;/th>
&lt;th>マッチ文字列&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>?&lt;/code>&lt;/td>
&lt;td>任意のアスキー1字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>*&lt;/code>&lt;/td>
&lt;td>ヌル文字を含む任意の文字列&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>[&lt;/code>&lt;/td>
&lt;td>&lt;code>[...]&lt;/code> で &lt;code>[]&lt;/code> 内の任意の1字にマッチする&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="parameter-expansion-1">Parameter Expansion&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">parameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">parameter&lt;/span>&lt;span style="color:#204a87;font-weight:bold">:-&lt;/span>&lt;span style="color:#000">word&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> -z &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">var&lt;/span>&lt;span style="color:#000;font-weight:bold">+x&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;var is unset&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;var is set to &amp;#39;&lt;/span>&lt;span style="color:#000">$var&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/3601515/how-to-check-if-a-variable-is-set-in-bash">shell - How to check if a variable is set in Bash? - Stack Overflow&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="built-ins">Built-Ins&lt;/h2>
&lt;h3 id="-dot">. (dot)&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_18">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_18&lt;/a>&lt;/p>
&lt;h3 id="-colon">: (colon)&lt;/h3>
&lt;p>null utility&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_16">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_16&lt;/a>&lt;/li>
&lt;li>Bash: &lt;a href="https://tiswww.case.edu/php/chet/bash/bashref.html#Bourne-Shell-Builtins">https://tiswww.case.edu/php/chet/bash/bashref.html#Bourne-Shell-Builtins&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>何もしないコマンド&lt;/p>
&lt;h3 id="return">return&lt;/h3>
&lt;p>関数かdot scriptを終了する&lt;/p>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_24">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_24&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 0以外だと異常終了扱い&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 引数省略時は最後のコマンドのexit statusになる&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/blueskyarea/items/805c0aa4b1cbba11818a">シェルスクリプト return コマンド - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/progrhyme/experiments/tree/master/bash/source-scripts">https://github.com/progrhyme/experiments/tree/master/bash/source-scripts&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="unset">unset&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_29">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_29&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># シェル変数または環境変数を削除&lt;/span>
&lt;span style="color:#204a87">unset&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>-v&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> FOO
&lt;span style="color:#8f5902;font-style:italic"># 関数名を削除&lt;/span>
&lt;span style="color:#204a87">unset&lt;/span> -f my_func
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.atmarkit.co.jp/ait/articles/1905/24/news015.html">【 unset 】コマンド――変数や関数を削除する：Linux基本コマンドTips（307） - ＠IT&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Google Apps Script</title><link>https://progrhy.me/tech-notes/a/google/gas/</link><pubDate>Sat, 09 May 2020 21:08:42 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/gas/</guid><description>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;ul>
&lt;li>ガイド: &lt;a href="https://developers.google.com/apps-script/overview">https://developers.google.com/apps-script/overview&lt;/a>&lt;/li>
&lt;li>APIリファレンス: &lt;a href="https://developers.google.com/apps-script/reference/">https://developers.google.com/apps-script/reference/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>入門系記事:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://libro.tuyano.com/index2?id=638001" title="初心者のためのGoogle Apps Scriptプログラミング入門">初心者のためのGoogle Apps Scriptプログラミング入門&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://uxmilk.jp/25775" title="【Google Apps Script入門】Google Apps Scriptとは？ | UX MILK">【Google Apps Script入門】Google Apps Scriptとは？ | UX MILK&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="features">Features&lt;/h2>
&lt;h3 id="webアプリケーションとして公開">Webアプリケーションとして公開&lt;/h3>
&lt;p>&lt;a href="https://developers.google.com/apps-script">HTML Service: Create and Serve HTML | Apps Script | Google Developers&lt;/a>&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/hyt48/items/2534237d96f991f31966">Google Apps ScriptでWebアプリケーションをつくる - Qiita&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Concept</title><link>https://progrhy.me/tech-notes/a/software/k8s/concept/</link><pubDate>Mon, 27 Apr 2020 10:53:19 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/concept/</guid><description>
&lt;h2 id="このページについて">このページについて&lt;/h2>
&lt;p>何を書くか:&lt;/p>
&lt;ul>
&lt;li>Kubernetesの全体アーキテクチャーや構成要素の概要&lt;/li>
&lt;li>個別のオブジェクトによらない概念や機能等について&lt;/li>
&lt;/ul>
&lt;p>書かないこと:&lt;/p>
&lt;ul>
&lt;li>著しく個々のオブジェクトに紐づく文書のボリュームが大きくなったら、独立したページに切り出す&lt;/li>
&lt;/ul>
&lt;h2 id="アーキテクチャー概観">アーキテクチャー概観&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/ja/docs/concepts/overview/components/">Kubernetesのコンポーネント - Kubernetes&lt;/a>より。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>クラスタ&lt;/strong> &amp;hellip; &lt;u>ノード&lt;/u>の集合
&lt;ul>
&lt;li>少なくとも1つの&lt;u>ワーカーノード&lt;/u>と少なくとも1つの&lt;u>マスターノード&lt;/u>がある&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>ノード（Node）&lt;/strong> &amp;hellip; コンテナ化されたアプリケーションを実行するマシン
&lt;ul>
&lt;li>&lt;strong>マスターノード&lt;/strong> &amp;hellip; &lt;u>ワーカーノード&lt;/u>とPodを管理。複数台構成によって高可用性を実現できる&lt;/li>
&lt;li>&lt;strong>ワーカーノード&lt;/strong> &amp;hellip; Podを動かす&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>各ノードで実行され、Kubernetesのクラスタ機能を成り立たせる&lt;u>コンポーネント&lt;/u>を以下に記す。&lt;/p>
&lt;h3 id="master-components">Master Components&lt;/h3>
&lt;p>マスターコンポーネントは、クラスターのコントロールプレーンを提供する。&lt;br>
クラスタのどのマシンでも実行できるが、通常は全てのコンポーネントが同じマシンで起動され、そのマシンにはユーザーのPodをスケジュールしない。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/generated/kube-apiserver/">kube-apiserver&lt;/a>
&lt;ul>
&lt;li>Kubernetesを制御するフロントAPI. 水平スケール可能。参考: &lt;a href="https://kubernetes.io/docs/admin/high-availability/">Building High-Availability Clusters | Kubernetes&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/">etcd&lt;/a> &amp;hellip; クラスタの管理データが保存されるので、バックアップすべし。&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/generated/kube-controller-manager/">kube-controller-manager&lt;/a>
&lt;ul>
&lt;li>Controllerをバックグラウンドのスレッドで動かす。&lt;/li>
&lt;li>個々のControllerは論理的には独立した存在だが、複雑性を避けるため同一のバイナリで単一プロセスとして動作している。&lt;/li>
&lt;li>以下のControllerが含まれる:
&lt;ul>
&lt;li>Node Controller&lt;/li>
&lt;li>Replication Controller&lt;/li>
&lt;li>Endpoints Controller&lt;/li>
&lt;li>Service Account &amp;amp; Token Controller&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>cloud-controller-manager &amp;hellip; v1.6でalpha. クラウド基盤とやりとりするControllerを動かす。&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/generated/kube-scheduler/">kube-scheduler&lt;/a> &amp;hellip; 生成されるPodを監視し、Podを動作させるノードを決定する。&lt;/li>
&lt;li>addons &amp;hellip; クラスタの機能を提供するPod群。これらのPodは &lt;code>kube-system&lt;/code> という &lt;strong>Namespace&lt;/strong> に作られる。
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/">DNS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/">Web UI (Dashboard)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/debug-application-cluster/resource-usage-monitoring/">Container Resource Monitoring&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/cluster-administration/logging/">Cluster-level Logging&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="node-components">Node Components&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/generated/kubelet/">kubelet&lt;/a> &amp;hellip; マスターと通信するエージェントプロセス。&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/generated/kube-proxy/">kube-proxy&lt;/a> &amp;hellip; ノード上でKubernetes APIによって定義されたサービスを媒介するネットワークプロキシ。&lt;/li>
&lt;li>docker, rkt &amp;hellip; コンテナランタイム&lt;/li>
&lt;li>supervisord &amp;hellip; ノード上でdockerやkubeletを動かし続ける。&lt;/li>
&lt;li>fluentd &amp;hellip; cluster-level loggingを実現する。&lt;/li>
&lt;/ul>
&lt;h2 id="リソースオブジェクト">リソースオブジェクト&lt;/h2>
&lt;p>APIオブジェクトとも呼ばれるようだ。&lt;/p>
&lt;p>&lt;a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/">Kubernetes API Reference Docs (v1.18 at 2020-04-13)&lt;/a>に従い、カテゴライズして記す。&lt;/p>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>以下、「*」は本サイト内のページを表すとする。&lt;/li>
&lt;li>一旦、v1beta以下は省くか、versionを明記する&lt;/li>
&lt;/ul>
&lt;h3 id="workloads">Workloads&lt;/h3>
&lt;ul>
&lt;li>coreグループ:
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/container/">Container&lt;/a> *&lt;/li>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/pod/">Pod&lt;/a> *&lt;/li>
&lt;li>ReplicationContoller&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>appsグループ:
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/">ReplicaSet&lt;/a> &amp;hellip; &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/">Replication Controller&lt;/a>の後継。&lt;/li>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/deployment/">Deployment&lt;/a> * &amp;hellip; PodやReplicaSetの状態を宣言的に記述することを可能にする。&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/">StatefulSet&lt;/a> &amp;hellip; v1.8でbeta. Deployment同様Podを管理するが、それぞれのPodを異なる個体と認識する。&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/">DaemonSet&lt;/a> &amp;hellip; ノード上でPodのコピーを動かす。典型的なユースケースとしては、cephやfluentd, collectdなどが挙げられる。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>batchグループ:
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/">Job&lt;/a> &amp;hellip; Podを実行し、正常に完了するまでをトラッキングする。定められた回数、正常に完了したら、Jobも完了となる。&lt;/li>
&lt;li>CronJob v1beta1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>MEMO:&lt;/p>
&lt;ul>
&lt;li>apps, batchグループのオブジェクトを &lt;strong>Controller&lt;/strong> と呼ぶことがあったようだ。&lt;/li>
&lt;/ul>
&lt;h3 id="discovery--lb-service-apis">Discovery &amp;amp; LB (Service APIs)&lt;/h3>
&lt;ul>
&lt;li>coreグループ:
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/service/">Service&lt;/a> *&lt;/li>
&lt;li>Endpoints&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>networking.k8s.ioグループ:
&lt;ul>
&lt;li>Ingress v1beta1&lt;/li>
&lt;li>IngressClass v1beta1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>discovery.k8s.ioグループ:
&lt;ul>
&lt;li>EndpointSlice v1beta1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="config--storage">Config &amp;amp; Storage&lt;/h3>
&lt;ul>
&lt;li>coreグループ:
&lt;ul>
&lt;li>ConfigMap&lt;/li>
&lt;li>Secret&lt;/li>
&lt;li>PersistentVolumeClaim&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/volumes/">Volume&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>storage.k8s.ioグループ:
&lt;ul>
&lt;li>CSIDriver&lt;/li>
&lt;li>CSINode&lt;/li>
&lt;li>StorageClass&lt;/li>
&lt;li>VolumeAttachment&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="metadata">Metadata&lt;/h3>
&lt;ul>
&lt;li>coreグループ:
&lt;ul>
&lt;li>Event&lt;/li>
&lt;li>LimitRange&lt;/li>
&lt;li>PodTemplate&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>appsグループ:
&lt;ul>
&lt;li>ControllerRevision&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>autoscalingグループ:
&lt;ul>
&lt;li>&lt;a href="#horizontal-pod-autoscaler">HorizontalPodAutoscaler&lt;/a> * &amp;hellip; HPAと略されることが多い&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>scheduling.k8s.ioグループ:
&lt;ul>
&lt;li>PriorityClass &amp;hellip; See &lt;a href="https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass">Pod Priority and Preemption - Kubernetes#priorityclass&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>admissionregistration.k8s.ioグループ:
&lt;ul>
&lt;li>MutatingWebhookConfiguration&lt;/li>
&lt;li>ValidatingWebhookConfiguration&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>apiextensions.k8s.ioグループ:
&lt;ul>
&lt;li>CustomResourceDefinition &amp;hellip; CRDと略されることが多い。K8sの機能拡張によく用いられる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>policyグループ:
&lt;ul>
&lt;li>PodDisruptionBudget v1beta1&lt;/li>
&lt;li>PodSecurityPolicy v1beta1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="cluster">Cluster&lt;/h3>
&lt;ul>
&lt;li>coreグループ:
&lt;ul>
&lt;li>Binding&lt;/li>
&lt;li>ComponentStatus&lt;/li>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/namespace/">Namespace&lt;/a> * &amp;hellip; Kubernetesでは、複数の仮想的なクラスタを同じ物理クラスタ上に構築することができる。この仮想クラスタのことを &lt;strong>Namespace&lt;/strong> と呼ぶ&lt;/li>
&lt;li>Node&lt;/li>
&lt;li>&lt;a href="#persistentvolume">PersistentVolume&lt;/a> *&lt;/li>
&lt;li>ResourceQuota&lt;/li>
&lt;li>ServiceAccount&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>authentication.k8s.ioグループ:
&lt;ul>
&lt;li>TokenRequest&lt;/li>
&lt;li>TokenReview&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>authorization.k8s.ioグループ:
&lt;ul>
&lt;li>LocalSubjectAccessReview&lt;/li>
&lt;li>SelfSubjectAccessReview&lt;/li>
&lt;li>SelfSubjectRulesReview&lt;/li>
&lt;li>SubjectAccessReview&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>rbac.authorization.k8s.ioグループ:
&lt;ul>
&lt;li>ClusterRole&lt;/li>
&lt;li>ClusterRoleBinding&lt;/li>
&lt;li>Role&lt;/li>
&lt;li>RoleBinding&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>apiregistration.k8s.ioグループ:
&lt;ul>
&lt;li>APIService&lt;/li>
&lt;li>AuditSink&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>certificates.k8s.ioグループ:
&lt;ul>
&lt;li>CertificateSigningRequest v1beta1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>networking.k8s.ioグループ:
&lt;ul>
&lt;li>NetworkPolicy&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>coordination.k8s.ioグループ:
&lt;ul>
&lt;li>Lease&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="認証認可">認証/認可&lt;/h2>
&lt;h3 id="rbac">RBAC&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/">https://kubernetes.io/docs/reference/access-authn-authz/rbac/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Role &amp;hellip; 権限ロール。Namespace単位&lt;/li>
&lt;li>ClusterRole &amp;hellip; クラスタ全体に効く権限ロール&lt;/li>
&lt;li>RoleBinding &amp;hellip; Roleとユーザ/グループの紐付け&lt;/li>
&lt;li>ClusterRoleBinding &amp;hellip; ClusterRoleとユーザ/グループの紐付け&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-20/">Kubernetes道場 20日目 - Role / RoleBinding / ClusterRole / ClusterRoleBindingについて - Toku&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/sheepland/items/67a5bb9b19d8686f389d">KubernetesのRBACについて - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="オートスケール">オートスケール&lt;/h2>
&lt;h3 id="horizontal-pod-autoscaler">Horizontal Pod Autoscaler&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/">https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/">https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Podの水平オートスケーラー&lt;/p>
&lt;ul>
&lt;li>v1 &amp;hellip; CPU使用率(requestsの平均)でスケール&lt;/li>
&lt;li>v2
&lt;ul>
&lt;li>&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/autoscaling/hpa-v2.md">https://github.com/kubernetes/community/blob/master/contributors/design-proposals/autoscaling/hpa-v2.md&lt;/a>&lt;/li>
&lt;li>カスタムメトリクス対応&lt;/li>
&lt;li>複数メトリクス対応&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>HorizontalPodAutoscaler&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>autoscaling/v2alpha1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>WebFrontend&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">scaleTargetRef&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>ReplicationController&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>WebFrontend&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">minReplicas&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">maxReplicas&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">metrics&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Resource&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resource&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>cpu&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">targetAverageUtilization&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Object&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">object&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">target&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Service&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Frontend&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">metricName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>hits-per-second&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">targetValue&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>1k&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/horizontal-pod-autoscaling">Configuring a Horizontal Pod Autoscaler - GKE&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/monitoring/kubernetes-engine/observing?hl=ja">GKE クラスタの観察 | Stackdriver Monitoring | Google Cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/k-hal/items/5f060fdbafa3d29b3499#hpa">GKEでPodとNodeをAutoscaling する - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="cluster-autoscaler">Cluster Autoscaler&lt;/h3>
&lt;p>&lt;a href="https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler">https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md">FAQ.md&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="storage">Storage&lt;/h2>
&lt;h3 id="persistentvolume">PersistentVolume&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/">https://kubernetes.io/docs/concepts/storage/persistent-volumes/&lt;/a>&lt;/p>
&lt;p>永続化ボリューム&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-12/">Kubernetes道場 12日目 - PersistentVolume / PersistentVolumeClaim / StorageClassについて - Toku&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="リソース管理">リソース管理&lt;/h2>
&lt;h3 id="コンテナやpodへのcpuメモリの割当て">コンテナやPodへのCPU/メモリの割当て&lt;/h3>
&lt;p>基本:&lt;/p>
&lt;ul>
&lt;li>Podは、cpu/memory requests以上の空きリソースを持つノードにスケジュールされる&lt;/li>
&lt;li>コンテナのcpu利用量がlimit値を越えるとスロットルされる = パフォーマンス劣化する&lt;/li>
&lt;li>コンテナのmemory利用量がlimit値を越えるとOOM Killerで殺される。再起動できるときは再起動される&lt;/li>
&lt;li>Podが複数のコンテナで構成される場合、リソース指定値は全コンテナの合計値になる&lt;/li>
&lt;li>requestsを指定しないとデフォルト値になる&lt;/li>
&lt;li>limitsを指定しないとノードで利用可能な最大値になる&lt;/li>
&lt;/ul>
&lt;p>Tips:&lt;/p>
&lt;ul>
&lt;li>コンテナのcpu/memoryのrequestsより大きなlimitsを指定することで、突発的な負荷に耐えられるようになり、かつ、適切に制限をかけられる&lt;/li>
&lt;/ul>
&lt;p>ベストプラクティス:&lt;/p>
&lt;ul>
&lt;li>NamespaceでResourceQuotasやLimitRangeを設定すると良い
&lt;ul>
&lt;li>See &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/namespace/#resourcequotas">Namespace#resourcequotas&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/ja/docs/tasks/configure-pod-container/assign-cpu-resource/">コンテナおよびPodへのCPUリソースの割り当て - Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/ja/docs/tasks/configure-pod-container/assign-memory-resource/">コンテナおよびPodへのメモリーリソースの割り当て - Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.scsk.jp/sp/sysdig/blog/sysdig_monitor/kubernetes_118.html">例を交えてKubernetesのリミットとリクエストを理解する | Sysdigブログ - コンテナ・Kubernetes環境向けセキュリティ・モニタリング プラットフォーム&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-resource-requests-and-limits">Kubernetes best practices: Resource requests and limits | Google Cloud Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/ja-jp/azure/aks/developer-best-practices-resource-management">開発者のベスト プラクティス - Azure Kubernetes Service (AKS) でのリソース管理 | Microsoft Docs&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="pod-eviction">Pod Eviction&lt;/h3>
&lt;p>Documents:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/out-of-resource/">https://kubernetes.io/docs/tasks/administer-cluster/out-of-resource/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>メモ:&lt;/p>
&lt;ul>
&lt;li>ノードのメモリが不足すると、Podがevictされることがある&lt;/li>
&lt;li>メモリ使用量の大きなPodからeviction対象になる&lt;/li>
&lt;li>memoryのrequets/limitsを適切に設定しておくこと&lt;/li>
&lt;/ul>
&lt;p>EvictしたPodは手動で削除する必要があるっぽい。
See &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/kubectl/#evicted%E3%81%AApod%E3%82%92%E4%B8%80%E6%8B%AC%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B%E3%83%AF%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%8A%E3%83%BC">kubectl#EvictedなPodを一括削除するワンライナー&lt;/a>&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.scsk.jp/sp/sysdig/blog/sysdig_monitor/kubernetes_pod_evicted.html">Kubernetes pod evictedとスケジューリングの問題を理解する | Sysdigブログ - コンテナ・Kubernetes環境向けセキュリティ・モニタリング プラットフォーム&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/ja/docs/concepts/architecture/nodes/">ノード - Kubernetes&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ロギング">ロギング&lt;/h2>
&lt;p>概念:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/cluster-administration/logging/">Logging Architecture - Kubernetes&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>ソリューション:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/debug-application-cluster/logging-stackdriver/">Logging Using Stackdriver - Kubernetes&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Install</title><link>https://progrhy.me/tech-notes/a/program/lang/go/install/</link><pubDate>Sun, 26 Apr 2020 19:02:34 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/go/install/</guid><description>
&lt;h2 id="ubuntu">Ubuntu&lt;/h2>
&lt;p>&lt;a href="https://github.com/golang/go/wiki/Ubuntu">https://github.com/golang/go/wiki/Ubuntu&lt;/a>&lt;/p>
&lt;p>2018年以前ぐらいまではtarballからインストールしていたと思うが、2020-04-26現在は、apt installが可能になっている。&lt;/p>
&lt;p>以下は最新版をインストールする手順:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">sudo add-apt-repository ppa:longsleep/golang-backports
sudo apt update
sudo apt install golang-go
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="複数バージョンのgoをインストール">複数バージョンのGoをインストール&lt;/h3>
&lt;p>&lt;a href="https://golang.org/doc/install#extra_versions">https://golang.org/doc/install#extra_versions&lt;/a> に公式のガイドがある。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">$ go get golang.org/dl/go1.10.7
$ go1.10.7 download
$ go1.10.7 version
go version go1.10.7 linux/amd64
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>サードパーティーのツールもある。goenvとか&lt;/li>
&lt;/ul></description></item><item><title>A: エコシステム</title><link>https://progrhy.me/tech-notes/a/software/k8s/ecosystem/</link><pubDate>Thu, 07 May 2020 11:10:18 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/ecosystem/</guid><description>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/cvusk/items/100dfb955150ef8964e5">Kubernetesのエコシステムをまとめる - Qiita&lt;/a> 2018年5月時点&lt;/li>
&lt;li>&lt;a href="https://qiita.com/ynott/items/89941c36c606a8384028">k3s と MicroK8s の違いを考える - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="マニフェスト管理">マニフェスト管理&lt;/h2>
&lt;p>※ * は当サイト内のページ&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/kustomize/">kustomize&lt;/a> *&lt;/li>
&lt;li>&lt;a href="https://helm.sh/">Helm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ksonnet/ksonnet">ksonnet&lt;/a>
&lt;ul>
&lt;li>2019年2月で更新が止まっている。参考: &lt;a href="https://tanzu.vmware.com/content/blog/welcoming-heptio-open-source-projects-to-vmware">Welcoming Heptio Open Source Projects to VMware&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="クラスタ構築">クラスタ構築&lt;/h2>
&lt;ul>
&lt;li>kubeadm &amp;hellip; 公式&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://knowledge.sakura.ad.jp/20955/">2019年版・Kubernetesクラスタ構築入門 | さくらのナレッジ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="開発テスト用">開発・テスト用&lt;/h3>
&lt;ul>
&lt;li>Minikube（See below）&lt;/li>
&lt;li>&lt;a href="https://kind.sigs.k8s.io/">Kind&lt;/a>
&lt;ul>
&lt;li>参考:
&lt;ul>
&lt;li>&lt;a href="https://speakerdeck.com/ytaka23/cicd-test-night-5th">Kind で量産する使い捨て Kubernetes #cicd_test_night / CICD Test Night 5th - Speaker Deck&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/Hiroyuki_OSAKI/items/2395e6bbb98856df12f3">kindで軽量テスト用Kubernetesクラスタを作る＆運用する時のTIPS - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://microk8s.io/">MicroK8s&lt;/a> &amp;hellip; Canonical社が出してるやつ
&lt;ul>
&lt;li>参考: &lt;a href="https://gihyo.jp/admin/serial/01/ubuntu-recipe/0560">第560回 microk8sでお手軽Kubernetes環境構築：Ubuntu Weekly Recipe｜gihyo.jp … 技術評論社&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="minikube">Minikube&lt;/h4>
&lt;p>&lt;a href="https://github.com/kubernetes/minikube">https://github.com/kubernetes/minikube&lt;/a>&lt;/p>
&lt;p>ローカルでKubernetesを動かすためのツール。&lt;br>
Linuxのみだが、ハイパーバイザを噛まさず、ローカルのdocker上に直接クラスタを構築することもできる。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/getting-started-guides/minikube/">https://kubernetes.io/docs/getting-started-guides/minikube/&lt;/a> &amp;hellip; 導入ガイド
&lt;ul>
&lt;li>※先にkubectlをインストールしておくこと&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/mumoshu/items/8f55ee830d8e5c172dd4">minikubeでローカルKubernetesクラスタを5分でつくる方法 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.1q77.com/2016/10/setup-kubernetes-1-4-using-minikube/">minikube でローカルでのテスト用 Kubernetes を構築 – 1Q77&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://reiki4040.hatenablog.com/entry/2017/04/11/221122">ローカルでkubernetesを動かせるminikubeを試す - 年中アイス&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="クライアント">クライアント&lt;/h2>
&lt;p>kubectlと周辺ツールについては&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/kubectl/">kubectl&lt;/a>を見よ。&lt;/p>
&lt;ul>
&lt;li>K9s &amp;hellip; See below&lt;/li>
&lt;/ul>
&lt;h3 id="k9s">K9s&lt;/h3>
&lt;p>&lt;a href="https://k9scli.io/">K9s - Manage Your Kubernetes Clusters In Style&lt;/a>&lt;/p>
&lt;p>Documents:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://k9scli.io/topics/install/">Install&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://k9scli.io/topics/commands/">Commands&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tech.enigmo.co.jp/entry/2019/12/17/090000">k9sで快適なk8sライフを送ろう！ - エニグモ開発者ブログ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="cli">CLI&lt;/h4>
&lt;p>オプション&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>オプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>--readonly&lt;/code>&lt;/td>
&lt;td>更新操作を無効にする&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>モニタリング用途で使う場合、 &lt;code>--readonly&lt;/code> をつけるべき&lt;/li>
&lt;/ul>
&lt;h4 id="インタラクティブモード">インタラクティブモード&lt;/h4>
&lt;p>&lt;code>k9s&lt;/code> コマンド起動後の操作&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>コマンド&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>:q[uit]&lt;/code>, &lt;code>Ctrl+c&lt;/code>&lt;/td>
&lt;td>終了&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;Esc&amp;gt;&lt;/code>&lt;/td>
&lt;td>元の画面に戻る&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>:ctx&lt;/code>&lt;/td>
&lt;td>context選択&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>:ns&lt;/code>&lt;/td>
&lt;td>namespace選択&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>/&lt;/code>&lt;/td>
&lt;td>リソースフィルタ。あいまい検索。 &lt;code>-l&lt;/code> でラベルセレクトも使える&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>d&lt;/code>, &lt;code>y&lt;/code>&lt;/td>
&lt;td>describe, YAMLを見る&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>e&lt;/code>&lt;/td>
&lt;td>編集&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>l&lt;/code>&lt;/td>
&lt;td>ログ表示&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+d&lt;/code>&lt;/td>
&lt;td>リソースを削除する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+k&lt;/code>&lt;/td>
&lt;td>リソースを停止（Kill）する（&lt;strong>確認ダイアログはない&lt;/strong>）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="cicd">CI/CD&lt;/h2>
&lt;p>※ * は当サイト内のページ&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://argoproj.github.io/argo-cd/">Argo CD&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://concourse-ci.org/">Concourse&lt;/a>
&lt;ul>
&lt;li>参考: &lt;a href="https://www.atmarkit.co.jp/ait/articles/1909/04/news005.html">Kubernetesを前提としたCI/CDパイプラインの具体例と、本番運用に必要なもの (1/2)：コンテナベースのCI/CD本番事例大解剖（3） - ＠IT&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://jenkins-x.io/">Jenkins X&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/kubernetes/test-infra/tree/master/prow">Prow&lt;/a>
&lt;ul>
&lt;li>参考: &lt;a href="https://developers.cyberagent.co.jp/blog/archives/22072/">KubernetesベースのCI/CDシステムProwに入門してみた | CyberAgent Developers Blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Skaffold（See below）&lt;/li>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/spinnaker/">Spinnaker&lt;/a> *&lt;/li>
&lt;li>&lt;a href="https://tekton.dev/">Tekton&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.inovex.de/blog/spinnaker-vs-argo-cd-vs-tekton-vs-jenkins-x/">Spinnaker vs. Argo CD vs. Tekton vs. Jenkins X: Cloud-Native CI/CD&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="skaffold">Skaffold&lt;/h3>
&lt;p>開発・本番向けにKubernetesクラスタに継続的デリバリーを実施するコマンドラインツール。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/GoogleContainerTools/skaffold">https://github.com/GoogleContainerTools/skaffold&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://skaffold.dev/">https://skaffold.dev/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="その他">その他&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://k3s.io/">K3s: Lightweight Kubernetes&lt;/a> &amp;hellip; Rancherが出してる軽量版K8s&lt;/li>
&lt;li>&lt;a href="https://ksync.github.io/ksync/">ksync | Sync files between your local system and a kubernetes cluster.&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: エディタ</title><link>https://progrhy.me/tech-notes/a/program/vim/edit/</link><pubDate>Tue, 05 May 2020 14:04:38 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/vim/edit/</guid><description>
&lt;p>エディタを起動した後の使い方。&lt;br>
主にファイル編集に関わる操作。&lt;/p>
&lt;h2 id="全行の削除">全行の削除&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-vim" data-lang="vim">&lt;span style="color:#8f5902;font-style:italic">&amp;#34; 全行削除&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>%&lt;span style="color:#000">d&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://makaaso.hatenablog.com/entry/2015/04/24/221955">vim - 全行削除コマンド - IT Notebook&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="全行のインデント">全行のインデント&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-vim" data-lang="vim">&lt;span style="color:#8f5902;font-style:italic">&amp;#34; ファイル全体をインデント&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">gg&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#000">G&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://cl.pocari.org/2002-12-06-9.html">cl.pocari.org - Vim でインデントを整える&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="テキスト検索">テキスト検索&lt;/h2>
&lt;ul>
&lt;li>ノーマルモードで &lt;code>/&lt;/code> を打って検索。&lt;/li>
&lt;li>&lt;code>/\c&lt;/code> で始めると大文字小文字を区別せずに検索&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/shoma2da/items/23009d4e1a90c5fe5c31">Vim内で検索するときに大文字小文字を気にしない（ignore case）する方法 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="タブ文字の入力">タブ文字の入力&lt;/h2>
&lt;p>&lt;code>:set expandtab&lt;/code> （ &lt;code>:set et&lt;/code> ）設定の時でも、 &lt;code>Ctrl+v Tab&lt;/code> で入力できる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://nanasi.jp/articles/howto/editing/et-inserttab.html">:set expandtab（:set et）設定の時に、タブ文字を挿入する — 名無しのvim使い&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="改行文字の置換挿入削除">改行文字の置換（挿入/削除）&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">; &lt;span style="color:#000">改行を削除&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">s&lt;/span>&lt;span style="color:#4e9a06">/\n/&lt;/span>/&lt;span style="color:#000">g&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>; &lt;span style="color:#000">改行を挿入&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">s&lt;/span>&lt;span style="color:#4e9a06">//&lt;/span>\&lt;span style="color:#000">r&lt;/span>/&lt;span style="color:#000">g&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See &lt;a href="https://qiita.com/kiduki/items/df724a7a7ae50e70c08c">vimの置換で改行を(挿入|削除)する - Qiita&lt;/a>&lt;/p></description></item><item><title>A: IntelliJ IDEA</title><link>https://progrhy.me/tech-notes/a/program/idea/</link><pubDate>Wed, 29 Apr 2020 10:44:28 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/idea/</guid><description>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>画面分割 &amp;hellip; &lt;code>Window &amp;gt; Editor Tabs &amp;gt; (Split Vertically|Split Horizontally)&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/pipi_taro/items/859d445960bb79a3ac78">IntelliJの使い方 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="file-typeの関連付け">File Typeの関連付け&lt;/h3>
&lt;p>&lt;code>Preferences &amp;gt; Editor &amp;gt; File Types&lt;/code> で関連付けを設定できる。&lt;br>
まだ関連付けがない拡張子のファイルであれば、エディタ上で右クリックして「Associate File Type」を選んで設定することもできる。&lt;/p>
&lt;h2 id="plugins">Plugins&lt;/h2>
&lt;h3 id="file-watchers">File Watchers&lt;/h3>
&lt;p>ファイルを監視して自動で実行されるアクションを設定できる。&lt;br>
例えば、ファイルの変更を監視してコードフォーマッタを適用するとか。&lt;/p>
&lt;p>&lt;a href="https://pleiades.io/help/idea/using-file-watchers.html">ファイル監視 - 公式ヘルプ | IntelliJ IDEA&lt;/a>&lt;/p>
&lt;h2 id="how-to-upgrade">How to Upgrade&lt;/h2>
&lt;h3 id="ubuntu">Ubuntu&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/memo/2020/20200429/#ubuntu-1804%E3%81%A7intellij-idea%E3%82%9220201%E3%81%AB%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88">2020年に2018年版から2020.1にアップデートしたときのログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sites.google.com/site/progrhymetechwiki/home/memo/2018/20180331#TOC-Ubuntu-16.04-IntelliJ-IDEA-">2018年に2017年版から2018.1にアップデートしたときのログ&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: 言語仕様</title><link>https://progrhy.me/tech-notes/a/program/lang/go/spec/</link><pubDate>Sun, 26 Apr 2020 08:10:52 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/go/spec/</guid><description>
&lt;h2 id="リテラル">リテラル&lt;/h2>
&lt;h3 id="文字列">文字列&lt;/h3>
&lt;p>&lt;a href="https://golang.org/ref/spec#String_literals">https://golang.org/ref/spec#String_literals&lt;/a>&lt;/p>
&lt;p>&lt;code>`foo`&lt;/code> &amp;hellip; raw string literal. ヒアドキュメントのように使える。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">help&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`Usage:
&lt;/span>&lt;span style="color:#4e9a06"> hogehoge
&lt;/span>&lt;span style="color:#4e9a06"> fugafuga
&lt;/span>&lt;span style="color:#4e9a06">`&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">help&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rune">rune&lt;/h3>
&lt;p>&lt;a href="https://golang.org/ref/spec#Rune_literals">https://golang.org/ref/spec#Rune_literals&lt;/a>&lt;/p>
&lt;p>int32のaliasで、Unicode文字を扱うためのもの。&lt;/p>
&lt;p>&lt;code>'x'&lt;/code>, &lt;code>'\n'&lt;/code> のように、シングルクォートで囲んで表現する。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/seihmd/items/4a878e7fa340d7963fee">Goのruneを理解するためのUnicode知識 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="変数">変数&lt;/h2>
&lt;p>&lt;a href="https://golang.org/ref/spec#Variables">https://golang.org/ref/spec#Variables&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// 型が同じものをまとめて宣言
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">c&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">python&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">java&lt;/span> &lt;span style="color:#204a87;font-weight:bold">bool&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 宣言と同時に初期化
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">j&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="定数">定数&lt;/h3>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">Pi&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3.14&lt;/span>
&lt;span style="color:#000">Big&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>文字(character)、文字列(string)、boolean、数値(numeric)のみで使える&lt;/li>
&lt;li>&lt;code>:=&lt;/code> を使って宣言できない&lt;/li>
&lt;li>数値の定数は高精度な値。intの上限を越える値も保持できる&lt;/li>
&lt;/ul>
&lt;h3 id="変数のエクスポート">変数のエクスポート&lt;/h3>
&lt;p>&lt;a href="https://golang.org/ref/spec#Exported_identifiers">https://golang.org/ref/spec#Exported_identifiers&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">foo&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">privateVar&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;this is private&amp;#34;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// パッケージ外から見えない
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">PublicVar&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;this is public&amp;#34;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// パッケージ外から見える
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// パッケージ外から見える
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Person&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Name&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// パッケージ外から見える
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">age&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// パッケージ外から見えない
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// パッケージ外から見えない
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">ninja&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">skill&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">Skill&lt;/span>
&lt;span style="color:#000">hp&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://d.hatena.ne.jp/ryochack/20120115/1326567659" title="Go言語のスコープについて - ryochack.clipboard">Go言語のスコープについて - ryochack.clipboard&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/24837432/capitals-in-struct-fields">json - Capitals in struct fields - Stack Overflow&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="ゼロ値">ゼロ値&lt;/h3>
&lt;p>変数に初期値を与えずに宣言すると、ゼロ値が与えられる。&lt;br>
型によって以下のようになる:&lt;/p>
&lt;ul>
&lt;li>数値型（int, floatなど）: &lt;code>0&lt;/code>&lt;/li>
&lt;li>bool型: &lt;code>false&lt;/code>&lt;/li>
&lt;li>string型: &amp;quot;&amp;rdquo; （空文字列）&lt;/li>
&lt;li>ポインタ型: &lt;code>nil&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="データ型">データ型&lt;/h2>
&lt;p>&lt;a href="https://golang.org/ref/spec#Types">https://golang.org/ref/spec#Types&lt;/a>&lt;/p>
&lt;h3 id="基本型">基本型&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">bool&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int8&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int16&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int32&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int64&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">uint&lt;/span> &lt;span style="color:#204a87;font-weight:bold">uint8&lt;/span> &lt;span style="color:#204a87;font-weight:bold">uint16&lt;/span> &lt;span style="color:#204a87;font-weight:bold">uint32&lt;/span> &lt;span style="color:#204a87;font-weight:bold">uint64&lt;/span> &lt;span style="color:#204a87;font-weight:bold">uintptr&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">byte&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// uint8 の別名
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">rune&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// int32 の別名
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// Unicode のコードポイントを表す
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">float32&lt;/span> &lt;span style="color:#204a87;font-weight:bold">float64&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">complex64&lt;/span> &lt;span style="color:#204a87;font-weight:bold">complex128&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配列スライス">配列・スライス&lt;/h3>
&lt;p>配列は固定長。スライスは可変長。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">a&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 配列
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#000">s1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// スライス
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">s2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">6&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 構造体のスライス
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">ss&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">i&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#000">b&lt;/span> &lt;span style="color:#204a87;font-weight:bold">bool&lt;/span>
&lt;span style="color:#000;font-weight:bold">}{&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">7&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">11&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">13&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// スライスの結合
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">s1&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">s1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">s1&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">s1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">s2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// スライス同士の結合では &amp;#34;...&amp;#34; が必要
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;ldquo;Slicing&amp;quot;というテクニックで配列をスライスに変換できる。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">a&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">byte&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;b&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;c&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;d&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;e&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">s&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">a&lt;/span>&lt;span style="color:#000;font-weight:bold">[:]&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// aを参照するスライス
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.golang.org/go-slices-usage-and-internals" title="Go Slices: usage and internals - The Go Blog">Go Slices: usage and internals - The Go Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://dibtp.hateblo.jp/entry/2014/07/06/190804" title="Go言語のArrayとSliceについて - done is better than perfect">Go言語のArrayとSliceについて - done is better than perfect&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/hash/items/eb7d780c57fe245a9ae7" title="Goでsliceに要素追加, slice同士の結合 - Qiita">Goでsliceに要素追加, slice同士の結合 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="map">map&lt;/h3>
&lt;p>初期値はnilで、データを入れようとするとパニックが起こるので、事前に割当てが必要。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// NG
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">ages&lt;/span> &lt;span style="color:#204a87;font-weight:bold">map&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#000">ages&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;carol&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">21&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// OK
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">ages&lt;/span> &lt;span style="color:#204a87;font-weight:bold">map&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#000">ages&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">make&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">map&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">ages&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;carol&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">21&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// OK
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">ages&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#204a87">make&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">map&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">ages&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;carol&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">21&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="要素取得時のヒット検査">要素取得時のヒット検査&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">age&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ok&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">ages&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;bob&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">ok&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// hit
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// miss
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="構造体">構造体&lt;/h3>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Vertex&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">X&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#000">Y&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000">v&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">Vertex&lt;/span>&lt;span style="color:#000;font-weight:bold">{}&lt;/span>
&lt;span style="color:#000">v&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">X&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>
&lt;span style="color:#000">p&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">v&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// ポインタ
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">p&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Y&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1e9&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// ポインタでも . でメンバ変数にアクセスできる
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">v&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//=&amp;gt; {5 1000000000}
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="初期化">初期化&lt;/h4>
&lt;p>構造体の初期化方法を示すサンプルコード:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// 例
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Foo&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Name&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;span style="color:#000">Age&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// (1)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">f&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">Foo&lt;/span>&lt;span style="color:#000;font-weight:bold">{}&lt;/span>
&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Name&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;foo&amp;#34;&lt;/span>
&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Age&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// (2)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">f&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">Foo&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 全てのフィールドの指定が必要
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// (3)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">f&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">Foo&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#000">Age&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">Name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// 任意フィールドの省略が可能。順番も入れ替え可能
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>もし構造体に初期値を設定したい場合、コンストラクタ的な専用の関数を作る必要があるっぽい。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://qiita.com/cotrpepe/items/b8e7f70f27813a846431" title="[Go] 構造体の初期化方法まとめ - Qiita">[Go] 構造体の初期化方法まとめ - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://gitpub.hatenablog.com/entry/2015/01/24/213223" title="【Go】structにデフォルトの値を設定したい - /dev/null">【Go】structにデフォルトの値を設定したい - /dev/null&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="型変換">型変換&lt;/h3>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">42&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">f&lt;/span> &lt;span style="color:#204a87;font-weight:bold">float64&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">float64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">u&lt;/span> &lt;span style="color:#204a87;font-weight:bold">uint&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">uint&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// より縮めて下のように書ける
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">42&lt;/span>
&lt;span style="color:#000">f&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#204a87">float64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">u&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#204a87">uint&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="型宣言">型宣言&lt;/h3>
&lt;p>&lt;a href="https://golang.org/ref/spec#Type_declarations">https://golang.org/ref/spec#Type_declarations&lt;/a>&lt;/p>
&lt;p>基底型に別名をつけることができる。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// 組み込み型を基にする
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">MyInt&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 他 パッケージ 型を基にする
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">MyWriter&lt;/span> &lt;span style="color:#000">io&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Writer&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 型リテラルを基にする
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Person&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">Name&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="型エイリアス">型エイリアス&lt;/h4>
&lt;p>型の別名を定義できる。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Applicant&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">http&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Client&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://text.baldanders.info/golang/go-1_9-and-type-alias/">Go 1.9 と Type Alias — プログラミング言語 Go | text.Baldanders.info&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ポインタ">ポインタ&lt;/h2>
&lt;p>&lt;a href="https://golang.org/ref/spec#Pointer_types">https://golang.org/ref/spec#Pointer_types&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;code>*p&lt;/code> はポインタ &lt;code>p&lt;/code> の指す変数の値を表す&lt;/li>
&lt;li>&lt;code>&amp;amp;v&lt;/code> は &lt;code>v&lt;/code> のポインタを表す&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">j&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">42&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2701&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">p1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// declare a pointer
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#000">p1&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">i&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// point to i
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">p1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// read i through the pointer
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">p1&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">21&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// set i through the pointer
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// see the new value of i
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#000">p2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">j&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// point to j
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">p2&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">p2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">37&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// divide j through the pointer
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">j&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// see the new value of j
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>入門ガイド:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gobyexample.com/pointers">Go by Example: Pointers&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://qiita.com/ruiu/items/e60aa707e16f8f6dccd8" title="Goでxxxのポインタを取っているプログラムはだいたい全部間違っている - Qiita">Goでxxxのポインタを取っているプログラムはだいたい全部間違っている - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="制御構文">制御構文&lt;/h2>
&lt;h3 id="switch">switch&lt;/h3>
&lt;p>&lt;a href="https://golang.org/ref/spec#Switch_statements">https://golang.org/ref/spec#Switch_statements&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">switch&lt;/span> &lt;span style="color:#000">tag&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">s3&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">s1&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">6&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">s2&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">switch&lt;/span> &lt;span style="color:#000">x&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">f&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// missing switch expression means &amp;#34;true&amp;#34;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">x&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#000">x&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">x&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">switch&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">x&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">y&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">f1&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">x&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#000">z&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">f2&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">x&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">f3&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 型で分岐
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span>&lt;span style="color:#000;font-weight:bold">{}&lt;/span>
&lt;span style="color:#000">i&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">switch&lt;/span> &lt;span style="color:#000">v&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#000;font-weight:bold">.(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">v&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">v&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;hoge&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;default&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ループ">ループ&lt;/h3>
&lt;p>&lt;code>for&lt;/code> しかない&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 無限ループ
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#000">i&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#000">i&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">++&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// iが[1, 100)の間
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// collection要素のイテレーション
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">dayOfWeeks&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;月&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;火&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;水&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;木&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;金&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;土&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;日&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">arrayIndex&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">dayOfWeek&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">range&lt;/span> &lt;span style="color:#000">dayOfWeeks&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Printf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;%d番目の曜日は%s曜日です。\n&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">arrayIndex&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">dayOfWeek&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>※mapをイテレーションする場合、取り出し順はランダムになる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://cuto.unirita.co.jp/gostudy/post/loop-statement/">繰り返し - はじめてのGo言語&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="関数">関数&lt;/h2>
&lt;p>&lt;a href="https://golang.org/ref/spec#Function_types">https://golang.org/ref/spec#Function_types&lt;/a>&lt;/p>
&lt;p>シグネチャの例:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">x&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 連続する複数の引数の型が同じときは、最後の型以外を省略できる
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">a&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">z&lt;/span> &lt;span style="color:#204a87;font-weight:bold">float32&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">bool&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">a&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">b&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">z&lt;/span> &lt;span style="color:#204a87;font-weight:bold">float32&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">bool&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">prefix&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">values&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">a&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">b&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">z&lt;/span> &lt;span style="color:#204a87;font-weight:bold">float64&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">opt&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#204a87;font-weight:bold">interface&lt;/span>&lt;span style="color:#000;font-weight:bold">{})&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">success&lt;/span> &lt;span style="color:#204a87;font-weight:bold">bool&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">float64&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">float64&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">n&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">p&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>入門ガイド:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gobyexample.com/functions">Go by Example: Functions&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="日付時刻">日付・時刻&lt;/h2>
&lt;h3 id="日時フォーマット">日時フォーマット&lt;/h3>
&lt;p>Go言語の日時のフォーマット関数（timeパッケージの&lt;a href="https://golang.org/pkg/time/#Time.Format">func (Time) Format)&lt;/a>）に与えられる引数は、2006-01-02T15:04:05（月曜）の日時となっている。&lt;/p>
&lt;p>これはアメリカで時刻を表記する際の順番で、1月2日午後3時4分5秒2006年となり、わかりやすかったからだそうだ。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/ruiu/items/5936b4c3bd6eb487c182">Goのtimeパッケージのリファレンスタイム（2006年1月2日）は何の日？ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="goroutine">goroutine&lt;/h2>
&lt;p>OSのネイティブスレッドより扱いやすくしたもの。
スレッドとファイバーの良いとこ取り。
&lt;code>go&lt;/code> というキーワードを付けるとgoroutineが作られる。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// 別のgoroutineを作って既存関数を実行
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">go&lt;/span> &lt;span style="color:#000">Function&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// 別のgoroutineを作って、無名関数を実行
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">go&lt;/span> &lt;span style="color:#204a87;font-weight:bold">func&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// goroutine内で実行したい処理
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/najeira/items/47539ab346fa0c00dc62">Go言語で非同期処理の結果を受け取る - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="チャネル">チャネル&lt;/h2>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// バッファなし
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">tasks&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#204a87">make&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">chan&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// バッファ付き
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">tasks&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#204a87">make&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">chan&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// データ送信
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">tasks&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;cmake ..&amp;#34;&lt;/span>
&lt;span style="color:#000">tasks&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;cmake . --build Debug&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// データ受信
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">task&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span>&lt;span style="color:#000">tasks&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// データ受信 + クローズ判定
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">task&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ok&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span>&lt;span style="color:#000">tasks&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// データを読み捨てる
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span>&lt;span style="color:#000">wait&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Examples:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gobyexample.com/channels">https://gobyexample.com/channels&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="select文">select文&lt;/h3>
&lt;p>複数のチャネルを待機する場合に使う。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// ブロックせずに受信し、かつ、チャネルがクローズ済みかどうかチェックする
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">select&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">v&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ok&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span> &lt;span style="color:#000">ch&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">ok&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">v&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;closed&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;no value&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ブロックせずに送信
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">select&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">ch&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span> &lt;span style="color:#000">v&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sent&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;no capacity&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/najeira/items/71a0bcd079c9066347b4">Go言語でチャネルとselect - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cuto.unirita.co.jp/gostudy/post/go_select/">select - はじめてのGo言語&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ビルトイン関数">ビルトイン関数&lt;/h2>
&lt;h3 id="append">append&lt;/h3>
&lt;p>&lt;a href="https://golang.org/pkg/builtin/#append">https://golang.org/pkg/builtin/#append&lt;/a>&lt;/p>
&lt;p>&lt;code>func append(slice []Type, elems ...Type) []Type&lt;/code>&lt;/p>
&lt;p>sliceに要素、またはsliceを結合し、新たなsliceを返す。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">slice&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">slice&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">elem1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">elem2&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">slice&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">slice&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">anotherSlice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="パッケージ">パッケージ&lt;/h2>
&lt;h3 id="init関数による初期化">init()関数による初期化&lt;/h3>
&lt;ul>
&lt;li>ソースファイルに1つ &lt;code>func init()&lt;/code> を記述できる&lt;/li>
&lt;li>ソースファイル読み込み時に1回実行される&lt;/li>
&lt;li>importされるpackageのinit()が先に実行される
&lt;ul>
&lt;li>pがqをimportしているとき、pのinit()より先にqのinit()が完了している&lt;/li>
&lt;li>mainパッケージのinit()が最後に実行される&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://golang.jp/tag/effective-go/page/2" title="Effective Go - golang.jp">Effective Go - golang.jp&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: 標準パッケージ</title><link>https://progrhy.me/tech-notes/a/program/lang/go/std-pkg/</link><pubDate>Sun, 31 May 2020 16:18:58 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/go/std-pkg/</guid><description>
&lt;h2 id="context">context&lt;/h2>
&lt;p>&lt;a href="https://golang.org/pkg/context/">https://golang.org/pkg/context/&lt;/a>&lt;/p>
&lt;p>Webサーバとかで引きずり回すコンテキスト。&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">ctx&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Background&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Contextな構造体を生成&lt;/span>
&lt;span style="color:#a40000">##&lt;/span> &lt;span style="color:#000">タイムアウト付きコンテキストを生成&lt;/span>&lt;span style="color:#a40000">。&lt;/span>&lt;span style="color:#000">cancelはタイムアウト時に実行される&lt;/span>
&lt;span style="color:#000">ctx2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">cancel&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithDeadline&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ctx&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Now&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">Add&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">timeout&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">defer&lt;/span> &lt;span style="color:#000">cancel&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://deeeet.com/writing/2016/07/22/context/" title="Go1.7のcontextパッケージ | SOTA">Go1.7のcontextパッケージ | SOTA&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="errors">errors&lt;/h2>
&lt;p>&lt;a href="https://golang.org/pkg/errors/">https://golang.org/pkg/errors/&lt;/a>&lt;/p>
&lt;p>Go 1.13で &lt;code>.Is&lt;/code>, &lt;code>.As&lt;/code>, &lt;code>.Unwrap&lt;/code> が加わり、かなり強化されたようだ。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://syfm.hatenablog.com/entry/2019/12/27/193348">pkg/errors から徐々に Go 1.13 errors へ移行する - blog.syfm&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="flag">flag&lt;/h2>
&lt;p>&lt;a href="https://golang.org/pkg/flag/">https://golang.org/pkg/flag/&lt;/a>&lt;/p>
&lt;p>コマンドラインオプションをパースしてくれる君。&lt;/p>
&lt;ul>
&lt;li>ヘルプ付き&lt;/li>
&lt;li>ショートオプションとロングオプション両対応したいときはちょっとめんどい（後述）&lt;/li>
&lt;/ul>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">verbose&lt;/span> &lt;span style="color:#204a87;font-weight:bold">bool&lt;/span>
&lt;span style="color:#000">num&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#000">text&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// flag登録
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// 第2引数 ... コマンドラインオプション
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// 第3引数 ... デフォルト値
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// 第4引数 ... ヘルプで表示される文言
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">BoolVar&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">verbose&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;v&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Verbose output&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">IntVar&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">verbose&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;n&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Number&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">StringVar&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">verbose&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;t&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Text&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// コマンド引数のパース
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Parse&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ロングオプション対応するときは、上の例だと&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">BoolVar&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">verbose&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;verbose&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Verbose output&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>を足すと &lt;code>-v&lt;/code> と合わせて &lt;code>-verbose&lt;/code> でも行けるようになる。&lt;br>
ただちょっとコードの見た目がアレな感じになるので、そこまで行くと &lt;code>flags&lt;/code> なりを使うかーという気持ちにならないでもない。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://ryochack.hatenablog.com/entry/2013/04/17/232753" title="Go言語のflagパッケージを使う - uragami note">Go言語のflagパッケージを使う - uragami note&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gobyexample.com/command-line-flags">Go by Example: Command-Line Flags&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="サブコマンド対応">サブコマンド対応&lt;/h3>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">main&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;flag&amp;#34;&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;os&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">fooCmd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewFlagSet&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ExitOnError&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fooEnable&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">fooCmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Bool&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;enable&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;enable&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fooName&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">fooCmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">barCmd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NewFlagSet&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;bar&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ExitOnError&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">barLevel&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">barCmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Int&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;level&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;level&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#204a87">len&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Args&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;expected &amp;#39;foo&amp;#39; or &amp;#39;bar&amp;#39; subcommands&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Exit&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">switch&lt;/span> &lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Args&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">fooCmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Parse&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Args&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">:])&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;subcommand &amp;#39;foo&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34; enable:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">fooEnable&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34; name:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">fooName&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34; tail:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">fooCmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Args&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;bar&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">barCmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Parse&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Args&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">:])&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;subcommand &amp;#39;bar&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34; level:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">barLevel&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34; tail:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">barCmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Args&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;expected &amp;#39;foo&amp;#39; or &amp;#39;bar&amp;#39; subcommands&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Exit&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gobyexample.com/command-line-subcommands">Go by Example: Command-Line Subcommands&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="ヘルプメッセージのカスタマイズ">ヘルプメッセージのカスタマイズ&lt;/h3>
&lt;p>パッケージ変数 &lt;code>Usage&lt;/code> に独自関数を設定することでカスタマイズできる。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">usage&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Fprintln&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Stderr&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;blah blah blah&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Fprintf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Stderr&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Usage of %s:\n&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Args&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>
&lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">PrintDefaults&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Usage&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">usage&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="func-arg">func Arg&lt;/h3>
&lt;p>&lt;code>func Arg(i int) string&lt;/code>&lt;/p>
&lt;p>フラグでないi番目のコマンドライン引数を返す。
&lt;code>Arg(0)&lt;/code> が最初の引数。&lt;/p>
&lt;h3 id="func-args">func Args&lt;/h3>
&lt;p>&lt;code>func Args() []string&lt;/code>&lt;/p>
&lt;p>フラグでないコマンドライン引数のリストを返す。&lt;/p>
&lt;h3 id="func-flagset-narg">func (*FlagSet) NArg&lt;/h3>
&lt;p>&lt;code>func (f *FlagSet) NArg() int&lt;/code>&lt;/p>
&lt;p>フラグ処理後に残った引数の数を返す。&lt;/p>
&lt;h2 id="fmt">fmt&lt;/h2>
&lt;p>&lt;a href="https://pkg.go.dev/fmt">https://pkg.go.dev/fmt&lt;/a>&lt;/p>
&lt;p>書式付きの入出力機能を提供するパッケージ。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">age&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Kim&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">22&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;is&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">age&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;years old.&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">_&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Printf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;%s is %d years old.\n&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">age&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Fprintln&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Stderr&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Error occured!!&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Fprintf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Stderr&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Fprintf: %v\n&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="log">log&lt;/h2>
&lt;p>&lt;a href="https://golang.org/pkg/log/">https://golang.org/pkg/log/&lt;/a>&lt;/p>
&lt;p>ロガー。ログレベルの概念はない。&lt;/p>
&lt;p>&lt;code>log.Print&lt;/code> など、標準のロガーを使うやり方と、 &lt;code>log.New(...)&lt;/code> で &lt;code>Logger&lt;/code> を作って使うやり方がある。&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// 標準のロガーを使う
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">SetPrefix&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;[info] &amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Printf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;a = %v&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">a&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ロガーを生成して使う
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">logger&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Stderr&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;[error] &amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">LstdFlags&lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#000">flag&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Llongfile&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">logger&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Fatalf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Error! %v&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// ログ出力後、 os.Exit(1)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://blog.satotaichi.info/logging-frameworks-for-go/" title="go言語におけるロギングについて">go言語におけるロギングについて&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="os">os&lt;/h2>
&lt;p>&lt;a href="https://golang.org/pkg/os/">https://golang.org/pkg/os/&lt;/a>&lt;/p>
&lt;h3 id="環境変数の操作">環境変数の操作&lt;/h3>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gobyexample.com/environment-variables" title="Go by Example: Environment Variables">Go by Example: Environment Variables&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="ファイル操作">ファイル操作&lt;/h3>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// ファイル内容読み取り
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">file&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Open&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">!=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87">panic&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">err&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">defer&lt;/span> &lt;span style="color:#000">file&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">close&lt;/span>
&lt;span style="color:#000">buf&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">ioutil&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ReadAll&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">file&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ファイル作成
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">file&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Create&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// エラー処理省略
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">defer&lt;/span> &lt;span style="color:#000">file&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">close&lt;/span>
&lt;span style="color:#000">err&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">file&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Write&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">text&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// ファイル or ディレクトリ削除
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">os&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Remove&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="func-getenv">func Getenv&lt;/h3>
&lt;p>&lt;a href="https://golang.org/pkg/os/#Getenv">https://golang.org/pkg/os/#Getenv&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">Getenv&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">key&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>keyの環境変数を返す。&lt;/p>
&lt;h3 id="func-getwd">func Getwd&lt;/h3>
&lt;p>&lt;a href="https://golang.org/pkg/os/#Getwd">https://golang.org/pkg/os/#Getwd&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">Getwd&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dir&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#204a87;font-weight:bold">error&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>カレントディレクトリの絶対パスを返す。&lt;/p>
&lt;h3 id="type-file">type File&lt;/h3>
&lt;p>&lt;a href="https://golang.org/pkg/os/#File">https://golang.org/pkg/os/#File&lt;/a>&lt;/p>
&lt;p>オープンしたファイルディスクリプタを表現する構造体。&lt;/p>
&lt;h4 id="func-create">func Create&lt;/h4>
&lt;p>&lt;a href="https://golang.org/pkg/os/#Create">https://golang.org/pkg/os/#Create&lt;/a>&lt;/p>
&lt;p>ファイル作成。&lt;/p>
&lt;h2 id="osexec">os/exec&lt;/h2>
&lt;p>&lt;a href="https://golang.org/pkg/os/exec/">https://golang.org/pkg/os/exec/&lt;/a>&lt;/p>
&lt;p>コマンド実行で使う。&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">cmd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">exec&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Command&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;echo stdout; echo 1&amp;gt;&amp;amp;2 stderr&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// コマンド実行
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">cmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Run&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// コマンド実行し、stdoutを取得
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">out&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">cmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Output&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// stdout, stderrをまとめて受け取る
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">stdoutStderr&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">err&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">cmd&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">CombinedOutput&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pathfilepath">path/filepath&lt;/h2>
&lt;p>&lt;a href="https://golang.org/pkg/path/filepath/">https://golang.org/pkg/path/filepath/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;code>func Base&lt;/code> &amp;hellip; basenameコマンド相当&lt;/li>
&lt;li>&lt;code>func Dir&lt;/code> &amp;hellip; dirnameコマンド相当&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;On Unix:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filepath&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Base&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/foo/bar/baz.js&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//=&amp;gt; baz.js
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filepath&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Base&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/foo/bar/baz/&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//=&amp;gt; baz
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filepath&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Base&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;dev.txt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//=&amp;gt; dev.txt
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filepath&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Dir&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/foo/bar/baz.js&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//=&amp;gt; /foo/bar
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filepath&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Dir&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/foo/bar/baz/&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//=&amp;gt; /foo/bar/baz
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filepath&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Dir&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;dev.txt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//=&amp;gt; .
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filepath&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Dir&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;../todo.txt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//=&amp;gt; ..
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="func-walk">func Walk&lt;/h3>
&lt;p>&lt;code>func Walk(root string, walkFn WalkFunc) error&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Perl5の &lt;code>File::Find::find&lt;/code> に似てる。&lt;/li>
&lt;li>ディレクトリを再帰的に探索して、関数 &lt;code>WalkFunc&lt;/code> を実行&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/6608873/file-system-scanning-in-golang">https://stackoverflow.com/questions/6608873/file-system-scanning-in-golang&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="time">time&lt;/h2>
&lt;p>&lt;a href="https://golang.org/pkg/time/">https://golang.org/pkg/time/&lt;/a>&lt;/p>
&lt;p>SYNOPSYS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">td&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">30&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Seconds&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Duration型で30秒&lt;/span>
&lt;span style="color:#000">t1&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Now&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#000">現在日時を&lt;/span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Time型で返す&lt;/span>
&lt;span style="color:#000">t2&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#000">t1&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Add&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">td&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#a40000">#&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">30&lt;/span>&lt;span style="color:#000">秒後の日時を&lt;/span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Time型で&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Examples:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gobyexample.com/timeouts">https://gobyexample.com/timeouts&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="func-after">func After&lt;/h3>
&lt;p>&lt;a href="https://golang.org/pkg/time/#After">https://golang.org/pkg/time/#After&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">After&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">d&lt;/span> &lt;span style="color:#000">Duration&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span>&lt;span style="color:#204a87;font-weight:bold">chan&lt;/span> &lt;span style="color:#000">Time&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>タイムアウトを実現するときによく使われる。&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">select&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">m&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span>&lt;span style="color:#000">c&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#000">handle&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;-&lt;/span>&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">After&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Minute&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;timed out&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>More examples:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gobyexample.com/timeouts">https://gobyexample.com/timeouts&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: BIOS</title><link>https://progrhy.me/tech-notes/a/firmware/bios/</link><pubDate>Mon, 04 May 2020 08:43:11 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/firmware/bios/</guid><description>
&lt;p>&lt;a href="http://e-words.jp/w/BIOS.html">BIOS（Basic Input/Output System）とは - IT用語辞典 e-Words&lt;/a>より:&lt;/p>
&lt;blockquote>
&lt;p>パソコンなどの主基板（マザーボード）などに格納されたコンピュータプログラム（ファームウェア）の一種で、起動時のOSの読み込みや、接続された装置・機器に対する基本的な入出力制御などを行うもの。&lt;/p>
&lt;/blockquote></description></item><item><title>A: ConfigMap</title><link>https://progrhy.me/tech-notes/a/software/k8s/configmap/</link><pubDate>Mon, 04 May 2020 22:39:04 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/configmap/</guid><description>
&lt;p>See also &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/secret/">Secret&lt;/a>&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-11/">Kubernetes道場 11日目 - ConfigMap / Secretについて - Toku&amp;rsquo;s Blog&lt;/a>より&lt;/p>
&lt;blockquote>
&lt;p>ConfigMapやSecretはアプリケーションの設定やクレデンシャルをコンテナイメージから分離するために使われる。&lt;br>
ConfigMapやSecretをVolumeとして、または環境変数を通してPodに設定やクレデンシャルを渡す。&lt;/p>
&lt;/blockquote>
&lt;p>ConfigMapはSecretと違い、値をencodeせずに平文でYAMLに書くので、普通の設定ファイル的な位置づけ。&lt;/p>
&lt;blockquote>
&lt;p>A ConfigMap is an API object used to store non-confidential data in key-value pairs. Pods can consume ConfigMaps as environment variables, command-line arguments, or as configuration files in a volume .&lt;/p>
&lt;/blockquote>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/tkusumi/items/cf7b096972bfa2810800">Kubernetes: ConfigMap / Secret の内容を一度に環境変数として読み込む (envFrom) - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>公式サイトにいくつかのガイドやサンプルがある:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/">Configure a Pod to Use a ConfigMap - Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/tutorials/configuration/configure-redis-using-configmap/">Configuring Redis using a ConfigMap | Kubernetes&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Testing</title><link>https://progrhy.me/tech-notes/a/program/lang/go/test/</link><pubDate>Sun, 31 May 2020 16:18:23 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/go/test/</guid><description>
&lt;p>Goのテストに関する情報をまとめる。&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;ul>
&lt;li>基本的に、標準の &lt;a href="https://golang.org/pkg/testing/">testing&lt;/a> pkgを使う&lt;/li>
&lt;li>フレームワークは使わない。愚直に書く&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://future-architect.github.io/articles/20200601/">春の入門祭り 🌸 #01 Goのテストに入門してみよう！ | フューチャー技術ブログ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="テストデータを用意する">テストデータを用意する&lt;/h3>
&lt;p>testdata/ というディレクトリに入れる。&lt;br>
これはパッケージとみなされない。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://golang.org/cmd/go/#hdr-Test_packages">https://golang.org/cmd/go/#hdr-Test_packages&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="pkg">pkg&lt;/h2>
&lt;p>テストで使えるパッケージ。&lt;/p>
&lt;h3 id="googlego-cmp">google/go-cmp&lt;/h3>
&lt;p>&lt;a href="https://pkg.go.dev/github.com/google/go-cmp/cmp">https://pkg.go.dev/github.com/google/go-cmp/cmp&lt;/a>&lt;/p>
&lt;p>値の比較のためのユーティリティ。&lt;/p>
&lt;h2 id="topics">Topics&lt;/h2>
&lt;h3 id="goで結合統合外部テストを書く">Goで結合・統合・外部テストを書く&lt;/h3>
&lt;p>pkgに対する単体テスト以外のテストにもGoのtesting pkgを使うことができる。&lt;br>
やり方は簡単で、 &lt;code>package foo_test&lt;/code> な &lt;code>foo_test.go&lt;/code> を書くだけ。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">foo_test&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;testing&amp;#34;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">TestFoo&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">t&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">testing&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// テストコード
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://amzn.to/2tXDqfc">プログラミング言語Go&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="go-blog関連エントリ">Go Blog関連エントリ&lt;/h2>
&lt;ul>
&lt;li>2016-10-03 &lt;a href="https://blog.golang.org/subtests">Using Subtests and Sub-benchmarks - The Go Blog&lt;/a> &amp;hellip; Go 1.7で導入されたsubtests, sub-benchmarksについて&lt;/li>
&lt;li>2015-05-07 &lt;a href="https://blog.golang.org/examples">Testable Examples in Go - The Go Blog&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Container</title><link>https://progrhy.me/tech-notes/a/software/k8s/container/</link><pubDate>Mon, 04 May 2020 22:14:09 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/container/</guid><description>
&lt;p>Kubernetesにおいて、基本的にコンテナはPod内で定義され、実行される（はず）。&lt;/p>
&lt;p>See also &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/pod/">Pod&lt;/a>&lt;/p>
&lt;h2 id="cpuメモリの割当て">CPU/メモリの割当て&lt;/h2>
&lt;p>考え方やベストプラクティスについては&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/concept/#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%84pod%E3%81%B8%E3%81%AEcpu%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%AE%E5%89%B2%E5%BD%93%E3%81%A6">Concept#コンテナやpodへのcpuメモリの割当て&lt;/a>を見よ。&lt;/p>
&lt;h2 id="コマンド引数の定義">コマンド/引数の定義&lt;/h2>
&lt;p>See &lt;a href="https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes">https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes&lt;/a>&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Pod&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>command-demo&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">purpose&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>demonstrate-command&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>command-demo-container&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>debian&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">command&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;printenv&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">args&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;HOSTNAME&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;KUBERNETES_PORT&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">restartPolicy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>OnFailure&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="livenessreadiness-probes">liveness/readiness probes&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/">Configure Liveness, Readiness and Startup Probes - Kubernetes&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>ヘルスチェック的なもの。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-10/">Kubernetes道場 10日目 - LivenessProbe / ReadinessProbeについて - Toku&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="lifecycle-hooks">Lifecycle Hooks&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/">https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/&lt;/a>&lt;/p>
&lt;p>See also &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/pod/#%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB">Pod#ライフサイクル&lt;/a>&lt;/p>
&lt;p>以下のフックを仕込むことで、コマンド実行などが可能。&lt;/p>
&lt;ul>
&lt;li>PostStart&lt;/li>
&lt;li>PreStop &amp;hellip; 終了直前に実行される&lt;/li>
&lt;/ul>
&lt;p>詳細な仕様はAPIリファレンスを見よ。&lt;/p>
&lt;p>設定例:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Pod&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>lifecycle-demo&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>lifecycle-demo-container&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>httpd&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">lifecycle&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">preStop&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">exec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">command&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sleep 2; httpd -k graceful-stop; sleep 30&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">terminationGracePeriodSeconds&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">40&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://44smkn.hatenadiary.com/entry/2018/08/01/022312">pod(Kubernetes)のlifecycle.prestopの挙動 - １クール続けるブログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-06/">Kubernetes道場 6日目 - Init Container / Lifecycleについて - Toku&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: vimrc</title><link>https://progrhy.me/tech-notes/a/program/vim/vimrc/</link><pubDate>Tue, 05 May 2020 14:34:07 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/vim/vimrc/</guid><description>
&lt;p>Vimの設定ファイルであるvimrcについて。&lt;/p>
&lt;h2 id="どのファイルが読み込まれるか">どのファイルが読み込まれるか&lt;/h2>
&lt;p>&lt;a href="https://vim-jp.org/vimdoc-ja/starting.html#initialization">https://vim-jp.org/vimdoc-ja/starting.html#initialization&lt;/a>&lt;/p>
&lt;p>&lt;code>vim -u ${file}&lt;/code> で任意の設定ファイルを指定できる。&lt;/p>
&lt;h2 id="colorscheme">colorscheme&lt;/h2>
&lt;p>カラースキームを設定する。&lt;/p>
&lt;p>See also &lt;a href="#highlight">#highlight&lt;/a>&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#000">colorscheme&lt;/span> &lt;span style="color:#000">elflord&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>デフォルトで使えるもの:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ls /usr/share/vim/vim80/colors/&lt;/code> などとする。&lt;/li>
&lt;li>参考: &lt;a href="https://nanasi.jp/colorscheme/default_install.html">デフォルトでインストールされている — 名無しのvim使い&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>みんなが作ったカラースキームが載ってるサイト: &lt;a href="http://vimcolors.com/">http://vimcolors.com/&lt;/a>&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/sff1019/items/3f73856b78d7fa2731c7">vimのカラースキームの設定・編集方法（初心者〜上級者） - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="filetype">filetype&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#8f5902;font-style:italic">&amp;#34;filetype検出の有効化&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">filetype&lt;/span> &lt;span style="color:#000">on&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; プラグインやインデントのロードも有効化&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">filetype&lt;/span> &lt;span style="color:#000">plugin&lt;/span> &lt;span style="color:#000">indent&lt;/span> &lt;span style="color:#000">on&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; 拡張子によるfiletype検出の追加の例&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">autocmd&lt;/span> &lt;span style="color:#000">BufNewFile&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">BufRead&lt;/span> *.&lt;span style="color:#000">rb&lt;/span> &lt;span style="color:#000">setfiletype&lt;/span> &lt;span style="color:#000">ruby&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://wonderwall.hatenablog.com/entry/2016/03/20/222308">Vimメモ : filetypeの確認 - もた日記&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="highlight">highlight&lt;/h2>
&lt;p>&lt;a href="https://vim-jp.org/vimdoc-ja/syntax.html#:highlight">https://vim-jp.org/vimdoc-ja/syntax.html#:highlight&lt;/a>&lt;/p>
&lt;p>特定のグループの文字色を変える。&lt;br>
&lt;code>:highlight&lt;/code> で現在の設定を得ることができる。&lt;/p>
&lt;p>See also &lt;a href="#colorscheme">#colorscheme&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#8f5902;font-style:italic">&amp;#34; 構文&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; 特定のグループの設定を追加&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">hi&lt;/span>[&lt;span style="color:#000">ghlight&lt;/span>] {&lt;span style="color:#000">group&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">name&lt;/span>} {&lt;span style="color:#000">key&lt;/span>}&lt;span style="color:#000;font-weight:bold">=&lt;/span>{&lt;span style="color:#000">arg&lt;/span>}...&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; 特定のグループの設定をリセット&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">hi&lt;/span>[&lt;span style="color:#000">ghlight&lt;/span>] &lt;span style="color:#000">clear&lt;/span>{&lt;span style="color:#000">group&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">name&lt;/span>}&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; 例&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">highlight&lt;/span> &lt;span style="color:#000">Search&lt;/span> &lt;span style="color:#000">term&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">bold&lt;/span> &lt;span style="color:#000">ctermfg&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#000">Black&lt;/span> &lt;span style="color:#000">ctermbg&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#000">Blue&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="highlight-args">highlight-args&lt;/h3>
&lt;p>&lt;a href="https://vim-jp.org/vimdoc-ja/syntax.html#highlight-args">https://vim-jp.org/vimdoc-ja/syntax.html#highlight-args&lt;/a>&lt;/p>
&lt;p>&lt;code>highlight&lt;/code> コマンドに与える &lt;code>{key}={arg}&lt;/code> の引数の一部を下に示す。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>key&lt;/th>
&lt;th>端末種別&lt;/th>
&lt;th>args&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>term&lt;/td>
&lt;td>通常&lt;/td>
&lt;td>bold,italic,underline,reverse,NONEなど。NONEは属性リセット用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cterm&lt;/td>
&lt;td>色付き&lt;/td>
&lt;td>termと同じ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ctermfg&lt;/td>
&lt;td>色付き&lt;/td>
&lt;td>色名や番号を指定する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ctermbg&lt;/td>
&lt;td>色付き&lt;/td>
&lt;td>ctermfgと同じ&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="cterm-colors">cterm-colors&lt;/h3>
&lt;p>&lt;a href="https://vim-jp.org/vimdoc-ja/syntax.html#cterm-colors">https://vim-jp.org/vimdoc-ja/syntax.html#cterm-colors&lt;/a>&lt;/p>
&lt;p>ctermfgやctermbgの値には0〜15の色番号やBlack, Blueなどの色名を指定できる。&lt;/p>
&lt;p>色はVim上で &lt;code>:so $VIMRUNTIME/syntax/colortest.vim&lt;/code> を実行して確認できる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.wazalab.com/2018/10/01/vim%e3%81%ae%e6%a4%9c%e7%b4%a2%e5%8d%98%e8%aa%9e%e3%83%8f%e3%82%a4%e3%83%a9%e3%82%a4%e3%83%88%e6%99%82%e3%81%ae%e8%83%8c%e6%99%af%e8%89%b2%e3%81%ae%e5%a4%89%e6%9b%b4%e6%96%b9%e6%b3%95/">Vimの検索単語ハイライト時の背景色の変更方法 | Waza Lab&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="キーマッピング">キーマッピング&lt;/h2>
&lt;p>&lt;a href="https://vim-jp.org/vimdoc-ja/map.html">map - Vim日本語ドキュメント&lt;/a>&lt;/p>
&lt;h3 id="マップコマンド">マップコマンド&lt;/h3>
&lt;p>&lt;a href="https://vim-jp.org/vimdoc-ja/map.html#:map-commands">https://vim-jp.org/vimdoc-ja/map.html#:map-commands&lt;/a>&lt;/p>
&lt;p>構文:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#000">map&lt;/span> {&lt;span style="color:#000">lhs&lt;/span>} {&lt;span style="color:#000">rhs&lt;/span>} &lt;span style="color:#8f5902;font-style:italic">&amp;#34; キー入力 {lhs} を {rhs} に割り当てる&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">unmap&lt;/span> {&lt;span style="color:#000">lhs&lt;/span>} &lt;span style="color:#8f5902;font-style:italic">&amp;#34; キー入力 {lhs} のマッピングを削除&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>map, nmapなど（ &lt;code>noremap&lt;/code> じゃないやつ）:&lt;/p>
&lt;ul>
&lt;li>マップが使われたときに &lt;code>{rhs}&lt;/code> が評価され、再マップされる&lt;/li>
&lt;li>マップを入れ子にしたり、再帰的にできる&lt;/li>
&lt;/ul>
&lt;p>noremap, nnoremapなど:&lt;/p>
&lt;ul>
&lt;li>&lt;code>{rhs}&lt;/code> は再マップされないので、入れ子になったり再帰的になったりしない&lt;/li>
&lt;li>コマンドを再定義するときによく使われる&lt;/li>
&lt;/ul>
&lt;h3 id="マップとモード">マップとモード&lt;/h3>
&lt;p>&lt;a href="https://vim-jp.org/vimdoc-ja/map.html#:map-modes">https://vim-jp.org/vimdoc-ja/map.html#:map-modes&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>コマンド&lt;/th>
&lt;th>モード&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>map&lt;/code>, &lt;code>noremap&lt;/code>, &lt;code>unmap&lt;/code>&lt;/td>
&lt;td>ノーマル、ビジュアル、選択、オペレータ待機&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>nmap&lt;/code>, &lt;code>nnoremap&lt;/code>, &lt;code>nunmap&lt;/code>&lt;/td>
&lt;td>ノーマル&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>他に &lt;code>vmap&lt;/code>, &lt;code>smap&lt;/code>, &lt;code>xmap&lt;/code> などある。&lt;/p>
&lt;p>「オペレータ待機モード」は、&lt;code>d&lt;/code>、&lt;code>y&lt;/code>、&lt;code>c&lt;/code>などの後で、後続の操作を待機しているとき。&lt;/p>
&lt;h3 id="キーマッピングを確認する方法">キーマッピングを確認する方法&lt;/h3>
&lt;p>&lt;a href="https://qiita.com/wakaba260/items/99ea1b8042c98fb7df93">Vimのキーマッピングを確認する - Qiita&lt;/a>より。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#8f5902;font-style:italic">&amp;#34; デフォルトキーバインドの一覧&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">help&lt;/span> &lt;span style="color:#000">index&lt;/span>.&lt;span style="color:#000">txt&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; 自分で割り当てたキーマップの確認&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">map&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;#34; すべて確認&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">imap&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;#34; インサートモードだけ&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">nmap&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;#34; ノーマルモードだけ&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">vmap&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;#34; ヴィジュアルモードだけ&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">verbose&lt;/span> &lt;span style="color:#000">nmap&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;#34; 定義元ファイル情報も表示&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>A: Deployment</title><link>https://progrhy.me/tech-notes/a/software/k8s/deployment/</link><pubDate>Mon, 04 May 2020 21:45:16 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/deployment/</guid><description>
&lt;p>&lt;a href="https://kubernetes.io/ja/docs/concepts/workloads/controllers/deployment/">https://kubernetes.io/ja/docs/concepts/workloads/controllers/deployment/&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Deployment コントローラーはPodとReplicaSetの宣言的なアップデート機能を提供します。&lt;/p>
&lt;/blockquote>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>apps/v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Deployment&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>nginx-deployment&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>app&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">matchLabels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>nginx&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">replicas&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">template&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>nginx&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>nginx&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>nginx&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">containerPort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-08/">Kubernetes道場 8日目 - ReplicaSet / Deploymentについて - Toku&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="spec">spec&lt;/h2>
&lt;h3 id="strategy">strategy&lt;/h3>
&lt;p>更新戦略。&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">strategy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rollingUpdate&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">maxSurge&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">25&lt;/span>%&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">maxUnavailable&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">25&lt;/span>%&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>RollingUpdate&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上はデフォルト値。&lt;/p>
&lt;ul>
&lt;li>type &amp;hellip; &lt;code>Recreate&lt;/code> を選ぶと既存の全てのPodは新しいPodが作成される前に削除される&lt;/li>
&lt;li>&lt;code>maxSurge&lt;/code> &amp;hellip; 理想状態のPod数を超えて作成できる最大のPod数/割合。絶対数も指定可能&lt;/li>
&lt;li>&lt;code>maxUnavailable&lt;/code> &amp;hellip; 更新中に利用不可となる最大のPod数/割合。絶対数も指定可能
&lt;ul>
&lt;li>本番ではキャパシティが低下しないように &lt;code>0&lt;/code> にしておいた方が良さそう。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/TakiTake@github/items/bfc977baf4b909b1e118">KubernetesのRolling updateを安全に行う - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rahmonov.me/posts/zero-downtime-deployment-with-kubernetes/">Zero Downtime Deployment with Kubernetes&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Cargo</title><link>https://progrhy.me/tech-notes/a/program/lang/rust/cargo/</link><pubDate>Sat, 30 May 2020 09:37:39 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/rust/cargo/</guid><description>
&lt;h2 id="about">About&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/cargo/">https://doc.rust-lang.org/cargo/&lt;/a>&lt;/p>
&lt;p>CargoはRustのパッケージ管理ツール。
以下の機能を有する:&lt;/p>
&lt;ul>
&lt;li>依存パッケージのダウンロード&lt;/li>
&lt;li>コンパイル&lt;/li>
&lt;li>配布可能なパッケージの作成&lt;/li>
&lt;li>crates.io へのアップロード&lt;/li>
&lt;/ul>
&lt;h2 id="cli">CLI&lt;/h2>
&lt;p>&lt;code>cargo&lt;/code>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># バージョン表示&lt;/span>
cargo --version
&lt;span style="color:#8f5902;font-style:italic"># プロジェクト作成&lt;/span>
cargo new &amp;lt;project&amp;gt;
cargo new --bin &amp;lt;project&amp;gt;
cargo check &lt;span style="color:#8f5902;font-style:italic"># コンパイル可能かチェック&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># コンパイル。バイナリ生成&lt;/span>
cargo build
cargo build --release &lt;span style="color:#8f5902;font-style:italic"># 最適化込み&lt;/span>
cargo run &lt;span style="color:#8f5902;font-style:italic"># バイナリを作らずに直接実行&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://doc.rust-lang.org/book/2018-edition/ch01-03-hello-cargo.html">Hello, Cargo! - The Rust Programming Language&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="cargotoml-manifest">Cargo.toml (manifest)&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/cargo/reference/manifest.html">https://doc.rust-lang.org/cargo/reference/manifest.html&lt;/a>&lt;/p>
&lt;p>パッケージのメタデータや依存パッケージを記すマニフェストファイル。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/tanakh/items/8cfa328ed652d71b1017">cargo publish する前に埋めておきたい Cargo.toml の項目に関するメモ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="dependency-tables">Dependency tables&lt;/h3>
&lt;p>&lt;a href="https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html">https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html&lt;/a>&lt;/p>
&lt;p>依存パッケージの情報を示すセクション。&lt;/p>
&lt;ul>
&lt;li>&lt;code>[dependencies]&lt;/code> &amp;hellip; 実行時に必要なパッケージ&lt;/li>
&lt;li>&lt;code>[dev-dependencies]&lt;/code> &amp;hellip; テストやベンチマークなどで必要なパッケージ&lt;/li>
&lt;li>&lt;code>[build-dependencies]&lt;/code> &amp;hellip; ビルドに必要なパッケージ&lt;/li>
&lt;/ul>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-TOML" data-lang="TOML">&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">dependencies&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000">time&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;0.1.12&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上は &lt;code>&amp;quot;^0.1.12&amp;quot;&lt;/code> (caret requirement) と同じ扱いになる。&lt;br>
バージョン固定したい場合、 &lt;code>&amp;quot;= 0.1.12&amp;quot;&lt;/code> と書く。詳しくは下を見よ。&lt;/p>
&lt;h4 id="バージョンの指定方法">バージョンの指定方法&lt;/h4>
&lt;p>様々な形式でバージョンを指定することができる。&lt;/p>
&lt;p>Caret requirements（キャレット）:&lt;/p>
&lt;pre>&lt;code>^1.2.3 := &amp;gt;=1.2.3, &amp;lt;2.0.0
^1.2 := &amp;gt;=1.2.0, &amp;lt;2.0.0
^1 := &amp;gt;=1.0.0, &amp;lt;2.0.0
^0.2.3 := &amp;gt;=0.2.3, &amp;lt;0.3.0
^0.2 := &amp;gt;=0.2.0, &amp;lt;0.3.0
^0.0.3 := &amp;gt;=0.0.3, &amp;lt;0.0.4
^0.0 := &amp;gt;=0.0.0, &amp;lt;0.1.0
^0 := &amp;gt;=0.0.0, &amp;lt;1.0.0
&lt;/code>&lt;/pre>&lt;p>Tilde requirements（チルダ）:&lt;/p>
&lt;pre>&lt;code>~1.2.3 := &amp;gt;=1.2.3, &amp;lt;1.3.0
~1.2 := &amp;gt;=1.2.0, &amp;lt;1.3.0
~1 := &amp;gt;=1.0.0, &amp;lt;2.0.0
&lt;/code>&lt;/pre>&lt;p>Wildcard requirements（ワイルドカード）:&lt;/p>
&lt;pre>&lt;code>* := &amp;gt;=0.0.0
1.* := &amp;gt;=1.0.0, &amp;lt;2.0.0
1.2.* := &amp;gt;=1.2.0, &amp;lt;1.3.0
&lt;/code>&lt;/pre>&lt;p>Note:&lt;/p>
&lt;ul>
&lt;li>crates.io では &lt;code>*&lt;/code> だけの指定はNG&lt;/li>
&lt;/ul>
&lt;p>Comparison requirements:&lt;/p>
&lt;pre>&lt;code>&amp;gt;= 1.2.0
&amp;gt; 1
&amp;lt; 2
= 1.2.3
&lt;/code>&lt;/pre>&lt;p>Multiple requirements:&lt;/p>
&lt;ul>
&lt;li>例: &lt;code>&amp;gt;= 1.2, &amp;lt; 1.5&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="パッケージ取得先の指定">パッケージ取得先の指定&lt;/h4>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-TOML" data-lang="TOML">&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">dependencies&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 独自レジストリ&lt;/span>
&lt;span style="color:#000">some&lt;/span>&lt;span style="color:#a40000">-&lt;/span>&lt;span style="color:#000">crate&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#a40000">{&lt;/span> &lt;span style="color:#000">version&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">registry&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;my-registry&amp;#34;&lt;/span> &lt;span style="color:#a40000">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Gitロケーション&lt;/span>
&lt;span style="color:#000">rand&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#a40000">{&lt;/span> &lt;span style="color:#000">git&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://github.com/rust-lang-nursery/rand&amp;#34;&lt;/span> &lt;span style="color:#a40000">}&lt;/span>
&lt;span style="color:#000">rand&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#a40000">{&lt;/span> &lt;span style="color:#000">git&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://github.com/rust-lang-nursery/rand&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">branch&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;next&amp;#34;&lt;/span> &lt;span style="color:#a40000">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># ファイルシステム&lt;/span>
&lt;span style="color:#000">hello_utils&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#a40000">{&lt;/span> &lt;span style="color:#000">path&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;hello_utils&amp;#34;&lt;/span> &lt;span style="color:#a40000">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>A: CLI</title><link>https://progrhy.me/tech-notes/a/google/gcp/cli/</link><pubDate>Wed, 29 Apr 2020 22:59:42 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/gcp/cli/</guid><description>
&lt;p>Quick links:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#gcloud">gcloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="#gsutil">gsutil&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="cloud-sdk">Cloud SDK&lt;/h2>
&lt;p>&lt;a href="https://cloud.google.com/sdk/docs?hl=ja">https://cloud.google.com/sdk/docs?hl=ja&lt;/a>&lt;/p>
&lt;p>&lt;code>gcloud&lt;/code>, &lt;code>gsutil&lt;/code>, &lt;code>bq&lt;/code> CLIもこれに含まれる。&lt;/p>
&lt;ul>
&lt;li>プロキシ設定
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/sdk/docs/proxy-settings?hl=ja">プロキシ / ファイアウォールの背後で Cloud SDK を使用する場合の構成 | Cloud SDK のドキュメント&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="install">Install&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/install">https://cloud.google.com/sdk/install&lt;/a>&lt;/p>
&lt;ul>
&lt;li>インタラクティブインストーラー: &lt;a href="https://cloud.google.com/sdk/docs/downloads-interactive">https://cloud.google.com/sdk/docs/downloads-interactive&lt;/a>&lt;/li>
&lt;li>yum, apt, snapパッケージでの提供がある
&lt;ul>
&lt;li>snap: &lt;a href="https://cloud.google.com/sdk/docs/downloads-snap">https://cloud.google.com/sdk/docs/downloads-snap&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Docker Image &amp;hellip; See below&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/sdk/docs/downloads-versioned-archives">旧バージョンアーカイブ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="docker-image">Docker Image&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/docs/downloads-docker">https://cloud.google.com/sdk/docs/downloads-docker&lt;/a>&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloudpack.media/50237">DockerコンテナからGoogle Cloud SDKのコマンドを簡単に実行できるコマンドをつくってみた | cloudpack.media&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yuku.takahashi.coffee/blog/2019/01/google-cloud-sdk-in-docker">Docker で Google Cloud SDK を使う - yt coffee&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="gcloud">gcloud&lt;/h2>
&lt;ul>
&lt;li>Getting Started: &lt;a href="https://cloud.google.com/sdk/gcloud/?hl=ja">https://cloud.google.com/sdk/gcloud/?hl=ja&lt;/a>&lt;/li>
&lt;li>リファレンス: &lt;a href="https://cloud.google.com/sdk/gcloud/reference">https://cloud.google.com/sdk/gcloud/reference&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>新しめの機能の場合、 &lt;code>gcloud beta ...&lt;/code> や &lt;code>gcloud alpha ...&lt;/code> にしかコマンドがなかったり、 &lt;code>beta ...&lt;/code> や &lt;code>alpha ...&lt;/code> を付けることで結果が変わることがある&lt;/li>
&lt;/ul>
&lt;h3 id="認証">認証&lt;/h3>
&lt;p>See also &lt;a href="#auth">#auth&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## 初期設定(認証込)&lt;/span>
gcloud init
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/sdk/docs/authorizing?hl=ja">Cloud SDK ツールの承認 | Cloud SDK のドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="環境変数">環境変数&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Variable&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>CLOUDSDK_ACTIVE_CONFIG_NAME&lt;/td>
&lt;td>利用するconfigurationを設定する。See &lt;a href="#configurations">#configurations&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="全体で使えるオプション">全体で使えるオプション&lt;/h3>
&lt;p>リファレンスで「GCLOUD WIDE FLAGS」とされているもの。&lt;/p>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference">https://cloud.google.com/sdk/gcloud/reference&lt;/a> に簡単な説明がある。&lt;/p>
&lt;p>例:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--configuration&lt;/code> &amp;hellip; コマンドを実行するconfiguration. See &lt;a href="#configurations">#configurations&lt;/a>&lt;/li>
&lt;li>&lt;code>--project&lt;/code> &amp;hellip; コマンドの対象となるプロジェクトをプロジェクトIDで指定する&lt;/li>
&lt;/ul>
&lt;h4 id="filter">filter&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/topic/filters">https://cloud.google.com/sdk/gcloud/reference/topic/filters&lt;/a>&lt;/p>
&lt;p>結果をリストで出力するコマンドに対し、フィルタ条件を記すことができる。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud compute instances list --filter&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;machineType:f1-micro&amp;#34;&lt;/span>
gcloud compute instances list &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --filter&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;zone ~ ^us AND -machineType:f1-micro&amp;#34;&lt;/span>
gcloud compute instances list --filter&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;tags.items=my-tag&amp;#34;&lt;/span>
gcloud projects list &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --format&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;table(projectNumber,projectId,createTime)&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --filter&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;createTime&amp;gt;=2018-01-15&amp;#34;&lt;/span>
gcloud config configurations list --filter&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;IS_ACTIVE=true&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="format">format&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/topic/formats">https://cloud.google.com/sdk/gcloud/reference/topic/formats&lt;/a>&lt;/p>
&lt;p>結果を出力するコマンドに対し、出力フォーマットや、抽出するプロパティ、ヘッダの有無などを指定できる。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># デフォルトのテーブル表示にボックス装飾を付ける&lt;/span>
gcloud ... --format&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;[box]&amp;#39;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># JSON形式&lt;/span>
gcloud ... --format&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>json
&lt;span style="color:#8f5902;font-style:italic"># YAML形式&lt;/span>
gcloud ... --format&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>yaml
&lt;span style="color:#8f5902;font-style:italic"># ヘッダ無しCSV形式&lt;/span>
gcloud ... --format&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;csv[no-heading]&amp;#39;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># ヘッダ無しCSVで、特定のカラム値だけ取得&lt;/span>
gcloud config list --format&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;csv[no-heading](core.project,core.account)&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 特定の値だけ取得&lt;/span>
gcloud config configurations list --format&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;value(name)&amp;#39;&lt;/span>
gcloud info --format&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;value(config.paths.global_config_dir)&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="auth">auth&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/auth">https://cloud.google.com/sdk/gcloud/reference/auth&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># ログイン認証&lt;/span>
gcloud auth login
&lt;span style="color:#8f5902;font-style:italic"># 現在認証済みのアカウント一覧&lt;/span>
gcloud auth list
&lt;span style="color:#8f5902;font-style:italic"># サービスアカウントの認証&lt;/span>
gcloud auth activate-service-account --key-file &amp;lt;KEYFILE&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># アクセストークンの表示&lt;/span>
gcloud auth print-access-token
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="compute">compute&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/compute">https://cloud.google.com/sdk/gcloud/reference/compute&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## ssh&lt;/span>
gcloud compute ssh &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--project&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;PROJECT&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--zone&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;ZONE&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--internal-ip &lt;span style="color:#000;font-weight:bold">|&lt;/span> --tunnel-through-iap&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> &amp;lt;INSTANCE&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>-- &amp;lt;SSH_ARGS&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">## scp&lt;/span>
gcloud compute scp &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--project&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;PROJECT&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--zone&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;ZONE&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--internal-ip &lt;span style="color:#000;font-weight:bold">|&lt;/span> --tunnel-through-iap&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--recurse&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> host:/path/to/dir path/to/local
&lt;span style="color:#8f5902;font-style:italic">## イメージの作成&lt;/span>
gcloud compute images create my-image --source-disk my-vm-disk
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="instances">instances&lt;/h4>
&lt;p>VM操作&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/compute/instances">https://cloud.google.com/sdk/gcloud/reference/compute/instances&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/compute/instances/create">create&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## 一覧&lt;/span>
gcloud compute instances list
&lt;span style="color:#8f5902;font-style:italic">## 起動&lt;/span>
gcloud compute instances start &amp;lt;INSTANCE&amp;gt; --zone&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;ZONE&amp;gt;
&lt;span style="color:#8f5902;font-style:italic">## 停止&lt;/span>
gcloud compute instances stop &amp;lt;INSTANCE&amp;gt; --zone&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;ZONE&amp;gt;
&lt;span style="color:#8f5902;font-style:italic">## 作成&lt;/span>
gcloud compute instances create my-instance &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --project&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>my-project --zone&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>asia-northeast1-b &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --no-address &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 外部IPなし&lt;/span>
--custom-vm-type&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>n1 &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># N1インスタンス&lt;/span>
--custom-cpu&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> --custom-memory&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>8GB &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># リソースをカスタマイズする場合&lt;/span>
--image-project&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>another-project --image&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>my-image &lt;span style="color:#8f5902;font-style:italic"># 別プロジェクトのイメージを使う&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/compute/docs/images/sharing-images-across-projects?hl=ja">イメージとスナップショットの共有 | Compute Engine ドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="regions">regions&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/compute/regions">https://cloud.google.com/sdk/gcloud/reference/compute/regions&lt;/a>&lt;/p>
&lt;p>GCEリージョンの表示。&lt;/p>
&lt;p>SYNPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud compute regions list
gcloud compute regions describe REGION
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ssl-certificates">ssl-certificates&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/compute/ssl-certificates">https://cloud.google.com/sdk/gcloud/reference/compute/ssl-certificates&lt;/a>&lt;/p>
&lt;p>証明書の管理。マネージド証明書が作れる。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 一覧表示&lt;/span>
gcloud compute ssl-certificates list
&lt;span style="color:#8f5902;font-style:italic"># 詳細表示&lt;/span>
gcloud compute ssl-certificates describe &amp;lt;name&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># 作成&lt;/span>
gcloud compute ssl-certificates create &amp;lt;name&amp;gt; --domains&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;fqdn1&amp;gt;,...
&lt;span style="color:#8f5902;font-style:italic"># 削除&lt;/span>
gcloud compute ssl-certificates delete &amp;lt;name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="zones">zones&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/compute/zones">https://cloud.google.com/sdk/gcloud/reference/compute/zones&lt;/a>&lt;/p>
&lt;p>GCEゾーンの表示。&lt;/p>
&lt;p>SYNPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud compute zones list
gcloud compute zones describe ZONE
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="config">config&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/config">https://cloud.google.com/sdk/gcloud/reference/config&lt;/a>&lt;/p>
&lt;p>Subcommands:&lt;/p>
&lt;ul>
&lt;li>configurations &amp;hellip; See below&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/config/get-value">get-value&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/config/list">list&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/config/set">set&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>configurationという単位でプロパティ値のセットを管理できる。&lt;br>
configurations以外のサブコマンドは現在のconfigurationに対する操作を行う。&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 設定プロパティ値一覧表示&lt;/span>
gcloud config list
&lt;span style="color:#8f5902;font-style:italic"># プロパティ値の取得&lt;/span>
gcloud config get-value account
gcloud config get-value artifacts/location
&lt;span style="color:#8f5902;font-style:italic"># プロパティ値の設定&lt;/span>
gcloud config &lt;span style="color:#204a87">set&lt;/span> project my-project
gcloud config &lt;span style="color:#204a87">set&lt;/span> compute/region asia-northeast1
gcloud config &lt;span style="color:#204a87">set&lt;/span> compute/zone asia-northeast1-a
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/sky0621/items/597d4de7ed9ba7e31f6d">gcloud configで複数の設定を持って切り替える - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="configurations">configurations&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/config/configurations">https://cloud.google.com/sdk/gcloud/reference/config/configurations&lt;/a>&lt;/p>
&lt;p>設定プロファイルの管理。各プロファイルでは、プロパティ値のセットを管理することができる。&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># プロファイル一覧表示&lt;/span>
gcloud config configurations list
&lt;span style="color:#8f5902;font-style:italic"># 表示&lt;/span>
gcloud config configurations describe プロファイル名
&lt;span style="color:#8f5902;font-style:italic"># 作成&lt;/span>
gcloud config configurations create プロファイル名
&lt;span style="color:#8f5902;font-style:italic"># 削除&lt;/span>
gcloud config configurations delete プロファイル名
&lt;span style="color:#8f5902;font-style:italic"># 有効化&lt;/span>
gcloud config configurations activate プロファイル名
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Tips:&lt;/p>
&lt;ul>
&lt;li>gcloudコマンドは現在アクティブなconfigurationの設定プロパティをデフォルト値として参照する&lt;/li>
&lt;li>アクティブなconfigurationは &lt;code>--configuration&lt;/code> 引数か、環境変数 &lt;code>CLOUDSDK_ACTIVE_CONFIG_NAME&lt;/code> で上書き指定することもできる&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/sdk/docs/configurations?hl=ja">SDK 構成の管理 | Cloud SDK のドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/topic/configurations">https://cloud.google.com/sdk/gcloud/reference/topic/configurations&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="container">container&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/container">https://cloud.google.com/sdk/gcloud/reference/container&lt;/a>&lt;/p>
&lt;p>GKE操作。&lt;/p>
&lt;h4 id="clusters">clusters&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/container/clusters">https://cloud.google.com/sdk/gcloud/reference/container/clusters&lt;/a>&lt;/p>
&lt;p>GKEクラスタの操作。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud container clusters list
&lt;span style="color:#8f5902;font-style:italic"># $KUBECONFIG or ~/.kube/config に認証情報を取得&lt;/span>
gcloud container clusters get-credentials クラスタ名 &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--region&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>REGION&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--project&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>PROJECT_ID&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="create">create&lt;/h5>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/container/clusters/create">https://cloud.google.com/sdk/gcloud/reference/container/clusters/create&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>オプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&amp;ndash;enable-master-authorized-networks&lt;/td>
&lt;td>Master Authorized Networksの有効化&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ndash;master-authorized-networks=NETWORK,[NETWORK,…]&lt;/td>
&lt;td>Master Authorized Networksの設定&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h6 id="beta版2020-05-13更新">beta版（2020-05-13更新）&lt;/h6>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/beta/container/clusters/create">https://cloud.google.com/sdk/gcloud/reference/beta/container/clusters/create&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>オプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&amp;ndash;release-channel=CHANNEL&lt;/td>
&lt;td>rapid, regular, stableのどれか。リリースチャネルの設定。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="endpoints">endpoints&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/endpoints">https://cloud.google.com/sdk/gcloud/reference/endpoints&lt;/a>&lt;/p>
&lt;p>APIサービスの作成・有効化・管理を行う。&lt;/p>
&lt;h4 id="services">services&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/endpoints/services">https://cloud.google.com/sdk/gcloud/reference/endpoints/services&lt;/a>&lt;/p>
&lt;p>サービスの管理を行う。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud endpoints services list
gcloud endpoints services delete ENDPOINT
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="functions">functions&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/functions">https://cloud.google.com/sdk/gcloud/reference/functions&lt;/a>&lt;/p>
&lt;p>Cloud Functionsの操作&lt;/p>
&lt;h4 id="deploy">deploy&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/functions/deploy">https://cloud.google.com/sdk/gcloud/reference/functions/deploy&lt;/a>&lt;/p>
&lt;p>Cloud Functionのデプロイ（作成・更新）&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## cloud-buildsイベントをフックに動くFunctionのデプロイ&lt;/span>
gcloud functions deploy &amp;lt;Function Name&amp;gt; &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --trigger-topic cloud-builds &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --runtime nodejs10 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --set-env-vars &lt;span style="color:#4e9a06">&amp;#34;FOO=foo,BAR=bar&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span> --project my-project
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="info">info&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/info">https://cloud.google.com/sdk/gcloud/reference/info&lt;/a>&lt;/p>
&lt;p>gcloudのconfigファイルのパスなど環境構成情報を表示する。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud info
&lt;span style="color:#8f5902;font-style:italic"># 特定の値を抽出&lt;/span>
gcloud info --format&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;value(config.paths.global_config_dir)&amp;#39;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># ネットワーク接続や隠し属性のチェック&lt;/span>
gcloud info --run-diagnostics
&lt;span style="color:#8f5902;font-style:italic"># 直近のログを表示&lt;/span>
gcloud info --show-log
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="logging">logging&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/logging">https://cloud.google.com/sdk/gcloud/reference/logging&lt;/a>&lt;/p>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>&lt;code>read&lt;/code>, &lt;code>list&lt;/code>などのコマンド利用時には serviceusage.services.use 権限が必要&lt;/li>
&lt;/ul>
&lt;h4 id="read">read&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/logging/read">https://cloud.google.com/sdk/gcloud/reference/logging/read&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud logging &lt;span style="color:#204a87">read&lt;/span> --format json
gcloud logging &lt;span style="color:#204a87">read&lt;/span> --limit&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> --order&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>asc
gcloud logging &lt;span style="color:#204a87">read&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;timestamp&amp;gt;=&amp;#34;2020-03-19T05:28:00Z&amp;#34; timestamp&amp;lt;=&amp;#34;2020-03-25T05:33:28Z&amp;#34;&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>※2020-04-20現在、 &lt;code>tail -f&lt;/code> 相当のオプションはなさそう&lt;/p>
&lt;h3 id="projects">projects&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/projects/">https://cloud.google.com/sdk/gcloud/reference/projects/&lt;/a>&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## プロジェクト一覧&lt;/span>
gcloud projects list
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="参考">参考&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/masaaania/items/7a83c5e44e351b4a3a2c">よく使うgcloudコマンドたち - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="gsutil">gsutil&lt;/h2>
&lt;p>Cloud Storage用のPython製CLI&lt;/p>
&lt;ul>
&lt;li>ドキュメント: &lt;a href="https://cloud.google.com/storage/docs/gsutil">https://cloud.google.com/storage/docs/gsutil&lt;/a>&lt;/li>
&lt;li>コマンドリファレンス: &lt;a href="https://cloud.google.com/storage/docs/gsutil/commands/help">https://cloud.google.com/storage/docs/gsutil/commands/help&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="バケット操作">バケット操作&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/storage/docs/gsutil/commands/mb">mb&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/storage/docs/gsutil/commands/rb">rb&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># バケット作成&lt;/span>
gsutil mb -l asia gs://mybucket
&lt;span style="color:#8f5902;font-style:italic"># バケット削除&lt;/span>
gsutil rb &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>-f&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> gs://&amp;lt;bucket_name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ls">ls&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/storage/docs/gsutil/commands/ls">https://cloud.google.com/storage/docs/gsutil/commands/ls&lt;/a>&lt;/p>
&lt;p>バケットやオブジェクトのリスト表示。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gsutil ls gs://my-bucket/
&lt;span style="color:#8f5902;font-style:italic"># 古いバージョンも含める&lt;/span>
gsutil ls -a gs://my-bucket/
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rm">rm&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/storage/docs/gsutil/commands/rm">https://cloud.google.com/storage/docs/gsutil/commands/rm&lt;/a>&lt;/p>
&lt;p>オブジェクトの削除。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># subdir/ 直下のオブジェクトを削除&lt;/span>
gsutil rm gs://bucket/subdir/*
&lt;span style="color:#8f5902;font-style:italic"># subdir/ 下の全てのオブジェクトを削除&lt;/span>
gsutil rm gs://bucket/subdir/**
&lt;span style="color:#8f5902;font-style:italic"># 上と同じ&lt;/span>
gsutil rm -r gs://bucket/subdir/
&lt;span style="color:#8f5902;font-style:italic"># 古いバージョンも含めて削除&lt;/span>
gsutil rm -a gs://bucket/path/to/object
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>A: Cloud Functions</title><link>https://progrhy.me/tech-notes/a/google/gcp/function/</link><pubDate>Mon, 04 May 2020 09:26:37 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/gcp/function/</guid><description>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>&lt;a href="https://cloud.google.com/functions/docs?hl=ja">https://cloud.google.com/functions/docs?hl=ja&lt;/a>&lt;/p>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="ログ出力">ログ出力&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/functions/docs/monitoring/logging">https://cloud.google.com/functions/docs/monitoring/logging&lt;/a>&lt;/p>
&lt;p>Cloud Loggingにログを送ることができる。&lt;br>
言語によってやり方が異なる。&lt;/p>
&lt;ul>
&lt;li>共通: 標準出力/標準エラー出力&lt;/li>
&lt;li>Node.js
&lt;ul>
&lt;li>&lt;code>console.log()&lt;/code> -&amp;gt; &lt;code>INFO&lt;/code> ログ&lt;/li>
&lt;li>&lt;code>console.error()&lt;/code> -&amp;gt; &lt;code>ERROR&lt;/code> ログ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/Sho2010@github/items/460900d16cdee7f3d2bd">Cloud FunctionsのlogをstackdriverにjsonPayloadで送りたい - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="vpc接続">VPC接続&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/functions/docs/connecting-vpc?hl=ja">VPC ネットワークへの接続 | Cloud Functions のドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Crates</title><link>https://progrhy.me/tech-notes/a/program/lang/rust/crate/</link><pubDate>Sat, 30 May 2020 22:17:01 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/rust/crate/</guid><description>
&lt;h2 id="crates">Crates&lt;/h2>
&lt;p>クレートはRustプログラムのパッケージを表す。&lt;br>
&lt;code>cargo new&lt;/code> するとcrateが作られる。&lt;/p>
&lt;p>&lt;a href="https://crates.io/">https://crates.io/&lt;/a> はクレートの公開レジストリ。
自作のクレートをここに登録することでユーザーに配布することができる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://doc.rust-jp.rs/book/second-edition/ch14-02-publishing-to-crates-io.html">Crates.ioにクレートを公開する - The Rust Programming Language&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/skitaoka/items/753a519d720a1ccebb0d">Rust のモジュールシステム - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="clap">clap&lt;/h2>
&lt;p>&lt;a href="https://crates.io/crates/clap">https://crates.io/crates/clap&lt;/a>&lt;/p>
&lt;p>人気のCLIライブラリ。&lt;/p>
&lt;h2 id="exitfailure">exitfailure&lt;/h2>
&lt;p>&lt;a href="https://crates.io/crates/exitfailure">https://crates.io/crates/exitfailure&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Some newtype wrappers to help with using ? in main()&lt;/p>
&lt;/blockquote>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>下のfailureと合わせて参考に挙げたガイドで紹介されているが、2020-05-30現在、2018-08-03で更新が止まっている。それだけ枯れてるのならいいのかもしれないが。&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rust-cli.github.io/book/tutorial/errors.html">Nicer error reporting - Command Line Applications in Rust&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="failure">failure&lt;/h2>
&lt;p>&lt;a href="https://docs.rs/failure/">https://docs.rs/failure/&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>An experimental new error-handling library.&lt;/p>
&lt;/blockquote>
&lt;p>ガイド:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rust-lang-nursery.github.io/failure/">https://rust-lang-nursery.github.io/failure/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rust-cli.github.io/book/tutorial/errors.html">Nicer error reporting - Command Line Applications in Rust&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="context">Context&lt;/h3>
&lt;p>&lt;a href="https://docs.rs/failure/0.1.8/failure/struct.Context.html">Struct failure::Context&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>An error with context around it.&lt;/p>
&lt;/blockquote>
&lt;h3 id="resultext">ResultExt&lt;/h3>
&lt;p>&lt;a href="https://docs.rs/failure/0.1.8/failure/trait.ResultExt.html">Trait failure::ResultExt&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Extension methods for Result.&lt;/p>
&lt;/blockquote>
&lt;h4 id="with_context">with_context&lt;/h4>
&lt;p>&lt;a href="https://docs.rs/failure/0.1.8/failure/trait.ResultExt.html#tymethod.with_context">https://docs.rs/failure/0.1.8/failure/trait.ResultExt.html#tymethod.with_context&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#204a87;font-weight:bold">fn&lt;/span> &lt;span style="color:#000">with_context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">F&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">D&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">f&lt;/span>: &lt;span style="color:#000">F&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&amp;gt; &lt;span style="color:#204a87">Result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">D&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// F: FnOnce(&amp;amp;E) -&amp;gt; D,
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// D: Display + Send + Sync + &amp;#39;static,
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Wraps the error type in a context type generated by looking at the error value.&lt;/p>
&lt;/blockquote>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#8f5902;font-style:italic">#[derive(Fail, Debug)]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">#[fail(display = &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;My custom error message&amp;#34;&lt;/span>&lt;span style="color:#8f5902;font-style:italic">)]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">CustomError&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">||&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&amp;gt; &lt;span style="color:#204a87">Result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000;font-weight:bold">(),&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">failure&lt;/span>::&lt;span style="color:#000">Error&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Err&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">CustomError&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">})().&lt;/span>&lt;span style="color:#000">with_context&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span>&lt;span style="color:#000">e&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">|&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;An error occured: {}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">e&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}).&lt;/span>&lt;span style="color:#000">unwrap_err&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;{}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">assert_eq&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;An error occured: My custom error message&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="rand">rand&lt;/h2>
&lt;p>&lt;a href="https://crates.io/crates/rand">https://crates.io/crates/rand&lt;/a>&lt;/p>
&lt;p>乱数生成&lt;/p>
&lt;h2 id="structopt">structopt&lt;/h2>
&lt;p>&lt;a href="https://crates.io/crates/structopt">https://crates.io/crates/structopt&lt;/a>&lt;/p>
&lt;p>clapに依存したCLIライブラリ。&lt;br>
structを定義することでコマンドライン引数を解析する。&lt;/p></description></item><item><title>A: Datadog</title><link>https://progrhy.me/tech-notes/a/web-service/datadog/</link><pubDate>Thu, 14 May 2020 19:05:18 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/web-service/datadog/</guid><description>
&lt;p>監視ソリューションをサービスとして提供している。&lt;/p>
&lt;h2 id="料金">料金&lt;/h2>
&lt;p>&lt;a href="https://www.datadoghq.com/ja/pricing/">https://www.datadoghq.com/ja/pricing/&lt;/a>&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/t_ume/items/a45fcf5f464beb50d876">Datadogの課金体系について - Qiita&lt;/a>&lt;/li>
&lt;li>2016年の記事: &lt;a href="https://qiita.com/selmertsx/items/9dd5af1d6d5d94ce6972">Datadogの請求書に怯えないためにするべきこと - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://docs.datadoghq.com/">https://docs.datadoghq.com/&lt;/a>&lt;/p>
&lt;h2 id="status">Status&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://status.datadoghq.com/">https://status.datadoghq.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://twitter.com/datadogops">https://twitter.com/datadogops&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Dashboards
&lt;ul>
&lt;li>&lt;a href="https://docs.datadoghq.com/dashboards/querying/">Querying&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="alerting">Alerting&lt;/h3>
&lt;h4 id="logs-monitor">Logs Monitor&lt;/h4>
&lt;p>&lt;a href="https://docs.datadoghq.com/monitors/monitor_types/log/">https://docs.datadoghq.com/monitors/monitor_types/log/&lt;/a>&lt;/p>
&lt;p>ログに対して監視を設定できる。&lt;/p>
&lt;h3 id="log-management">Log Management&lt;/h3>
&lt;h4 id="generate-metrics">Generate Metrics&lt;/h4>
&lt;p>&lt;a href="https://docs.datadoghq.com/logs/logs_to_metrics/">https://docs.datadoghq.com/logs/logs_to_metrics/&lt;/a>&lt;/p>
&lt;p>ログからメトリクスを生成できる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.datadoghq.com/ja/blog/logging-without-limits-new-features/">新機能 Metrics from Logs と Log Rehydration™ の紹介 | Datadog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.datadoghq.com/ja/blog/log-based-metrics/">ログからメトリクスを生成し、過去の傾向の表示や SLO の追跡を実行する。 | Datadog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="インテグレーション">インテグレーション&lt;/h2>
&lt;p>&lt;a href="https://docs.datadoghq.com/integrations/">https://docs.datadoghq.com/integrations/&lt;/a>&lt;/p>
&lt;p>各種ツール、サービスと連携が可能。&lt;/p>
&lt;h3 id="google-cloud-platform">Google Cloud Platform&lt;/h3>
&lt;p>&lt;a href="https://docs.datadoghq.com/integrations/google_cloud_platform/">https://docs.datadoghq.com/integrations/google_cloud_platform/&lt;/a>&lt;/p>
&lt;h4 id="セットアップ">セットアップ&lt;/h4>
&lt;p>メトリクスの収集:&lt;/p>
&lt;ol>
&lt;li>サービスアカウント作成
&lt;ul>
&lt;li>権限「Compute Viewer」「Monitoring Viewer」「Cloud Asset Viewer」をつける&lt;/li>
&lt;li>サービスアカウントキーをJSONで作成&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>作成したサービスアカウントキーをDatadogのGCPインテグレーションの画面でUpload&lt;/li>
&lt;/ol>
&lt;p>ログの収集:&lt;/p>
&lt;ol>
&lt;li>Cloud Pub/Sub Topicを作成&lt;/li>
&lt;li>上のTopicのSubscriberを作成
&lt;ul>
&lt;li>配信タイプとして Push を選択し、 &lt;code>https://gcp-intake.logs.datadoghq.com/v1/input/&amp;lt;DATADOG_API_KEY&amp;gt;/&lt;/code> と入力&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Cloud LoggingでログをPub/Subエクスポートし、上で作ったTopicを指定する&lt;/li>
&lt;/ol>
&lt;h3 id="slack">Slack&lt;/h3>
&lt;p>&lt;a href="https://docs.datadoghq.com/integrations/slack/">https://docs.datadoghq.com/integrations/slack/&lt;/a>&lt;/p>
&lt;ol>
&lt;li>Slack側でDatadogインテグレーションを追加し、Webhook URLを取得する&lt;/li>
&lt;li>Datadog側でSlackインテグレーションを追加
&lt;ul>
&lt;li>「Configuration」タブで通知先チャネルを選択&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>Monitorの通知先に設定するには、通知先に &lt;code>@slack-&amp;lt;チャネル名&amp;gt;&lt;/code> を入れる。&lt;/p>
&lt;h2 id="事例">事例&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://user-first.ikyu.co.jp/entry/application_monitoring_with_datadog_log_management">Datadog Log Management でアプリケーション稼働モニタリング - 一休.com Developers Blog&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Cloud Identity and Access Management (IAM)</title><link>https://progrhy.me/tech-notes/a/google/gcp/iam/</link><pubDate>Mon, 04 May 2020 09:26:28 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/gcp/iam/</guid><description>
&lt;p>&lt;a href="https://cloud.google.com/iam/docs">https://cloud.google.com/iam/docs&lt;/a>&lt;/p>
&lt;p>Cloud IAM. Google IDベースのアクセス管理ができる。&lt;/p>
&lt;p>Googleグループを設定することもできる。&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/iam/docs/permissions-reference">IAM permissions reference&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="compute-engineへのアクセス権限">Compute Engineへのアクセス権限&lt;/h3>
&lt;p>関係するRoles:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Role&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>roles/compute.instanceAdmin.v1&lt;/td>
&lt;td>インスタンスの作成・削除・編集など&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>roles/iam.serviceAccountUser&lt;/td>
&lt;td>サービスアカウントの利用。インスタンス作成にも必要&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>roles/iap.tunnelResourceAccessor&lt;/td>
&lt;td>IAP経由でインスタンスにSSHするために必要&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/iap/docs/managing-access?hl=ja">IAP で保護されたリソースへのアクセスの管理 | Identity-Aware Proxy のドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/iam/docs/faq?hl=ja" title="よくある質問 | Cloud Identity and Access Management のドキュメント | Google Cloud">よくある質問 | Cloud Identity and Access Management のドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ameblo.jp/principia-ca/entry-12144854519.html" title="GCPのCloud IAMを試してみた | サイバーエージェント 公式エンジニアブログ">GCPのCloud IAMを試してみた | サイバーエージェント 公式エンジニアブログ&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: dotfiles</title><link>https://progrhy.me/tech-notes/a/cli/dotfiles/</link><pubDate>Sun, 31 May 2020 21:52:18 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/cli/dotfiles/</guid><description>
&lt;p>dotfilesは、主にコンピュータ上で、ユーザーの$HOMEディレクトリ下に置かれる &lt;code>.&lt;/code> で始まるファイル類を表す。&lt;/p>
&lt;h2 id="サイト">サイト&lt;/h2>
&lt;p>&lt;a href="https://dotfiles.github.io/">https://dotfiles.github.io/&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Your unofficial guide to dotfiles on GitHub.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://dotfiles.github.io/utilities/">https://dotfiles.github.io/utilities/&lt;/a> &amp;hellip; dotfilesの管理ツールがたくさん紹介されている。&lt;/li>
&lt;/ul>
&lt;h2 id="まとめページ">まとめページ&lt;/h2>
&lt;p>&lt;a href="https://github.com/webpro/awesome-dotfiles">https://github.com/webpro/awesome-dotfiles&lt;/a>&lt;/p>
&lt;p>dotfiles.github.io と同様だが、各種ツールなどが紹介されている。&lt;/p>
&lt;h2 id="tools">Tools&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ubnt-intrepid/dot">ubnt-intrepid/dot: Yet another management tool for dotfiles&lt;/a> &amp;hellip; Rust製&lt;/li>
&lt;li>&lt;a href="https://github.com/rhysd/dotfiles">rhysd/dotfiles: dotfiles symbolic links management CLI&lt;/a> &amp;hellip; Golang製&lt;/li>
&lt;li>&lt;a href="https://github.com/FooSoft/homemaker">FooSoft/homemaker: Efficiently manage your dot-file configuration settings.&lt;/a> &amp;hellip; Golang製&lt;/li>
&lt;/ul>
&lt;h3 id="jaagrdots">jaagr/dots&lt;/h3>
&lt;p>&lt;a href="https://github.com/jaagr/dots">https://github.com/jaagr/dots&lt;/a>&lt;/p>
&lt;p>&lt;code>alias dots='git --git-dir=$HOME/.dots.git/ --work-tree=$HOME'&lt;/code> これだけでやってる。&lt;br>
&lt;code>git&lt;/code> コマンドしか使わない。&lt;br>
賢い。&lt;/p></description></item><item><title>A: std::fmt</title><link>https://progrhy.me/tech-notes/a/program/lang/rust/std/fmt/</link><pubDate>Sun, 31 May 2020 01:23:57 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/rust/std/fmt/</guid><description>
&lt;p>このモジュールで &lt;a href="https://progrhy.me/tech-notes/a/program/lang/rust/std/#format">format!&lt;/a> の書式が実装されている（という意味だと思う）。&lt;/p>
&lt;h2 id="format書式解説">format書式解説&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/fmt/">Module std::fmt&lt;/a>に書かれている。&lt;/p>
&lt;h3 id="positional-parameters">Positional parameters&lt;/h3>
&lt;p>どの引数を参照するか、0からの連番で指定できる。&lt;br>
指定しない場合は「次の引数」になる。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;{1} {} {0} {}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">// =&amp;gt; &amp;#34;2 1 1 2&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="named-parameters">Named parameters&lt;/h3>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;{argument}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">argument&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">// =&amp;gt; &amp;#34;test&amp;#34;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;{name} {}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">// =&amp;gt; &amp;#34;2 1&amp;#34;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;{a} {c} {b}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">a&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">b&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;b&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">c&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">// =&amp;gt; &amp;#34;a 3 b&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>まだたくさんあるが、出くわしたら追記していく。&lt;/p>
&lt;h2 id="debug-trait">Debug (Trait)&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/fmt/trait.Debug.html">Trait std::fmt::Debug&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>?&lt;/code> formatting&lt;/p>
&lt;/blockquote>
&lt;p>プログラマーに役立つ出力を行う。&lt;br>
一般に、単に &lt;code>derive&lt;/code> して使えばいい。&lt;br>
&lt;code>#?&lt;/code> という書式指定と共に使われると、見やすく出力される。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#8f5902;font-style:italic">#[derive(Debug)]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">Point&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">x&lt;/span>: &lt;span style="color:#204a87;font-weight:bold">i32&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">y&lt;/span>: &lt;span style="color:#204a87;font-weight:bold">i32&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">origin&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Point&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">x&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">y&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">assert_eq&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;The origin is: {:?}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">origin&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;The origin is: Point { x: 0, y: 0 }&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="display-trait">Display (Trait)&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/fmt/trait.Display.html">Trait std::fmt::Display&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Format trait for an empty format, &lt;code>{}&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="#debug-trait">Debug&lt;/a>に似ているが、ユーザー向けの出力をする。 &lt;code>derive&lt;/code> 不可。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#204a87;font-weight:bold">use&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">std&lt;/span>::&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">Point&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">x&lt;/span>: &lt;span style="color:#204a87;font-weight:bold">i32&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">y&lt;/span>: &lt;span style="color:#204a87;font-weight:bold">i32&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">impl&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">fmt&lt;/span>::&lt;span style="color:#000">Display&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">for&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Point&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">fn&lt;/span> &lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">f&lt;/span>: &lt;span style="color:#204a87;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">mut&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">fmt&lt;/span>::&lt;span style="color:#000">Formatter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#c4a000">&amp;#39;_&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&amp;gt; &lt;span style="color:#000">fmt&lt;/span>::&lt;span style="color:#204a87">Result&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">write&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;({}, {})&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">y&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">origin&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Point&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">x&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">y&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">assert_eq&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;The origin is: {}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">origin&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;The origin is: (0, 0)&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="fmt-required-method">fmt (Required Method)&lt;/h3>
&lt;p>&lt;code>fn fmt(&amp;amp;self, f: &amp;amp;mut Formatter) -&amp;gt; Result&amp;lt;(), Error&amp;gt;&lt;/code>&lt;/p>
&lt;p>値を与えられたフォーマッタでフォーマットする。&lt;/p></description></item><item><title>A: dpkg</title><link>https://progrhy.me/tech-notes/a/software/pkg-man/dpkg/</link><pubDate>Mon, 04 May 2020 17:18:57 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/pkg-man/dpkg/</guid><description>
&lt;p>ハイレベルのインタフェースとして &lt;strong>apt&lt;/strong>, &lt;strong>apt-get&lt;/strong>, &lt;strong>aptitude&lt;/strong> がある。&lt;br>
昔からあるのがaptitudeで、最近あまり使われてない気がするが、2017年11月18日現在、これにしかない機能もあるそうだ。&lt;br>
aptは最先端のようだが、すべてaptで賄えるというわけではまだなさそう。&lt;/p>
&lt;p>dpkg &amp;lt;=&amp;gt; aptの関係は、RHEL系におけるrpm &amp;lt;=&amp;gt; yumの関係と似ている。&lt;/p>
&lt;p>つまり、dpkgは低レベルのインタフェースであり、aptは内部的にdpkgを使っている。&lt;br>
…というようなことが &lt;a href="http://www.tkd55.net/?p=816">Debian系のファイル管理コマンドもまとめてみた | tkd55&lt;/a> に書いてあった。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://sites.google.com/site/progrhymetechwiki/home/memo/2016/20160604#TOC-apt-">https://sites.google.com/site/progrhymetechwiki/home/memo/2016/20160604#TOC-apt-&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ドキュメント">ドキュメント&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://debian-handbook.info/browse/ja-JP/stable/">Debian 管理者ハンドブック&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://debian-handbook.info/browse/ja-JP/stable/sect.apt-get.html">6.2. aptitude、apt-get、apt コマンド&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://linux.die.net/man/1/dpkg">dpkg(1): package manager for Debian - Linux man page&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://ja.manpages.org/apt/8">man apt (8): コマンドラインインターフェイス&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linux.die.net/man/8/apt-get">apt-get(8) - Linux man page&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linux.die.net/man/8/aptitude">aptitude(8) - Linux man page&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="コマンド">コマンド&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># パッケージリストの更新&lt;/span>
apt update
&lt;span style="color:#8f5902;font-style:italic"># パッケージの更新&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">## 更新可能なパッケージの一覧&lt;/span>
apt list --upgradable
&lt;span style="color:#8f5902;font-style:italic">## 最低限可能なアップグレードを行う&lt;/span>
apt upgrade
apt-get upgrade
aptitude safe-upgrade
&lt;span style="color:#8f5902;font-style:italic"># パッケージの検索&lt;/span>
apt search &lt;span style="color:#000">$QUERY&lt;/span>
apt-cache search &lt;span style="color:#000">$QUERY&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># パッケージの削除&lt;/span>
apt remove &lt;span style="color:#000">$PACKAGE&lt;/span>...
apt-get remove &lt;span style="color:#000">$PACKAGE&lt;/span>...
&lt;span style="color:#8f5902;font-style:italic">## 不要なパッケージを削除 ... 依存関係でインストールされたが、使われなくなったもの&lt;/span>
apt autoremove
&lt;span style="color:#8f5902;font-style:italic"># インストールされたパッケージの一覧&lt;/span>
dpkg -l
&lt;span style="color:#8f5902;font-style:italic"># パッケージがインストールされているか調べる&lt;/span>
dpkg -l &lt;span style="color:#000">$PACKAGE&lt;/span>
dpkg-query -l &lt;span style="color:#000">$PACKAGE&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># インストールされたパッケージに含まれるファイルリストを表示&lt;/span>
dpkg-query -L &lt;span style="color:#000">$PACKAGE&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="インストール">インストール&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">apt install &lt;span style="color:#000">$PACKAGE&lt;/span>...
apt-get install &lt;span style="color:#000">$PACKAGE&lt;/span>...
&lt;span style="color:#8f5902;font-style:italic"># バージョン指定&lt;/span>
apt-get install &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">PACKAGE&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">VERSION&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>...
&lt;span style="color:#8f5902;font-style:italic"># .debパッケージファイルをインストール&lt;/span>
dpkg -i foo.deb
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/isaoshimizu/items/e9c7fdc8efad66422cae">apt-getでversionを指定してインストールする方法 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="参考">参考&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://www.tkd55.net/?p=816">Debian系のファイル管理コマンドもまとめてみた | tkd55&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://d.hatena.ne.jp/bluerepliroid/20071205/1197288679">aptとdpkg - intrinsic feeling&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/SUZUKI_Masaya/items/1fd9489e631c78e5b007">aptコマンドチートシート - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://news.mynavi.jp/article/20100420-a053/">rpm、deb、depot、msiパッケージの展開と一覧表示コマンドまとめ | マイナビニュース&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: kubectl</title><link>https://progrhy.me/tech-notes/a/software/k8s/kubectl/</link><pubDate>Fri, 01 May 2020 12:15:07 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/kubectl/</guid><description>
&lt;p>Kubernetesクラスタを制御するCLI.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/kubectl/overview/">https://kubernetes.io/docs/reference/kubectl/overview/&lt;/a>&lt;/li>
&lt;li>リファレンス: &lt;a href="https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands">https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/kubectl/cheatsheet/">kubectl Cheat Sheet - Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubectl.docs.kubernetes.io/">https://kubectl.docs.kubernetes.io/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-23/">Kubernetes道場 23日目 - kubectlを網羅する - Toku&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="周辺ツール">周辺ツール&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://krew.sigs.k8s.io/">Krew&lt;/a> &amp;hellip; kubectl plugin manager&lt;/li>
&lt;li>&lt;a href="https://github.com/ahmetb/kubectx">kubectx&lt;/a> &amp;hellip; context, namespaceの切替を簡単にしてくれる&lt;/li>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/kustomize/">kustomize&lt;/a> &amp;hellip; Kubernetesのマニフェスト管理ツール。kubectl 1.14からkubectlに取り込まれた&lt;/li>
&lt;li>&lt;a href="https://github.com/lbolla/kube-secret-editor">lbolla/kube-secret-editor&lt;/a> &amp;hellip; secretをデコードした状態で編集することを可能にし、編集後にエンコードして保存してくれる&lt;/li>
&lt;/ul>
&lt;h2 id="設定">設定&lt;/h2>
&lt;h3 id="kubeconfig">kubeconfig&lt;/h3>
&lt;p>環境設定ファイルkubeconfigを参照する順番:&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>&lt;code>--kubeconfig&lt;/code> フラグで指定されたパス&lt;/li>
&lt;li>&lt;code>$KUBECONFIG&lt;/code> 環境変数に指定されたパス一覧&lt;/li>
&lt;li>&lt;code>~/.kube/config&lt;/code>&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>See &lt;a href="https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/">Organizing Cluster Access Using kubeconfig Files - Kubernetes&lt;/a>&lt;/p>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>&lt;code>$KUBECONFIG&lt;/code> は &lt;code>:&lt;/code> 区切りで複数ファイル設定可能で、その場合、複数ファイルがマージされた内容を扱うことができる&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/shoichiimamura/items/91208a9b30e701d1e7f2">kubectlの接続設定ファイル（kubeconfig）の概要 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ユースケース">ユースケース&lt;/h2>
&lt;h3 id="環境設定---config--context">環境設定 - config &amp;amp; context&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## kubeconfig 表示&lt;/span>
kubectl config view
&lt;span style="color:#8f5902;font-style:italic">### 現在のcontextだけを表示&lt;/span>
kubectl config view --minify
&lt;span style="color:#8f5902;font-style:italic">## context&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">### 一覧表示&lt;/span>
kubectl config get-contexts
&lt;span style="color:#8f5902;font-style:italic">#### ヘッダ無しで名前だけ表示&lt;/span>
kubectl config get-contexts --no-headers -o&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>name
&lt;span style="color:#8f5902;font-style:italic">### 現在のcontext&lt;/span>
kubectl config current-context
&lt;span style="color:#8f5902;font-style:italic">### 切替え&lt;/span>
kubectl config use-context &amp;lt;context-name&amp;gt;
&lt;span style="color:#8f5902;font-style:italic">### rename&lt;/span>
kubectl config rename-context &amp;lt;old-name&amp;gt; &amp;lt;new-name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-access-for-kubectl?hl=ja">kubectl 用のクラスタ アクセスの構成 | Kubernetes Engine のドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="namespaceの操作設定">Namespaceの操作・設定&lt;/h3>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># コンテキストのデフォルトnamespaceを設定する&lt;/span>
kubectl config set-context &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>kubectl config current-context&lt;span style="color:#204a87;font-weight:bold">)&lt;/span> --namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>NAMESPACE
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/nirasan/items/9dcc7e45cf20fb72bf8a">kubectl で Namespace を切り替える - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="実行公開">実行・公開&lt;/h3>
&lt;ul>
&lt;li>run &amp;hellip; コンテナイメージを実行する。deploymentまたはjobが作られる。&lt;/li>
&lt;li>expose &amp;hellip; リソースをクラスタ外にServiceとして公開する。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## run&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">### 例&lt;/span>
kubectl run nginx --image&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>nginx
&lt;span style="color:#8f5902;font-style:italic">## expose&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">### 例&lt;/span>
kubectl expose deployment &amp;lt;deployment-name&amp;gt; --port&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span> --target-port&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8000&lt;/span>
kubectl run &amp;lt;deployment-name&amp;gt; --image&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;image-name&amp;gt; --port&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;port&amp;gt;
kubectl expose deployment &amp;lt;deployment-name&amp;gt; --type&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>NodePort
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="app-management">App Management&lt;/h3>
&lt;ul>
&lt;li>autoscale&lt;/li>
&lt;li>scale &amp;hellip; 次のリソースのサイズを設定する:
&lt;ul>
&lt;li>Deployment, ReplicaSet, Replication Controller, StatefulSet&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## scale&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">### ReplicaSet &amp;#39;foo&amp;#39; を3に&lt;/span>
kubectl scale --replicas&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> rs/foo
kubectl scale --replicas&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> -f foo.yml
&lt;span style="color:#8f5902;font-style:italic">### 今のサイズが2だったら3にする&lt;/span>
kubectl scale --current-replicas&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> --replicas&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> deployment/mysql
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="リソース管理">リソース管理&lt;/h3>
&lt;h4 id="作成更新">作成・更新&lt;/h4>
&lt;ul>
&lt;li>create/apply/replace &amp;hellip; JSON or YAMLのリソース定義ファイルを適用して、リソースを作成/更新する。&lt;/li>
&lt;li>patch &amp;hellip; YAML/JSONのマージを用いて、リソース定義を差分更新する&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># create&lt;/span>
kubectl create -f &amp;lt;Path or URL of config file&amp;gt;
&lt;span style="color:#8f5902;font-style:italic">## ファイルから Secret を作成&lt;/span>
kubectl create secret generic my-secret --from-file&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>./secret/secret.json
&lt;span style="color:#8f5902;font-style:italic">## ファイルから ConfigMap を作成&lt;/span>
kubectl create configmap my-config --from-file&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>./config/config.json
&lt;span style="color:#8f5902;font-style:italic"># apply&lt;/span>
kubectl apply -f &amp;lt;Path or URL of config file&amp;gt;
&lt;span style="color:#8f5902;font-style:italic">## 例&lt;/span>
kubectl apply -f https://k8s.io/docs/tasks/run-application/deployment.yaml
kubectl apply -f ./pod.json
&lt;span style="color:#8f5902;font-style:italic"># replace&lt;/span>
kubectl replace -f &amp;lt;Path or URL of config file&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># patch&lt;/span>
kubectl patch &amp;lt;Resource Type&amp;gt; &amp;lt;Name&amp;gt; --patch &amp;lt;YAML Content&amp;gt;
&lt;span style="color:#8f5902;font-style:italic">## 例&lt;/span>
kubectl patch deployment patch-demo --patch &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>cat patch-file.yaml&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/run-application/update-api-object-kubectl-patch/">Update API Objects in Place Using kubectl patch - Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tellme.tokyo/post/2018/08/07/kubernetes-configmaps-secrets/">Kubernetes 上で Credentials を扱う | tellme.tokyo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-23/">Kubernetes道場 23日目 - kubectlを網羅する - Toku&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codeday.me/jp/qa/20190406/566540.html">kubectl applyとkubectl replaceの違いは何ですか - コードログ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="pod操作">Pod操作&lt;/h4>
&lt;ul>
&lt;li>exec &amp;hellip; コマンドをコンテナ内で実行する&lt;/li>
&lt;li>cp &amp;hellip; ファイルをクライアント環境とPod間でやりとり&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## exec&lt;/span>
kubectl &lt;span style="color:#204a87">exec&lt;/span> &amp;lt;pod&amp;gt; -- &amp;lt;command&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>args...&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">### podにbashでログイン&lt;/span>
kubectl &lt;span style="color:#204a87">exec&lt;/span> -it &amp;lt;pod&amp;gt; -- /bin/bash -l
&lt;span style="color:#8f5902;font-style:italic">## cp&lt;/span>
kubectl cp path/to/localfile &amp;lt;pod&amp;gt;:/path/to/remotefile
kubectl cp &amp;lt;pod&amp;gt;:/path/to/remotefile /path/to/localfile
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/suzukihi724/items/515654f54538a2103ee0">kubernetes: コンテナイメージにログインする - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="node操作">Node操作&lt;/h4>
&lt;ul>
&lt;li>cordon &amp;hellip; ノードへのスケジュールを停止&lt;/li>
&lt;li>drain &amp;hellip; ノードからPodを削除&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## cordon&lt;/span>
kubectl cordon &amp;lt;node-name&amp;gt;
&lt;span style="color:#8f5902;font-style:italic">## drain&lt;/span>
kubectl drain &amp;lt;node-name&amp;gt;
&lt;span style="color:#8f5902;font-style:italic">### DaemonSetで管理されてPodを停止するとき&lt;/span>
kubectl drain &amp;lt;node-name&amp;gt; --ignore-daemonsets
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.applibot.co.jp/2016/12/27/kubernetes-zero-downtime/">kubernetesの無停止運用を意識した検証 – てっくぼっと！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/toshihirock/items/d22fee20b1a561b9efea">Kubernetes の drain について検証した時のメモ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="表示">表示&lt;/h4>
&lt;ul>
&lt;li>get &amp;hellip; 単一・複数リソースの情報を表示する。&lt;/li>
&lt;li>describe &amp;hellip; 単一リソース or グループの情報を表示&lt;/li>
&lt;li>diff &amp;hellip; リソースファイルとクラスタの状態を差分表示&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># get&lt;/span>
kubectl get deploy&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>ments&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
kubectl get po&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>ds&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>-o json&lt;span style="color:#000;font-weight:bold">|&lt;/span>yaml&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">## フィルタの例&lt;/span>
kubectl get pods -l &lt;span style="color:#000">app&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>nginx
&lt;span style="color:#8f5902;font-style:italic">## ヘッダ無し + 出力フィールド指定&lt;/span>
kubectl get namespaces --no-headers --output &lt;span style="color:#4e9a06">&amp;#34;custom-columns=NAME:.metadata.name&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># describe&lt;/span>
kubectl describe pods &lt;span style="color:#8f5902;font-style:italic"># all pods&lt;/span>
kubectl describe pod &amp;lt;pod-name&amp;gt;
kubectl describe deploy&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>ment&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &amp;lt;deployment-name&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># diff&lt;/span>
kubectl diff -f foo.yml
&lt;span style="color:#8f5902;font-style:italic">## kustomizeバージョン&lt;/span>
kubectl diff -k .
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="削除">削除&lt;/h4>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## delete&lt;/span>
kubectl delete deployment &amp;lt;deployment-name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="サブコマンド">サブコマンド&lt;/h2>
&lt;h3 id="apply">apply&lt;/h3>
&lt;p>基本的な利用イメージは&lt;a href="#%E4%BD%9C%E6%88%90%E6%9B%B4%E6%96%B0">ユースケース &amp;gt; リソース管理 &amp;gt; 作成更新&lt;/a>を見よ。&lt;/p>
&lt;p>オプション:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>オプション&lt;/th>
&lt;th>デフォルト&lt;/th>
&lt;th>機能&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>--prune&lt;/code>&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>α in 2020-0505. &lt;br />指定されてないリソースを削除する。ただし、&lt;br /> &lt;code>--save-config&lt;/code> オプション付きで作られたものは除く。&lt;br /> &lt;code>-l&lt;/code> フィルタか &lt;code>--all&lt;/code> オプションと同時に使うべし&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--prune-whitelist&lt;/code>&lt;/td>
&lt;td>&lt;code>[]&lt;/code>&lt;/td>
&lt;td>&lt;code>--prune&lt;/code> で使うデフォルトのホワイトリストを上書きする&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># app=nginxラベルのリソースにマニフェストを適用し、マニフェスト外のリソースを削除する&lt;/span>
kubectl apply --prune -f manifest.yaml -l &lt;span style="color:#000">app&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>nginx
&lt;span style="color:#8f5902;font-style:italic"># マニフェストに書かれていないConfigMapを全て削除&lt;/span>
kubectl apply --prune -f manifest.yaml --all --prune-whitelist&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>core/v1/ConfigMap
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="logs">logs&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## 基本構文&lt;/span>
kubectl logs &amp;lt;Pod名&amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Options&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">## 10行 tail -f&lt;/span>
kubectl logs &amp;lt;Pod名&amp;gt; --tail&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -f
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="proxy">proxy&lt;/h3>
&lt;p>API Proxyサーバを起動する&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl proxy --port&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8080&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
curl http://localhost:8080/api/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>See &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/access-cluster-api/">https://kubernetes.io/docs/tasks/administer-cluster/access-cluster-api/&lt;/a>&lt;/p>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="evictedなpodを一括削除するワンライナー">EvictedなPodを一括削除するワンライナー&lt;/h3>
&lt;p>EvictionしたPodは手動削除しないといけないっぽい。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl get pods &lt;span style="color:#000;font-weight:bold">|&lt;/span> awk &lt;span style="color:#4e9a06">&amp;#39;{if ($3 ~ /Evicted/) system (&amp;#34;kubectl delete pods &amp;#34; $1)}&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>PodのEvictionについてはSee &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/concept/#pod-eviction">Concept#pod-eviction&lt;/a>&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/keizokeizo3/items/84a3ece88cd86fde9f75">k8sでEvictedされたpodを一括削除する - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/46419163/what-will-happen-to-evicted-pods-in-kubernetes">What will happen to evicted pods in kubernetes? - Stack Overflow&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="全てのマニフェストを取得したい">全てのマニフェストを取得したい&lt;/h3>
&lt;p>これでよさそう:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl get all --export -o yaml
&lt;/code>&lt;/pre>&lt;/div>&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>※v1.14で &lt;code>--export&lt;/code> オプションはdeprecateされているが、2020-05-07, 代替手段は見つけられていない。&lt;/li>
&lt;li>上だとPodもexport対象になるので、使い勝手悪いかも？&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/kubernetes/kubernetes/issues/24873">Is there a way to generate yml files that will produce the existing cluster? · Issue #24873 · kubernetes/kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/kubernetes/kubernetes/pull/73787">Deprecate &amp;ndash;export flag from get command by soltysh · Pull Request #73787 · kubernetes/kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/tkusumi/items/a824e040475fc47d311a">Kubernetes 1.14: Urgent Upgrade Notes, Deprecations, Removed and deprecated metrics, API Changes - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gist.github.com/negz/c3ee465b48306593f16c523a22015bec">Dump Kubernetes cluster resources as YAML&lt;/a> &amp;hellip; シェルスクリプトで頑張っている事例&lt;/li>
&lt;/ul></description></item><item><title>A: Artifact Registry</title><link>https://progrhy.me/tech-notes/a/google/gcp/gar/</link><pubDate>Tue, 26 May 2020 17:25:33 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/gcp/gar/</guid><description>
&lt;h2 id="about">About&lt;/h2>
&lt;p>The next generation of Container Registry.&lt;/p>
&lt;p>Beta in 2020-05-26&lt;/p>
&lt;ul>
&lt;li>組織のレジストリを1箇所にまとめられる（？）&lt;/li>
&lt;li>コンテナイメージだけでなく、Mavenやnpmなどのパッケージのレジストリとしても使える。&lt;/li>
&lt;/ul>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://cloud.google.com/artifact-registry/docs">https://cloud.google.com/artifact-registry/docs&lt;/a>&lt;/p>
&lt;ul>
&lt;li>[&lt;a href="https://cloud.google.com/artifact-registry/docs/transition-from-gcr?hl=ja">Transitioning from Container Registry&lt;/a>]&lt;/li>
&lt;/ul></description></item><item><title>A: Cloud Load Balancing</title><link>https://progrhy.me/tech-notes/a/google/gcp/lb/</link><pubDate>Mon, 27 Apr 2020 10:48:40 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/gcp/lb/</guid><description>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://cloud.google.com/load-balancing/docs/">https://cloud.google.com/load-balancing/docs/&lt;/a>&lt;/p>
&lt;h2 id="概要">概要&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/load-balancing/docs/https/?hl=ja">HTTP(S) 負荷分散のコンセプト | 負荷分散 | Google Cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/load-balancing/docs/backend-service?hl=ja">バックエンド サービスについて | 負荷分散 | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="spec">Spec&lt;/h2>
&lt;ul>
&lt;li>IP anycast対応&lt;/li>
&lt;li>アーキテクチャ:
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/solutions/about-capacity-optimization-with-global-lb?hl=ja">グローバル負荷分散によるアプリケーションの処理能力の改善 | アーキテクチャ | Google Cloud&lt;/a> &amp;hellip; IP anycast, GFE&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="ssl証明書">SSL証明書&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/load-balancing/docs/ssl-certificates">https://cloud.google.com/load-balancing/docs/ssl-certificates&lt;/a>&lt;/p>
&lt;ul>
&lt;li>マネージド証明書
&lt;ul>
&lt;li>Let&amp;rsquo;s Encrypt&lt;/li>
&lt;li>DV&lt;/li>
&lt;li>自動更新&lt;/li>
&lt;li>ワイルドカードドメインは不可&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="接続ドレイン">接続ドレイン&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/load-balancing/docs/enabling-connection-draining?hl=ja">コネクション ドレインの有効化 | 負荷分散 | Google Cloud&lt;/a>&lt;/p>
&lt;p>コネクションドレインとも表記される。（公式ドキュメント統一してくれ）&lt;/p>
&lt;blockquote>
&lt;p>コネクション ドレインとは、VM がインスタンス グループから除外されたときに、既存の進行中リクエストに完了までの時間が確実に与えられるようにするプロセスです。&lt;/p>
&lt;p>コネクション ドレインを有効にするには、バックエンド サービスでコネクション ドレイン タイムアウトを設定します。タイムアウト時間は 1～3,600 秒に設定してください。&lt;/p>
&lt;/blockquote>
&lt;p>デフォルトONでいいんじゃないかと思うのだが、2020-04-27現在は、上記のように設定が必要。&lt;/p>
&lt;p>次のLBのバックエンドサービスで使える:&lt;/p>
&lt;ul>
&lt;li>HTTP(S) ロードバランサ&lt;/li>
&lt;li>TCP プロキシ ロードバランサ&lt;/li>
&lt;li>SSL プロキシ ロードバランサ&lt;/li>
&lt;li>内部 HTTP(S) ロードバランサ&lt;/li>
&lt;li>内部 TCP / UDP ロードバランサ&lt;/li>
&lt;/ul>
&lt;h2 id="外部https負荷分散">外部HTTP(S)負荷分散&lt;/h2>
&lt;h3 id="バックエンドバケット">バックエンドバケット&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/load-balancing/docs/https/adding-backend-buckets-to-load-balancers?hl=ja">ロードバランサへの Cloud Storage バケットの追加 | 負荷分散 | Google Cloud&lt;/a>&lt;/p>
&lt;p>Cloud Storageバケットをバックエンドに追加し、パスで振り分けることができる。&lt;/p>
&lt;h2 id="logging">Logging&lt;/h2>
&lt;p>&lt;a href="https://cloud.google.com/load-balancing/docs/https/https-logging-monitoring?hl=ja">HTTP(S) 負荷分散のロギングとモニタリング | Google Cloud&lt;/a>&lt;/p>
&lt;h2 id="topics">Topics&lt;/h2>
&lt;h3 id="gclbとcdnによる動的サイト高速化">GCLBとCDNによる動的サイト高速化&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/solutions/about-capacity-optimization-with-global-lb?hl=ja">グローバル負荷分散によるアプリケーションの処理能力の改善 | アーキテクチャ | Google Cloud&lt;/a>にあるように、GCLBを前段に置いたサービスでは、GFEによるネットワーク経路最適化やTLS終端の恩恵を得られる。&lt;br>
従って、APIの&lt;a href="https://docs.microsoft.com/ja-jp/azure/cdn/cdn-dynamic-site-acceleration">動的サイト高速化&lt;/a>をねらいとしてCDNを入れる意味は薄い。&lt;br>
特に、全くキャッシュをしない場合、CDNを入れても入れなくてもほとんど変わらない、とGoogle Cloudの中の人が言っていた。（無意味ではないけど、ネットワークのゆらぎぐらいの差らしい）&lt;/p></description></item><item><title>A: std::io</title><link>https://progrhy.me/tech-notes/a/program/lang/rust/std/io/</link><pubDate>Sun, 31 May 2020 01:23:54 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/rust/std/io/</guid><description>
&lt;p>基礎的なI/O機能を提供する。&lt;/p>
&lt;h2 id="stderr-function">stderr (Function)&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/io/fn.stderr.html">Function std::io::stderr&lt;/a>&lt;/p>
&lt;p>&lt;code>pub fn stderr() -&amp;gt; Stderr&lt;/code>&lt;/p>
&lt;p>当該プロセスの新しい標準エラー出力ハンドルを生成する。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#204a87;font-weight:bold">use&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">std&lt;/span>::&lt;span style="color:#000">io&lt;/span>::&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Write&lt;/span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// Using implicit synchronization
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">fn&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&amp;gt; &lt;span style="color:#000">io&lt;/span>::&lt;span style="color:#204a87">Result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">io&lt;/span>::&lt;span style="color:#000">stderr&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">write_all&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">b&amp;#34;hello world&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Ok&lt;/span>&lt;span style="color:#000;font-weight:bold">(())&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// Using explicit synchronization
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">fn&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&amp;gt; &lt;span style="color:#000">io&lt;/span>::&lt;span style="color:#204a87">Result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">stderr&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">io&lt;/span>::&lt;span style="color:#000">stderr&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">mut&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">handle&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">stderr&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">lock&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">handle&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">write_all&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">b&amp;#34;hello world&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Ok&lt;/span>&lt;span style="color:#000;font-weight:bold">(())&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="stdin-function">stdin (Function)&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/io/fn.stdin.html">Function std::io::stdin&lt;/a>&lt;/p>
&lt;p>&lt;code>pub fn stdin() -&amp;gt; Stdin&lt;/code>&lt;/p>
&lt;p>当該プロセスの新しい標準入力ハンドルを生成する。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#8f5902;font-style:italic">// Using implicit synchronization
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">use&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">std&lt;/span>::&lt;span style="color:#000">io&lt;/span>::&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#3465a4">self&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Read&lt;/span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">fn&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&amp;gt; &lt;span style="color:#000">io&lt;/span>::&lt;span style="color:#204a87">Result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">mut&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">buffer&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">String&lt;/span>::&lt;span style="color:#000">new&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">io&lt;/span>::&lt;span style="color:#000">stdin&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">read_to_string&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">mut&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">buffer&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">?&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Ok&lt;/span>&lt;span style="color:#000;font-weight:bold">(())&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="stdout-function">stdout (Function)&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/io/fn.stdout.html">Function std::io::stdout&lt;/a>&lt;/p>
&lt;p>当該プロセスの新しい標準出力ハンドルを生成する。&lt;/p>
&lt;h2 id="stderr-struct">Stderr (Struct)&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/io/struct.Stderr.html">Struct std::io::Stderr&lt;/a>&lt;/p>
&lt;p>プロセスの標準エラー出力ストリームのハンドル。&lt;/p>
&lt;p>詳しくは&lt;a href="">io::stderr&lt;/a>を見よ。&lt;/p>
&lt;h2 id="stdin-struct">Stdin (Struct)&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/io/struct.Stdin.html">Struct std::io::Stdin&lt;/a>&lt;/p>
&lt;p>プロセスの標準入力ストリームのハンドル。&lt;br>
個々のハンドルは、当該プロセスに対する入力データのグローバルバッファの参照を共有する。
ハンドルは &lt;code>BufRead&lt;/code> メソッドにフルアクセスを得るためにロックされることがある。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#204a87;font-weight:bold">use&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">std&lt;/span>::&lt;span style="color:#000">io&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">mut&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">input&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">String&lt;/span>::&lt;span style="color:#000">new&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">match&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">io&lt;/span>::&lt;span style="color:#000">stdin&lt;/span>&lt;span style="color:#000;font-weight:bold">().&lt;/span>&lt;span style="color:#000">read_line&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">mut&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Ok&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">n&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;{} bytes read&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">n&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;{}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Err&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">error&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&amp;gt;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">println&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">!&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;error: {}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">error&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="read_line-method">read_line (Method)&lt;/h3>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/string/struct.String.html#method.new">Method Stdin::read_line&lt;/a>&lt;/p>
&lt;p>&lt;code>pub fn read_line(&amp;amp;self, buf: &amp;amp;mut String) -&amp;gt; Result&amp;lt;usize&amp;gt;&lt;/code>&lt;/p>
&lt;p>当該ハンドルをロックして入力行を読み込む。&lt;/p>
&lt;p>詳しくは &lt;a href="https://doc.rust-lang.org/std/io/trait.BufRead.html#method.read_line">BufRead::read_line&lt;/a> を見よ。&lt;/p>
&lt;h2 id="stdout-struct">Stdout (Struct)&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/io/struct.Stdout.html">Struct std::io::Stdout&lt;/a>&lt;/p>
&lt;p>プロセスの標準出力ストリームのハンドル。&lt;br>
&lt;a href="#stdout-function">io::stdout&lt;/a>関数によって生成される。&lt;/p>
&lt;h2 id="write-trait">Write (Trait)&lt;/h2>
&lt;h3 id="flush-required-method">flush (Required Method)&lt;/h3>
&lt;p>&lt;a href="https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush">https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush&lt;/a>&lt;/p>
&lt;p>&lt;code>fn flush(&amp;amp;mut self) -&amp;gt; Result&amp;lt;()&amp;gt;&lt;/code>&lt;/p>
&lt;p>出力ストリームをフラッシュする。&lt;/p></description></item><item><title>A: kustomize</title><link>https://progrhy.me/tech-notes/a/software/k8s/kustomize/</link><pubDate>Mon, 04 May 2020 17:54:50 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/kustomize/</guid><description>
&lt;p>Kubernetesのマニフェスト管理ツール。&lt;/p>
&lt;p>リポジトリ: &lt;a href="https://github.com/kubernetes-sigs/kustomize">https://github.com/kubernetes-sigs/kustomize&lt;/a>&lt;/p>
&lt;p>kubectl 1.14からkustomizeが統合されている。&lt;/p>
&lt;h2 id="ドキュメント情報リソース">ドキュメント/情報リソース&lt;/h2>
&lt;ul>
&lt;li>Reference: &lt;a href="https://kubectl.docs.kubernetes.io/pages/reference/kustomize.html">https://kubectl.docs.kubernetes.io/pages/reference/kustomize.html&lt;/a>&lt;/li>
&lt;li>Examples: &lt;a href="https://github.com/kubernetes-sigs/kustomize/tree/master/examples">https://github.com/kubernetes-sigs/kustomize/tree/master/examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="cli-usage">CLI Usage&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl kustomize
&lt;span style="color:#8f5902;font-style:italic"># kustomization.yaml を含むディレクトリで&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">## Apply the Resource Config&lt;/span>
kubectl apply -k .
&lt;span style="color:#8f5902;font-style:italic">## View the Resources&lt;/span>
kubectl get -k .
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubectl.docs.kubernetes.io/pages/app_management/apply.html">https://kubectl.docs.kubernetes.io/pages/app_management/apply.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="configmapの管理">ConfigMapの管理&lt;/h3>
&lt;ol>
&lt;li>configMapGeneratorで生成&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>(2020-03-18) &lt;code>behavior&lt;/code> を &lt;code>create&lt;/code>, &lt;code>replace&lt;/code>, &lt;code>merge&lt;/code> から選べるのだが、 &lt;code>create&lt;/code> 以外だとdiffでエラーが出るのだが…&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>resourcesで管理&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>ConfigMapをYAMLで管理することになる。こっちの方が扱いやすいように感じた&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://deeeet.com/writing/2018/07/10/kustomize/">KustomizeでKubernetes YAMLを管理する | SOTA&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.mosuke.tech/entry/2019/06/21/kustomize/">Kustomizeで環境ごとに異なるマニフェストを作る | Goldstine研究所&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Homebrew</title><link>https://progrhy.me/tech-notes/a/software/pkg-man/brew/</link><pubDate>Mon, 04 May 2020 17:19:03 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/pkg-man/brew/</guid><description>
&lt;p>かねてからmacOSでユーザーランドで動くパッケージ管理ソフトとして開発者に親しまれてきたツールだが、2019年にLinuxにも正式に対応した。&lt;/p>
&lt;p>関連ページ:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/os/mac/">OS &amp;gt; macOS&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;ul>
&lt;li>インストール &amp;hellip; &lt;a href="https://brew.sh/">https://brew.sh/&lt;/a> に従う&lt;/li>
&lt;/ul>
&lt;h2 id="macos">macOS&lt;/h2>
&lt;ul>
&lt;li>デフォルトで &lt;code>/usr/local&lt;/code> にインストールされる&lt;/li>
&lt;/ul>
&lt;h2 id="linux">Linux&lt;/h2>
&lt;p>&lt;a href="https://docs.brew.sh/Homebrew-on-Linux">https://docs.brew.sh/Homebrew-on-Linux&lt;/a>&lt;/p>
&lt;ul>
&lt;li>デフォルトで &lt;code>/home/linuxbrew/.linuxbrew&lt;/code> にインストールされる&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tech-progrhyme.hatenablog.com/entry/2020/04/29/222302">UbuntuにHomebrewを入れてHomebrew Bundleでパッケージ管理することにした - progrhyme&amp;rsquo;s tech blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="homebrew-bundle">Homebrew Bundle&lt;/h2>
&lt;p>&lt;a href="https://github.com/Homebrew/homebrew-bundle">https://github.com/Homebrew/homebrew-bundle&lt;/a>&lt;/p>
&lt;p>Rubyのbundlerのように、brewでインストールするパッケージをBrewfileという構成ファイルにまとめる。&lt;/p>
&lt;p>オプションなしで実行した場合、カレントディレクトリの &lt;code>Brewfile&lt;/code> を参照する。&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># Brewfileに基づいてパッケージインストール&lt;/span>
brew bundle &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>install&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Brewfileに入ってないパッケージを削除する&lt;/span>
brew bundle cleanup &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--force&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># インストールされているパッケージリストをBrewfileに書き出す&lt;/span>
brew bundle dump &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>オプション:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>オプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>--global&lt;/code>&lt;/td>
&lt;td>&lt;code>~/.Brewfile&lt;/code> を見に行く&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--file &amp;lt;File&amp;gt;&lt;/code>&lt;/td>
&lt;td>Brewfileを指定する&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kiririmode.hatenablog.jp/entry/20200103/1578033722">Macでのアプリケーションインストールの自動化 - 理系学生日記&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="brewfile">Brewfile&lt;/h3>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Ruby" data-lang="Ruby">&lt;span style="color:#000">tap&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;homebrew/bundle&amp;#34;&lt;/span>
&lt;span style="color:#000">tap&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;homebrew/core&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># macOSでcaskを使う&lt;/span>
&lt;span style="color:#000">tap&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;homebrew/cask&amp;#34;&lt;/span>
&lt;span style="color:#000">cask_args&lt;/span> &lt;span style="color:#4e9a06">appdir&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/Applications&amp;#34;&lt;/span>
&lt;span style="color:#000">cask&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;google-chrome&amp;#34;&lt;/span>
&lt;span style="color:#000">brew&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;bash&amp;#34;&lt;/span>
&lt;span style="color:#000">brew&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;zsh&amp;#34;&lt;/span>
&lt;span style="color:#000">brew&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;git&amp;#34;&lt;/span>
&lt;span style="color:#000">brew&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;vim&amp;#34;&lt;/span>
&lt;span style="color:#000">brew&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;tmux&amp;#34;&lt;/span>
&lt;span style="color:#000">brew&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;direnv&amp;#34;&lt;/span>
&lt;span style="color:#000">brew&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;jq&amp;#34;&lt;/span>
&lt;span style="color:#000">brew&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;the_silver_searcher&amp;#34;&lt;/span>
&lt;span style="color:#000">brew&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coreutils&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>RubyのDSLなので普通に &lt;code># ...&lt;/code> でコメントが書けるらしい
&lt;ul>
&lt;li>&lt;a href="https://github.com/Homebrew/homebrew-bundle/issues/146">Allow comments in Brewfile · Issue #146 · Homebrew/homebrew-bundle&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>A: Compute Engine</title><link>https://progrhy.me/tech-notes/a/google/gcp/gce/</link><pubDate>Mon, 04 May 2020 09:10:38 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/gcp/gce/</guid><description>
&lt;h2 id="仮想マシン">仮想マシン&lt;/h2>
&lt;p>&lt;a href="https://cloud.google.com/compute/docs/machine-types?hl=ja">マシンタイプ | Compute Engine ドキュメント | Google Cloud&lt;/a>&lt;/p>
&lt;h3 id="プリエンプティブルvmインスタンス">プリエンプティブルVMインスタンス&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/compute/docs/instances/preemptible">https://cloud.google.com/compute/docs/instances/preemptible&lt;/a>&lt;/p>
&lt;p>Preemptible VM Instance. AWSでいうところのスポットインスタンス。&lt;/p>
&lt;ul>
&lt;li>いつでも停止される可能性がある&lt;/li>
&lt;li>24時間実行したら必ず停止される&lt;/li>
&lt;/ul>
&lt;h4 id="プリエンプト処理">プリエンプト処理&lt;/h4>
&lt;ol>
&lt;li>プリエンプション通知を&lt;a href="https://en.wikipedia.org/wiki/Advanced_Configuration_and_Power_Interface#Power_states">ACPI G2 ソフトオフ&lt;/a>形式でインスタンスに送信&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/compute/docs/instances/create-start-preemptible-instance?hl=ja#handle_preemption">シャットダウンスクリプト&lt;/a>によってプリエンプションを処理。インスタンス停止前にクリーンアップ操作を実施できる&lt;/li>
&lt;li>インスタンスが30秒以内に停止しないと、&lt;a href="https://en.wikipedia.org/wiki/Advanced_Configuration_and_Power_Interface#Power_states">ACPI G3 メカニカルオフ&lt;/a>信号がOSに送信される&lt;/li>
&lt;li>インスタンスは &lt;code>TERMINATED&lt;/code> 状態になる&lt;/li>
&lt;/ol>
&lt;h4 id="プリエンプトされたかどうか調べる">プリエンプトされたかどうか調べる&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/compute/docs/instances/create-start-preemptible-instance?hl=ja#detecting_if_an_instance_was_preempted">https://cloud.google.com/compute/docs/instances/create-start-preemptible-instance?hl=ja#detecting_if_an_instance_was_preempted&lt;/a>&lt;/p>
&lt;p>Cloud Loggingで &lt;code>compute.instances.preempted&lt;/code> で検索。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/58256153/gcp-vm-consistently-shutting-down-without-warning">ssh - GCP VM consistently shutting down without warning - Stack Overflow&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="参考">参考&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.marketechlabo.com/gce-preemptible-instance/">格安に使えるGCEのプリエンプティブインスタンスの勝手に停止対策 | marketechlabo&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="インスタンスグループ">インスタンスグループ&lt;/h3>
&lt;ul>
&lt;li>マネージド &amp;hellip; オートスケールする。インスタンステンプレートを使う&lt;/li>
&lt;li>非マネージド &amp;hellip; 自前でインスタンスを登録して管理
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-unmanaged-instances?hl=ja">非マネージド インスタンス グループの作成 | Compute Engine ドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="shielded-vm">Shielded VM&lt;/h3>
&lt;p>Documents:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/security/shielded-cloud/shielded-vm?hl=ja">Shielded VM | ドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Features:&lt;/p>
&lt;ul>
&lt;li>セキュアブート&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/compute/docs/instances/integrity-monitoring?hl=ja">整合性モニタリング&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>整合性チェックに引っかかると、インスタンスが起動しない（起動直後にシャットダウンする）ことがある&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/firmware/uefi/#%E3%82%BB%E3%82%AD%E3%83%A5%E3%82%A2%E3%83%96%E3%83%BC%E3%83%88">UEFI#セキュアブート&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/56100268/why-my-google-cloud-instance-often-shut-down-automatically-by-itself">why my google cloud instance often shut down automatically by itself - Stack Overflow&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="machine-images">Machine Images&lt;/h2>
&lt;p>Beta at 2020-04-16現在&lt;/p>
&lt;p>&lt;a href="https://cloud.google.com/compute/docs/machine-images">https://cloud.google.com/compute/docs/machine-images&lt;/a>&lt;/p>
&lt;p>最近リリースされたやつ。&lt;br>
従来のImageとの違いは↑に書いてある。&lt;/p>
&lt;h2 id="images">Images&lt;/h2>
&lt;p>&lt;a href="https://cloud.google.com/compute/docs/images?hl=ja">https://cloud.google.com/compute/docs/images?hl=ja&lt;/a>&lt;/p>
&lt;p>AWS AMIみたいなもの&lt;/p>
&lt;p>Documents:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/compute/docs/images/sharing-images-across-projects?hl=ja">イメージとスナップショットの共有 | Compute Engine ドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>VMからカスタムイメージを作る場合は、VMを停止しないと駄目みたい&lt;/li>
&lt;/ul></description></item><item><title>A: CLI</title><link>https://progrhy.me/tech-notes/a/software/terraform/cli/</link><pubDate>Sun, 26 Apr 2020 23:06:08 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/terraform/cli/</guid><description>
&lt;p>&lt;a href="https://www.terraform.io/docs/commands/">https://www.terraform.io/docs/commands/&lt;/a>&lt;/p>
&lt;h2 id="import">import&lt;/h2>
&lt;p>&lt;a href="https://www.terraform.io/docs/import/usage.html">https://www.terraform.io/docs/import/usage.html&lt;/a>&lt;/p>
&lt;p>&lt;code>terraform import&lt;/code> コマンドにより、既存インフラをTerraform管理下に置くことができる。&lt;/p>
&lt;p>一部インフラを手動で作った後、リソースのidを指定して取り込む、といった使い方ができる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/tyasu/items/32b23dd76d25f7af712f" title="terraform importの使い方メモ - Qiita">terraform importの使い方メモ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="plan">plan&lt;/h2>
&lt;p>&lt;a href="https://www.terraform.io/docs/commands/plan.html">https://www.terraform.io/docs/commands/plan.html&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 対象を限定する&lt;/span>
terraform plan -target&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>resource_type1.identifier1 -target&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>resource_type2.identifier2
&lt;span style="color:#8f5902;font-style:italic"># planファイルを書き出す&lt;/span>
terraform plan -out&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>path/to/tfplan
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="state">state&lt;/h2>
&lt;p>&lt;a href="https://www.terraform.io/docs/commands/state/">https://www.terraform.io/docs/commands/state/&lt;/a>&lt;/p>
&lt;p>stateの管理・編集を行うコマンド。&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">terraform state list &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>filtering-arg&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># terraform管理下のリソース一覧&lt;/span>
terraform state pull &lt;span style="color:#8f5902;font-style:italic"># リモートのstateファイルをダウンロードして標準出力に表示&lt;/span>
terraform state push &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTION&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> PATH &lt;span style="color:#8f5902;font-style:italic"># ローカルのstateファイルをリモートにアップロード&lt;/span>
terraform state mv SOURCE DESTINATION &lt;span style="color:#8f5902;font-style:italic"># リソースの名称変更。module化も可能&lt;/span>
terraform state rm リソース &lt;span style="color:#8f5902;font-style:italic"># リソースをterraform管理から除く = tfstateファイルから削除&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>A: Container Registry</title><link>https://progrhy.me/tech-notes/a/google/gcp/gcr/</link><pubDate>Thu, 07 May 2020 16:23:49 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/gcp/gcr/</guid><description>
&lt;p>Dockerコンテナレジストリ。&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>Documentation:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/container-registry/docs">https://cloud.google.com/container-registry/docs&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/container-registry/docs?hl=ja">リソース&lt;/a> &amp;hellip; 料金、クォータ、リリースノートなど&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="認証">認証&lt;/h3>
&lt;p>dockerコマンドでGCRにアクセスできるようにする:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud auth configure-docker
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://cloud.google.com/container-registry/docs/advanced-authentication">https://cloud.google.com/container-registry/docs/advanced-authentication&lt;/a>&lt;/p>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="pubsub通知">Pub/Sub通知&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/container-registry/docs/configuring-notifications?hl=ja">Pub/Sub 通知の構成 | Container Registry のドキュメント | Google Cloud&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>イメージが push、タグ付け、削除されたときなど、Container Registry リポジトリに変更が加えられた場合、Pub/Sub を使用して通知を受け取ることができます&lt;/p>
&lt;/blockquote></description></item><item><title>A: Google Kubernetes Engine</title><link>https://progrhy.me/tech-notes/a/google/gcp/gke/</link><pubDate>Mon, 27 Apr 2020 11:01:49 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/gcp/gke/</guid><description>
&lt;p>関連ページ:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/k8s/">Software &amp;gt; Kubernetes&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/tutorials?hl=ja">チュートリアル | Kubernetes Engine ドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to?hl=ja">入門ガイド | Kubernetes Engine ドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/?hl=ja">https://cloud.google.com/kubernetes-engine/docs/?hl=ja&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/quotas?hl=ja">https://cloud.google.com/kubernetes-engine/quotas?hl=ja&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ベストプラクティス">ベストプラクティス&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/solutions/best-practices-for-operating-containers">Best Practices for Operating Containers | Architectures | Google Cloud&lt;/a>
&lt;ul>
&lt;li>Logging, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-terminating-with-grace">Kubernetes best practices: terminating with grace | Google Cloud Blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="機能">機能&lt;/h2>
&lt;h3 id="負荷分散">負荷分散&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/ingress">https://cloud.google.com/kubernetes-engine/docs/concepts/ingress&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="https-負荷分散">HTTP(S) 負荷分散&lt;/h4>
&lt;p>Ingressで複数のバックエンドServiceを設定できる。設定例:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>extensions/v1beta1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Ingress&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>my-ingress&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rules&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">http&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">paths&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>/*&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">backend&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">serviceName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>my-products&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">servicePort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">60000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>/discounted&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">backend&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">serviceName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>my-discounted-products&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">servicePort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="managed-ssl-certificateを使う">Managed SSL certificateを使う&lt;/h5>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs">https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs&lt;/a>&lt;/p>
&lt;ul>
&lt;li>GCPの静的IPを払い出し、対象のDNSレコードに設定する必要がある&lt;/li>
&lt;/ul>
&lt;p>See also &lt;a href="https://sites.google.com/site/progrhymetechwiki/cloud/gcp/gclb#TOC-SSL-">https://sites.google.com/site/progrhymetechwiki/cloud/gcp/gclb#TOC-SSL-&lt;/a>&lt;/p>
&lt;h5 id="httpの無効化">HTTPの無効化&lt;/h5>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/ingress?hl=ja#disabling_http">https://cloud.google.com/kubernetes-engine/docs/concepts/ingress?hl=ja#disabling_http&lt;/a>&lt;/p>
&lt;p>HTTPSのみを使うときはアノテーション &lt;code>kubernetes.io/ingress.allow-http&lt;/code> の値を &lt;code>&amp;quot;false&amp;quot;&lt;/code> に設定する。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>extensions/v1beta1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Ingress&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>my-ingress&lt;span style="color:#0000cf;font-weight:bold">-2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">annotations&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kubernetes.io/ingress.allow-http&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">secretName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>my-secret&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>...&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>※2020-03-04現在、K8sのバージョンによっては、マネージドSSL証明書を使う場合は、 &lt;code>ingress.gcp.kubernetes.io/pre-shared-cert&lt;/code> アノテーションの値に証明書名を入れる必要がある。1.15.x-gke.y の場合は自動でアノテーション付けてくれるっぽい。&lt;br>
See &lt;a href="https://github.com/kubernetes/ingress-gce/issues/1001">https://github.com/kubernetes/ingress-gce/issues/1001&lt;/a>&lt;/p>
&lt;h3 id="内部tcpudp負荷分散">内部TCP/UDP負荷分散&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balancing?hl=ja">内部 TCP / UDP 負荷分散 | Kubernetes Engine のドキュメント | Google Cloud&lt;/a>&lt;/p>
&lt;p>2020-03-25現在、β版&lt;/p>
&lt;ul>
&lt;li>Serviceを &lt;code>type: LoadBalancer&lt;/code> で作成し、所定のannotationを入れる&lt;/li>
&lt;li>内部LBが作成される&lt;/li>
&lt;li>Ingressは不要&lt;/li>
&lt;li>Compute InstanceGroupで振り分けされる
&lt;ul>
&lt;li>2020-03-25現在、ネットワークエンドポイントグループには対応していない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>同じDeploymentで、内部LBのServiceと外部HTTP(S)負荷分散用の2つのServiceを持つことができる&lt;/li>
&lt;/ul>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Service&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>ilb-service&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">annotations&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">cloud.google.com/load-balancer-type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Internal&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>hello&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>LoadBalancer&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">app&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>hello&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">targetPort&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8080&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>TCP&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="backendconfigβ-on-2020-04-27">BackendConfig（β on 2020-04-27）&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/backendconfig?hl=en">https://cloud.google.com/kubernetes-engine/docs/concepts/backendconfig?hl=en&lt;/a>&lt;/p>
&lt;p>GKE固有のcustom resource.&lt;/p>
&lt;p>BackendConfigによって、HTTP(S) Load Balancingに以下の機能を設定できる:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/cdn-backendconfig">Cloud CDN&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/cloud-armor-backendconfig">Cloud Armor&lt;/a>&lt;/li>
&lt;li>Identity-Aware Proxy (IAP)&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/configure-backend-service">Timeout, Connection draining timeout, Session affinity, User-defined request headers&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Example:&lt;/p>
&lt;ul>
&lt;li>タイムアウトを40秒に設定&lt;/li>
&lt;li>接続ドレインタイムアウトを60秒に設定&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>cloud.google.com/v1beta1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>BackendConfig&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>my-bsc-backendconfig&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">timeoutSec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">40&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">connectionDraining&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">drainingTimeoutSec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">60&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="workload-identity">Workload Identity&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity?hl=ja">Workload Identity | Kubernetes Engine ドキュメント | Google Cloud&lt;/a>&lt;/p>
&lt;ul>
&lt;li>GCP Service AccountとK8s Service Accountの紐付け設定をすることができる&lt;/li>
&lt;li>GKE Metadata Serverを有効にしている必要があるようだ&lt;/li>
&lt;/ul>
&lt;p>メリット:&lt;/p>
&lt;ul>
&lt;li>GCP Service Account Keyが不要になる&lt;/li>
&lt;/ul>
&lt;h3 id="config-connector">Config Connector&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/config-connector/docs/overview?hl=ja">Config Connector の概要 | Config Connector のドキュメント | Google Cloud&lt;/a>&lt;/p>
&lt;ul>
&lt;li>K8s addon.&lt;/li>
&lt;li>K8sのCRDと関連するコントローラを提供してくれる&lt;/li>
&lt;li>あたかもK8sのリソースかのようにGCPリソースを管理できるようになる&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>2020-02-05 &lt;a href="https://medium.com/google-cloud-jp/%E3%82%82%E3%81%A3%E3%81%A8gcp%E3%81%8C%E4%BD%BF%E3%81%84%E3%82%84%E3%81%99%E3%81%8F%E3%81%AA%E3%82%8B-gke-config-connector%E3%82%92%E8%A9%A6%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F-e1a3370010ea">もっとGCPが使いやすくなる!? GKE Config Connectorを試してみた！ - google-cloud-jp - Medium&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="仕様">仕様&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler?hl=ja">クラスタ オートスケーラー | Kubernetes Engine のドキュメント | Google Cloud&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-autoscaler?hl=ja">クラスタの自動スケーリング | Kubernetes Engine のドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="quota">Quota&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/quotas">https://cloud.google.com/kubernetes-engine/quotas&lt;/a>&lt;/p>
&lt;p>Last updated at 2020-04-13&lt;/p>
&lt;ul>
&lt;li>GKEクラスタごと
&lt;ul>
&lt;li>クラスタあたりの最大ノード数: 5,000&lt;/li>
&lt;li>ノードプールあたりの最大ノード数: 1,000&lt;/li>
&lt;li>ノードあたりの最大ポッド数: 110&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="限定公開クラスタ">限定公開クラスタ&lt;/h3>
&lt;p>Documents:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters?hl=ja">限定公開クラスタの設定 | Kubernetes Engine のドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/container/clusters/create?hl=ja">https://cloud.google.com/sdk/gcloud/reference/container/clusters/create?hl=ja&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/nat/docs/gke-example">Example GKE Setup | Cloud NAT | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>要点:&lt;/p>
&lt;ul>
&lt;li>ノードは内部IPアドレスのみを持つため、インターネットから隔離される&lt;/li>
&lt;li>限定公開クラスタでは、マスターへのアクセスを制御できる&lt;/li>
&lt;li>LB経由で受信トラフィックを受けられる。また、内部LB経由でVPC内のトラフィックを受けることもできる&lt;/li>
&lt;li>外と通信したいときは、上記の「Example GKE Setup」にあるように、Cloud NAT + Cloud Routerをセットアップする&lt;/li>
&lt;/ul>
&lt;p>Tips:&lt;/p>
&lt;ul>
&lt;li>(2019-12-02現在) &lt;code>gcloud container clusters create&lt;/code> コマンドでは &lt;code>--enable-private-nodes --master-ipv4-cidr &amp;lt;CIDR&amp;gt;&lt;/code> オプションをつける&lt;/li>
&lt;/ul>
&lt;h4 id="制限事項">制限事項&lt;/h4>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters?hl=ja#req_res_lim">限定公開クラスタの作成 | Kubernetes Engine ドキュメント | Google Cloud#要件、制約、制限&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/vpc/docs/alias-ip?hl=ja">エイリアスIP範囲&lt;/a>が有効なVPCネイティブクラスタである必要がある
&lt;ul>
&lt;li>See &lt;a href="#vpc%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%BF%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B">VPCネイティブクラスタを作成する&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="horizontal-pod-autoscaler">Horizontal Pod Autoscaler&lt;/h3>
&lt;p>HPA.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/horizontalpodautoscaler?hl=ja">水平ポッド自動スケーリング | Kubernetes Engine のドキュメント | Google Cloud&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/tutorials/external-metrics-autoscaling?hl=ja">外部指標によるデプロイの自動スケーリング | Kubernetes Engine のチュートリアル | Google Cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/tutorials/custom-metrics-autoscaling?hl=ja">カスタム指標でのデプロイの自動スケーリング | Kubernetes Engine のチュートリアル | Google Cloud&lt;/a>&lt;/li>
&lt;li>いずれもCloud Monitoringメトリクスでスケール設定を行う&lt;/li>
&lt;li>&lt;a href="https://github.com/GoogleCloudPlatform/k8s-stackdriver/tree/master/custom-metrics-stackdriver-adapter">https://github.com/GoogleCloudPlatform/k8s-stackdriver/tree/master/custom-metrics-stackdriver-adapter&lt;/a> をクラスタにデプロイする&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://sites.google.com/site/progrhymetechwiki/software/k8s#TOC-Horizontal-Pod-Autoscaler">https://sites.google.com/site/progrhymetechwiki/software/k8s#TOC-Horizontal-Pod-Autoscaler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.doit-intl.com/autoscaling-k8s-hpa-with-google-http-s-load-balancer-rps-stackdriver-metric-92db0a28e1ea">Autoscaling K8s HPA with Google HTTP/S Load-Balancer RPS EXTERNAL Stackdriver Metrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="コンテナネイティブの負荷分散">コンテナネイティブの負荷分散&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/container-native-load-balancing?hl=ja">コンテナ ネイティブの負荷分散を使用する | Kubernetes Engine のドキュメント | Google Cloud&lt;/a>&lt;/p>
&lt;p>TL;DR:&lt;/p>
&lt;ul>
&lt;li>ネットワークエンドポイントグループ(NEG)を作成して、Podに均等にトラフィックを分配できる&lt;/li>
&lt;li>従来の方式だとインスタンスグループ経由のアクセスで、iptablesを介してPodにアクセスしており、余分なネットワークオーバーヘッドが発生していた&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/container-native-load-balancing#known_issues">既知の問題&lt;/a>（2020-04-27時点）:&lt;/p>
&lt;ul>
&lt;li>GKEのガベージコレクションが2分間隔なので、LBが完全に削除される前にクラスタが削除された場合、NEGを手動で削除する必要がある&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/container-native-load-balancing#pod_readiness">Podのreadinessフィードバック&lt;/a>を&lt;u>使っていない場合&lt;/u>、ワークロードをデプロイするときや再起動するときに、ワークロードの更新完了に要する時間よりも、新しいエンドポイントの伝播に要する時間のほうが長くなる場合がある&lt;/li>
&lt;/ul>
&lt;h3 id="vpcネイティブクラスタ">VPCネイティブクラスタ&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/alias-ips?hl=ja">VPC ネイティブ クラスタを作成する | Kubernetes Engine ドキュメント | Google Cloud&lt;/a>&lt;/p>
&lt;p>2020-05-04現在、GCPコンソールから作成する場合はデフォルトでVPCネイティブクラスタになるが、REST APIやgcloudコマンドでは&lt;a href="https://cloud.google.com/vpc/docs/routes?hl=ja">ルートベースクラスタ&lt;/a>になるので注意。&lt;/p>
&lt;p>2つのやり方がある:&lt;/p>
&lt;ol>
&lt;li>既存のサブネットにクラスタを作成する。アドレス範囲の割り当て方は下の2つ:
&lt;ul>
&lt;li>GKE管理のセカンダリ範囲割り当て&lt;/li>
&lt;li>ユーザー管理のセカンダリ範囲割り当て&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>クラスタとサブネットを同時に作成する。セカンダリアドレス範囲の割り当てはGKE管理となる&lt;/li>
&lt;/ol>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="アップグレード">アップグレード&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/upgrading-a-cluster">https://cloud.google.com/kubernetes-engine/docs/how-to/upgrading-a-cluster&lt;/a>&lt;/p>
&lt;p>Tips:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels">リリースチャネル&lt;/a>を指定することで、自動アップグレードできる&lt;/li>
&lt;/ul>
&lt;h3 id="kubeconfigエントリを生成">kubeconfigエントリを生成&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud container clusters get-credentials &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>CLUSTER_NAME&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--project PROJECT&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>--region REGION&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>↑のコマンドは更に、クラスタをデフォルトのkubectlのcontextに設定する。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-access-for-kubectl?hl=ja">kubectl 用のクラスタ アクセスの構成 | Kubernetes Engine のドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="ノードプールを作り直す">ノードプールを作り直す&lt;/h3>
&lt;p>マシンタイプやサービスアカウントを変えるときなどには、ノードプールの作り直しが発生する。&lt;br>
次の要領でやれば良い:&lt;/p>
&lt;ol>
&lt;li>新しいプールを作成&lt;/li>
&lt;li>ワークロードを新しいプールに移行&lt;/li>
&lt;li>古いプールを削除&lt;/li>
&lt;/ol>
&lt;p>ドキュメントでは、 &lt;a href="https://cloud.google.com/kubernetes-engine/docs/tutorials/migrating-node-pool?hl=ja">異なるマシンタイプへのワークロードの移行 | Kubernetes Engine のチュートリアル | Google Cloud&lt;/a> の手順に従う形になる。&lt;/p>
&lt;p>ただし、この手順に愚直に従うとドレインした瞬間に旧プール上のPodがevictionされ、サービス停止することもあり得るので、常時稼働のワークロードであれば、cordonでノードへのスケジューリングを停止した後、Podをスケールさせて新しいプールにPodが配置された後にドレインした方がよさそう。&lt;/p>
&lt;h3 id="gkeのノードにssh">GKEのノードにSSH&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/compute/docs/instances/connecting-advanced#sshbetweeninstances">高度な方法によるインスタンスへの接続 | Compute Engine ドキュメント | Google Cloud&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/inductor/items/bc0ff7d761e0cc7e9394">限定公開クラスターのGKEノードにサクッとSSHする方法 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/sonots/items/6e2a57af945cf0daedd4">GKE で k8s クラスタの node に ssh する - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://acloud.guru/forums/gcp-certified-associate-cloud-engineer/discussion/-Lh3ET0aNrv3FwNbNvh6/Insufficient%20Permission:%20Request%20had%20insufficient%20authentication%20scopes.">Insufficient Permission: Request had insufficient authentication scopes. - Course: Google Certified Associate Cloud Engineer 2020&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="メンテナンス時間枠と除外枠の設定">メンテナンス時間枠と除外枠の設定&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/maintenance-windows-and-exclusions?hl=ja">メンテナンスの時間枠と除外の構成 | Kubernetes Engine ドキュメント | Google Cloud&lt;/a>&lt;/p>
&lt;ul>
&lt;li>クラスタやノードのアップグレードが行われる時間枠を設定可能。&lt;/li>
&lt;li>（たぶん）最短4時間&lt;/li>
&lt;/ul>
&lt;h3 id="docker-hubのイメージを使うには">Docker Hubのイメージを使うには？&lt;/h3>
&lt;p>公開イメージだったら普通に使える。&lt;/p>
&lt;p>プライベートなイメージでも認証情報を渡せば普通に使えるんじゃないかな。&lt;/p>
&lt;p>MEMO:&lt;/p>
&lt;ul>
&lt;li>日本語の記事だとミラーしたり、GCRにpushしてる例が多い&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/50826766/google-cloud-kubernetes-accessing-private-docker-hub-hosted-images">Google Cloud Kubernetes accessing private Docker Hub hosted images - Stack Overflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/containers/images/">Images - Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gist.github.com/toddlers/bb09002ffdc27fba6b7cef920fda2041">docker hub with kubernetes in GKE&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://estl.tech/using-images-from-a-private-registry-on-gke-b3bfb2562b16">Using Images from a Private Registry on GKE - Engineering Tomorrow’s Systems&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hawksnowlog.blogspot.com/2017/02/dockerhub-image-deploy-on-gke.html">hawksnowlog: Google Container Engine に Dockerhub で公開しているイメージをデプロイする方法&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="topics">Topics&lt;/h2>
&lt;h3 id="logging">Logging&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://cloud.google.com/solutions/customizing-stackdriver-logs-fluentd?hl=ja">Google Kubernetes Engine の Stackdriver ログを Fluentd でカスタマイズする | ソリューション&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/@rshimma/rails-on-gke-with-stackdriver-logging-63163c72934">GKE上RailsのアプリケーションログをStackdriver Loggingで運用する方法 - Riki Shimma - Medium&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Google Groups</title><link>https://progrhy.me/tech-notes/a/google/group/</link><pubDate>Sat, 09 May 2020 09:42:46 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/google/group/</guid><description>
&lt;p>メーリングリスト、フォーラムを提供してくれる。&lt;br>
GCPなどでアカウント管理にも使える。&lt;/p>
&lt;h2 id="features">Features&lt;/h2>
&lt;h3 id="g-suite特有の機能">G Suite特有の機能&lt;/h3>
&lt;h4 id="グループアドレスの追加エイリアス">グループアドレスの追加(エイリアス)&lt;/h4>
&lt;p>&lt;a href="https://support.google.com/a/answer/2727156?hl=ja" title="グループのアドレスを追加する - G Suite 管理者 ヘルプ">グループのアドレスを追加する - G Suite 管理者 ヘルプ&lt;/a>&lt;/p></description></item><item><title>A: GitBook</title><link>https://progrhy.me/tech-notes/a/software/static-site-generator/gitbook/</link><pubDate>Sat, 25 Apr 2020 23:52:08 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/static-site-generator/gitbook/</guid><description>
&lt;p>Markdownで管理されたドキュメントからHTML, PDF, ePUBに簡単に製本できるツール。&lt;br>
ただし、2020-04-25現在、クラウドサービスに注力するそうで、OSSのツールチェインは不活発になっていくようだ。&lt;/p>
&lt;p>&lt;a href="https://github.com/GitbookIO/gitbook">https://github.com/GitbookIO/gitbook&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>⚠️ Deprecation warning&lt;/strong>&lt;/p>
&lt;p>As the efforts of the GitBook team are focused on the &lt;a href="https://www.gitbook.com">GitBook.com&lt;/a> platform, the CLI is no longer under active development.&lt;br>
All content supported by the CLI are mostly supported by our &lt;a href="https://docs.gitbook.com/integrations/github">GitBook.com / GitHub integration&lt;/a>.&lt;br>
Content hosted on the &lt;a href="https://legacy.gitbook.com">legacy.gitbook.com&lt;/a> will continue working until further notice. For differences with the new vesion, check out our &lt;a href="https://docs.gitbook.com/v2-changes/important-differences">documentation&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.gitbook.com/">https://docs.gitbook.com/&lt;/a> &amp;hellip; クラウドサービス向け&lt;/li>
&lt;li>&lt;a href="https://gitbookio.gitbooks.io/documentation/">Introduction | GitBook.com Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/GitbookIO/gitbook/tree/master/docs">https://github.com/GitbookIO/gitbook/tree/master/docs&lt;/a> &amp;hellip; たぶんOSSツールチェインのドキュメントはもうここを読むしかない。&lt;/li>
&lt;/ul>
&lt;h2 id="plugins">Plugins&lt;/h2>
&lt;p>目次生成系:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.aliyun.com/mirror/npm/package/gitbook-plugin-page-toc">Package - gitbook-plugin-page-toc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zanfab/gitbook-plugin-intopic-toc">zanfab/gitbook-plugin-intopic-toc: GitBook Plugin to add inline table of contents (TOC) to each page using sticky and scrollspy effects.&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/billryan/gitbook-plugin-etoc">billryan/gitbook-plugin-etoc: Elegant toc plugin for GitBook&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/mebiusbox2/items/938af4b0d0bf7a4d3e33#gitbook-cli">GitBookによるドキュメント作成 - Qiita&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: GNU make</title><link>https://progrhy.me/tech-notes/a/software/make/</link><pubDate>Mon, 04 May 2020 19:50:02 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/make/</guid><description>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>公式リファレンスは↑&lt;/p>
&lt;p>サードパーティーのリファレンス的資料:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.ecoop.net/coop/translated/GNUMake3.77/make_toc.jp.html">GNU make 日本語訳(Coop編) - 目次&lt;/a> &amp;hellip; 1998年ぐらい。古い&lt;/li>
&lt;li>&lt;a href="http://qiita.com/chibi929/items/b8c5f36434d5d3fbfa4a">Makefileの関数 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="quickstart">Quickstart&lt;/h2>
&lt;p>使えるMakefileの例&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Makefile" data-lang="Makefile">&lt;span style="color:#000">.PHONY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">default&lt;/span> &lt;span style="color:#000">build&lt;/span> &lt;span style="color:#000">clean&lt;/span>
&lt;span style="color:#000">default&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">build&lt;/span>
&lt;span style="color:#000">clean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
rm -rf dist/
&lt;span style="color:#000">timestamp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
date +%s &amp;gt; timestamp
&lt;span style="color:#000">build&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">timestamp&lt;/span> &lt;span style="color:#000">another&lt;/span>-&lt;span style="color:#000">file&lt;/span>
some_build_command
&lt;/code>&lt;/pre>&lt;/div>&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>ターゲットの依存ターゲットは複数記すことができる。&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://objectclub.jp/community/memorial/homepage3.nifty.com/masarl/article/gnu-make/rule.html">- 自動化のためのGNU Make入門講座 - Makefileの基本：ルール&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="makefile-構文">Makefile 構文&lt;/h2>
&lt;h3 id="変数">変数&lt;/h3>
&lt;p>変数定義のやり方について。&lt;/p>
&lt;p>&amp;ldquo;=&amp;rdquo; と &amp;ldquo;:=&amp;rdquo; は違う。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Makefile" data-lang="Makefile">&lt;span style="color:#000">src&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> foo.c
&lt;span style="color:#000">ymd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>shell date +%Y%m%d&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://quruli.ivory.ne.jp/document/make_3.79.1/make-jp_5.html" title="GNU make: 6. 変数の使用法">GNU make: 6. 変数の使用法&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="curdir">$(CURDIR)&lt;/h4>
&lt;p>makeを実行しているプロセスのカレントディレクトリを返す。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.gnu.org/software/make/manual/html_node/Recursion.html">https://www.gnu.org/software/make/manual/html_node/Recursion.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://d.hatena.ne.jp/m-hiyama/20080805/1217915354" title="今日のMake Tips：CURDIR変数 - 檜山正幸のキマイラ飼育記">今日のMake Tips：CURDIR変数 - 檜山正幸のキマイラ飼育記&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="関数">関数&lt;/h3>
&lt;h4 id="foreach-name-list-command">$(foreach name, LIST, command)&lt;/h4>
&lt;p>ループ実行&lt;/p>
&lt;h3 id="phonyターゲット">.PHONYターゲット&lt;/h3>
&lt;p>&lt;a href="https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html">https://www.gnu.org/software/make/manual/html_node/Phony-Targets.html&lt;/a>&lt;/p>
&lt;p>ファイルを生成しないやつ&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Makefile" data-lang="Makefile">&lt;span style="color:#000">.PHONY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">clean&lt;/span>
&lt;span style="color:#000">clean&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
rm *.o tmp
&lt;/code>&lt;/pre>&lt;/div>&lt;p>複数の.PHONYターゲットをまとめて記述することもできる&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Makefile" data-lang="Makefile">&lt;span style="color:#000">.PHONY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">all&lt;/span> &lt;span style="color:#000">clean&lt;/span> &lt;span style="color:#000">deps&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="条件分岐">条件分岐&lt;/h3>
&lt;p>&lt;a href="https://www.gnu.org/software/make/manual/make.html#Conditionals">7 Conditional Parts of Makefiles&lt;/a>&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Makefile" data-lang="Makefile">&lt;span style="color:#000">libs_for_gcc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> -lgnu
&lt;span style="color:#000">normal_libs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#000">foo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>&lt;span style="color:#000">objects&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#a40000">ifeq&lt;/span> &lt;span style="color:#a40000">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>&lt;span style="color:#000">CC&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">,gcc)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>&lt;span style="color:#000">CC&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span> &lt;span style="color:#a40000">-o&lt;/span> &lt;span style="color:#a40000">foo&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>&lt;span style="color:#000">objects&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>&lt;span style="color:#000">libs_for_gcc&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#a40000">else&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>&lt;span style="color:#000">CC&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span> &lt;span style="color:#a40000">-o&lt;/span> &lt;span style="color:#a40000">foo&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>&lt;span style="color:#000">objects&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>&lt;span style="color:#000">normal_libs&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#a40000">endif&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="makeコマンド">makeコマンド&lt;/h2>
&lt;p>公式マニュアル:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.gnu.org/software/make/manual/make.html#Running">9 How to Run make&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://www.gnu.org/software/make/manual/make.html#Overriding">9.5 Overriding Variables&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/make/manual/make.html#Options-Summary">9.7 Summary of Options&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># デフォルトのタスク（＝最上部で定義されたタスク）を実行&lt;/span>
make
&lt;span style="color:#8f5902;font-style:italic"># タスク名を指定して実行。複数指定可&lt;/span>
make task1 &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>task2 ...&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Makefileを指定する&lt;/span>
make -f&lt;span style="color:#000;font-weight:bold">|&lt;/span>--file &amp;lt;Makefile&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># dry-run&lt;/span>
make -n&lt;span style="color:#000;font-weight:bold">|&lt;/span>--dry-run
&lt;span style="color:#8f5902;font-style:italic"># 変数の設定&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Makefile内で定義されていれば、オーバーライドする&lt;/span>
make &lt;span style="color:#000">CFLAGS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>-g
&lt;/code>&lt;/pre>&lt;/div>&lt;p>その他のオプション:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>オプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>-j|--jobs[=N]&lt;/code>&lt;/td>
&lt;td>同時実行数を指定。See &lt;a href="https://www.gnu.org/software/make/manual/make.html#Parallel">5.4 Parallel Execution&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-e|--environment-overrides&lt;/code>&lt;/td>
&lt;td>環境変数をオーバーライドする&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-d&lt;/code>&lt;/td>
&lt;td>デバッグ情報を表示。 &lt;code>--debug=a&lt;/code> と同じ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>--trace&lt;/code>&lt;/td>
&lt;td>実行時のトレース情報を表示する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-s|--silent|--quiet&lt;/code>&lt;/td>
&lt;td>実行されるタスクをプリントしない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-h|--help&lt;/code>&lt;/td>
&lt;td>ヘルプ表示&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-v|--version&lt;/code>&lt;/td>
&lt;td>バージョン表示&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="tips">Tips&lt;/h2>
&lt;h3 id="必要なディレクトリを作ってタスク実行">必要なディレクトリを作ってタスク実行&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Makefile" data-lang="Makefile">&lt;span style="color:#000">BUILD_DIR&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> path/to/build
&lt;span style="color:#000">$(BUILD_DIR)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span>
mkdir -p &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>BUILD_DIR&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">all&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>&lt;span style="color:#000">BUILD_DIR&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87">cd&lt;/span> &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>BUILD_DIR&lt;span style="color:#204a87;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> some_commands
&lt;span style="color:#000">.PHONY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">all&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="環境変数の取扱い">環境変数の取扱い&lt;/h3>
&lt;p>環境変数はMakeの変数として参照できる。例: &lt;code>$(CFLAGS)&lt;/code>&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/kojiohta/items/54b1a9f7d482c35dc4fa">GNU Make のふたつの変数の使い分け - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ecoop.net/coop/translated/GNUMake3.77/make_6.jp.html">GNU make 日本語訳(Coop編) - 変数の利用法&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="コマンドに引数を渡したい">コマンドに引数を渡したい&lt;/h3>
&lt;p>&lt;code>make CFAGS=-g&lt;/code> みたいに変数経由で渡すことになりそう。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/liubin/items/69d9faf804e82ddec376">Makefileにパラメータを渡す方法と条件文 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://itchyny.hatenablog.com/entry/20120213/1329135107">Makefileで遊ぼう 〜 階乗, フィボナッチ数, Brainfuck処理系まで - プログラムモグモグ&lt;/a>
&lt;ul>
&lt;li>入門レベルで割とよく使う感じの機能がまとまってる。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>A: Infrastructure as Code</title><link>https://progrhy.me/tech-notes/a/software/infra-as-code/</link><pubDate>Tue, 12 May 2020 07:01:35 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/infra-as-code/</guid><description>
&lt;p>ITインフラの構成をコードで管理できるようにしてくれるソフトウェアについて書く。&lt;/p>
&lt;h2 id="software">Software&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.pulumi.com/product/">Pulumi&lt;/a> &amp;hellip; 各種クラウドの構成管理を高級言語で行える&lt;/li>
&lt;li>&lt;a href="https://gocloud.dev/">Go CDK (Cloud Development Kit)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/terraform/">Terraform&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: jq</title><link>https://progrhy.me/tech-notes/a/cli/jq/</link><pubDate>Thu, 07 May 2020 11:44:41 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/cli/jq/</guid><description>
&lt;p>JSONにクエリしてフィルタできるCLIツール。&lt;/p>
&lt;h2 id="documents">Documents&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://stedolan.github.io/jq/tutorial/">https://stedolan.github.io/jq/tutorial/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stedolan.github.io/jq/manual/">https://stedolan.github.io/jq/manual/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="チートシート">チートシート&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># オブジェクトの特定キーの要素を抽出&lt;/span>
cat foo.json &lt;span style="color:#000;font-weight:bold">|&lt;/span> jq &lt;span style="color:#4e9a06">&amp;#39;.some_key&amp;#39;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 配列の特定要素を抽出&lt;/span>
cat foo.json &lt;span style="color:#000;font-weight:bold">|&lt;/span> jq &lt;span style="color:#4e9a06">&amp;#39;.[0]&amp;#39;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 配列の個々のオブジェクトの特定キーを抽出&lt;/span>
cat foo.json &lt;span style="color:#000;font-weight:bold">|&lt;/span> jq &lt;span style="color:#4e9a06">&amp;#39;.[] | .some_key&amp;#39;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 配列の個々のオブジェクトからいくつかの要素を選んでそれぞれ配列に格納&lt;/span>
cat foo.json &lt;span style="color:#000;font-weight:bold">|&lt;/span> jq &lt;span style="color:#4e9a06">&amp;#39;.[] | [.keyA, .keyB, .keyC.keyAinC]&amp;#39;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># CSV形式で出力&lt;/span>
cat foo.json &lt;span style="color:#000;font-weight:bold">|&lt;/span> jq &lt;span style="color:#4e9a06">&amp;#39;.[] | [.keyA, .keyB, .keyC] | @csv&amp;#39;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 配列の個々のオブジェクトからいくつかの要素を選んで新たなオブジェクトを作り、それぞれ出力&lt;/span>
cat foo.json &lt;span style="color:#000;font-weight:bold">|&lt;/span> jq &lt;span style="color:#4e9a06">&amp;#39;.[] | {a: .keyA, b: .keyB, ca: .keyC.keyAinC}&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.qoosky.io/techs/1ee07c140f">jq チートシート - Qoosky&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/veltra-engineering/jq-supports-json-to-csv-fb5c951a9575">jq コマンドで JSON を CSV に変換する - VELTRA Engineering - Medium&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Backends</title><link>https://progrhy.me/tech-notes/a/software/terraform/backend/</link><pubDate>Sun, 26 Apr 2020 23:05:57 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/terraform/backend/</guid><description>
&lt;blockquote>
&lt;p>A &amp;ldquo;backend&amp;rdquo; in Terraform determines how state is loaded and how an operation such as &lt;code>apply&lt;/code> is executed. This abstraction enables non-local file state storage, remote execution, etc.&lt;/p>
&lt;/blockquote>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.terraform.io/docs/backends/config.html">Configuration&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.terraform.io/docs/backends/init.html">Init&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.terraform.io/docs/backends/state.html">State Storage &amp;amp; Locking&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="gcs">gcs&lt;/h2>
&lt;p>&lt;a href="https://www.terraform.io/docs/backends/types/gcs.html">https://www.terraform.io/docs/backends/types/gcs.html&lt;/a>&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-HCL" data-lang="HCL">&lt;span style="color:#204a87;font-weight:bold">terraform&lt;/span> {
&lt;span style="color:#204a87;font-weight:bold">backend&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;gcs&amp;#34;&lt;/span> {
&lt;span style="color:#000"> bucket&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;tf-state-prod&amp;#34;&lt;/span>
&lt;span style="color:#000"> prefix&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;terraform/state&amp;#34;&lt;/span>
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>認証用の &lt;code>credentials&lt;/code> または &lt;code>access_token&lt;/code> が必要。&lt;/li>
&lt;/ul>
&lt;h3 id="config-variables">config variables&lt;/h3>
&lt;ul>
&lt;li>&lt;code>credentials&lt;/code> &amp;hellip; GCPのサービスアカウントキー（JSON）のパスを指定する
&lt;ul>
&lt;li>環境変数 &lt;code>GOOGLE_BACKEND_CREDENTIALS&lt;/code> or &lt;code>GOOGLE_CREDENTIALS&lt;/code> によってパスを指定することもできる&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/sdk/gcloud/reference/auth/application-default/login">https://cloud.google.com/sdk/gcloud/reference/auth/application-default/login&lt;/a> で作成できるユーザの&lt;a href="https://cloud.google.com/docs/authentication/production">Application Default Credentials&lt;/a>でも良い&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">gcloud auth application-default login
&lt;/code>&lt;/pre>&lt;/div>&lt;p>See also:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/software/terraform/provider/google/#configuration">Providers &amp;gt; Google&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="s3">s3&lt;/h2>
&lt;p>&lt;a href="https://www.terraform.io/docs/backends/types/s3.html">https://www.terraform.io/docs/backends/types/s3.html&lt;/a>&lt;/p>
&lt;ul>
&lt;li>ロックしたいときはDynamoDBを使う。
&lt;ul>
&lt;li>オプション &lt;code>dynamodb_table&lt;/code> を指定する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>A: Linux</title><link>https://progrhy.me/tech-notes/a/os/linux/</link><pubDate>Thu, 21 May 2020 21:32:53 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/os/linux/</guid><description>
&lt;h2 id="about">About&lt;/h2>
&lt;p>&lt;a href="http://e-words.jp/w/Linux.html">Linux（リナックス）とは - IT用語辞典 e-Words&lt;/a>によれば、「世界で最も普及している、オープンソースのOS」。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.kernel.org/">The Linux Kernel Archives&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linuxfoundation.org/">The Linux Foundation – Supporting Open Source Ecosystems&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linux.org/">Linux.org&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="kernel">Kernel&lt;/h2>
&lt;h3 id="signal">Signal&lt;/h3>
&lt;p>&lt;a href="http://linuxjm.osdn.jp/html/LDP_man-pages/man7/signal.7.html">Man page of SIGNAL&lt;/a>&lt;/p>
&lt;p>プロセス間通信の仕組みの1つ。&lt;/p>
&lt;p>シグナルの一部:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>番号&lt;/th>
&lt;th>シグナル名&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>HUP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>INT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>QUIT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9&lt;/td>
&lt;td>KILL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>10&lt;/td>
&lt;td>USR1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>11&lt;/td>
&lt;td>SEGV&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>13&lt;/td>
&lt;td>PIPE&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>14&lt;/td>
&lt;td>ALRM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>15&lt;/td>
&lt;td>TERM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>17&lt;/td>
&lt;td>CHLD&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>18&lt;/td>
&lt;td>CONT&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>シグナルの一覧は &lt;code>kill -l&lt;/code> などのコマンドで確認できる。&lt;/p>
&lt;p>See Also:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/cli/unix-cmd/#kill1">UNIX系コマンド#kill(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%B7%E3%82%B0%E3%83%8A%E3%83%AB_(Unix)">シグナル (Unix) - Wikipedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://capm-network.com/?tag=UNIX%E3%82%B7%E3%82%B0%E3%83%8A%E3%83%AB%E4%B8%80%E8%A6%A7">UNIXシグナル一覧 CapmNetwork&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="process">Process&lt;/h3>
&lt;h4 id="exit-code">Exit Code&lt;/h4>
&lt;p>予約済みExit Codes:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Code&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;th>備考&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>エラー全般&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>シェルビルトイン関数の誤用&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>126&lt;/td>
&lt;td>コマンド実行不可&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>127&lt;/td>
&lt;td>command not found&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>128&lt;/td>
&lt;td>exitに不正な引数&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>128+n&lt;/td>
&lt;td>シグナル n で致命的エラー&lt;/td>
&lt;td>KILL =&amp;gt; 137, TERM =&amp;gt; 143&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>130&lt;/td>
&lt;td>Ctrl-C&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>255*&lt;/td>
&lt;td>範囲外のステータス&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://tldp.org/LDP/abs/html/exitcodes.html" title="Exit Codes With Special Meanings">Exit Codes With Special Meanings&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/Linda_pp/items/1104d2d9a263b60e104b" title="コマンドラインツールを書くなら知っておきたい Bash の 予約済み Exit Code - Qiita">コマンドラインツールを書くなら知っておきたい Bash の 予約済み Exit Code - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="仕様">仕様&lt;/h2>
&lt;h3 id="ブートシーケンス">ブートシーケンス&lt;/h3>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/taichitk/items/b3b69705be0e270e9f6e">Linuxのブートシーケンス - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="セキュリティ">セキュリティ&lt;/h2>
&lt;h3 id="selinux">SELinux&lt;/h3>
&lt;p>RHEL系の機能かな（？）&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/hanaita0102/items/5d3675e4dc1530b255ba" title="SELinuxの無効化 - Qiita">SELinuxの無効化 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://access.redhat.com/documentation/ja-jp/red_hat_enterprise_linux/6/html/security-enhanced_linux/sect-security-enhanced_linux-working_with_selinux-enabling_and_disabling_selinux" title="5.4. SELinux の有効化および無効化 - Red Hat Customer Portal">5.4. SELinux の有効化および無効化 - Red Hat Customer Portal&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: mdBook</title><link>https://progrhy.me/tech-notes/a/software/static-site-generator/mdbook/</link><pubDate>Wed, 06 May 2020 13:52:21 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/static-site-generator/mdbook/</guid><description>
&lt;p>Rust製のGitBookみたいなもの。&lt;br>
高速でよさそう。&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>上のサイトがドキュメントを兼ねている。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rust-lang.github.io/mdBook/cli/">CLI&lt;/a>
&lt;ul>
&lt;li>インストール方法はこちら&lt;/li>
&lt;li>サブコマンド:
&lt;ul>
&lt;li>&lt;a href="https://rust-lang.github.io/mdBook/cli/init.html">init&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rust-lang.github.io/mdBook/cli/build.html">build&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rust-lang.github.io/mdBook/cli/serve.html">serve&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="cli--quickstart">CLI &amp;amp; Quickstart&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 新しくブックのディレクトリを作り、初期セットアップを行う&lt;/span>
mdbook init &amp;lt;your-book-directory&amp;gt;
&lt;span style="color:#8f5902;font-style:italic"># デフォルトでHTMLを ./book にビルド&lt;/span>
mdbook build &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># デフォルトで ./book 以下のHTMLを元にHTTPサーバを起動&lt;/span>
mdbook serve &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>2020-05-06現在、 &lt;code>serve&lt;/code> コマンドはHTML表示のテスト用で、Webサイト用の完全なサーバ機能を目指したものではないとのこと&lt;/li>
&lt;/ul>
&lt;h2 id="memo">MEMO&lt;/h2>
&lt;h3 id="2020-04-29">2020-04-29&lt;/h3>
&lt;ul>
&lt;li>config: &lt;a href="https://rust-lang.github.io/mdBook/format/config.html">https://rust-lang.github.io/mdBook/format/config.html&lt;/a>&lt;/li>
&lt;li>サイドバーに目次ツリーが表示されているが、 &lt;code>[output.html.fold]&lt;/code> で挙動を変えられそう。
&lt;ul>
&lt;li>&lt;a href="https://github.com/rust-lang/mdBook/pull/1027">https://github.com/rust-lang/mdBook/pull/1027&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>目次（Table of Contents）は公式サポートないのかも。イシューになってる
&lt;ul>
&lt;li>&lt;code>{{#toc}}{{/toc}}&lt;/code> で行けるんじゃないのかな？
&lt;ul>
&lt;li>&lt;a href="https://rust-lang.github.io/mdBook/format/theme/index-hbs.html#1-toc">https://rust-lang.github.io/mdBook/format/theme/index-hbs.html#1-toc&lt;/a>&lt;/li>
&lt;li>（2020-05-06追記）愚直に書き足したところ、駄目だった&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/rust-lang/mdBook/issues/153">https://github.com/rust-lang/mdBook/issues/153&lt;/a>&lt;/li>
&lt;li>自作している人がいる
&lt;ul>
&lt;li>&lt;a href="https://github.com/badboy/mdbook-toc">https://github.com/badboy/mdbook-toc&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>A: man page</title><link>https://progrhy.me/tech-notes/a/document/man/</link><pubDate>Sun, 17 May 2020 20:39:04 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/document/man/</guid><description>
&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>man pageはUnix系システムで広く使われるマニュアルページのフォーマットである。&lt;br>
POSIXとLinuxではやや仕様が異なるようだ。&lt;/p>
&lt;p>筆者はLinuxに馴染みが深いので、以下は基本的にLinuxについて記す。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.unix.com/man-page/posix/1P/man/">POSIX 1003.1 - man page for man (posix section 1P) - Unix &amp;amp; Linux Commands&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="cli-usage">CLI Usage&lt;/h2>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">man ls
&lt;span style="color:#8f5902;font-style:italic">## セクション番号を指定する&lt;/span>
man &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#204a87">printf&lt;/span>
man &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> &lt;span style="color:#204a87">printf&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ドキュメント">ドキュメント&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://man7.org/linux/man-pages/man1/man.1.html">http://man7.org/linux/man-pages/man1/man.1.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://man7.org/linux/man-pages/man7/man-pages.7.html">http://man7.org/linux/man-pages/man7/man-pages.7.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="仕様">仕様&lt;/h2>
&lt;h3 id="セクション番号とその意味">セクション番号とその意味&lt;/h3>
&lt;ol>
&lt;li>実行可能プログラム、またはシェルコマンド&lt;/li>
&lt;li>システムコール&lt;/li>
&lt;li>ライブラリ関数&lt;/li>
&lt;li>スペシャルファイル(/dev/ にある)&lt;/li>
&lt;li>ファイルの書式や規約&lt;/li>
&lt;li>ゲーム&lt;/li>
&lt;li>雑多なこと(マクロや規約を含む)&lt;/li>
&lt;li>システム管理コマンド(通常はroot用)&lt;/li>
&lt;li>カーネルルーチン ※非標準&lt;/li>
&lt;/ol></description></item><item><title>A: Markdown</title><link>https://progrhy.me/tech-notes/a/document/markdown/</link><pubDate>Sun, 24 May 2020 17:24:36 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/document/markdown/</guid><description>
&lt;h2 id="commonmark">CommonMark&lt;/h2>
&lt;p>&lt;a href="https://commonmark.org/">https://commonmark.org/&lt;/a>&lt;/p>
&lt;p>Markdownの原典というべき仕様だが、表現力が乏しかったので亜種がたくさん生まれた。&lt;/p>
&lt;h2 id="markdownの亜種">Markdownの亜種&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.github.com/gfm/">GitHub Flavored Markdown&lt;/a>
&lt;ul>
&lt;li>おそらく最も普及している亜種。GitHubでサポートされている。他の亜種もこの仕様を参考にしているものが多そう。デファクトといってもいいかも&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="バックティックのエスケープ">バックティック「`」のエスケープ&lt;/h3>
&lt;p>字の文で「`」を表示するには、 &lt;code>\`&lt;/code> のようにエスケープすればいい。&lt;/p>
&lt;p>「`」で囲んだコード内で「`」を入力するにはどうすればよいか？&lt;br>
このケースでは、エスケープはしなくていい。&lt;/p>
&lt;p>下のように「``」で囲み、ホワイトスペースを挟んで記述すると、 &lt;code>`&lt;/code> と表示される。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Markdown" data-lang="Markdown">`` &lt;span style="color:#4e9a06">` `&lt;/span>`
&lt;/code>&lt;/pre>&lt;/div>&lt;p>MEMO:&lt;/p>
&lt;ul>
&lt;li>2020-05-24 やり方がわからなくてググっていたら下の参考記事を見つけた。&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://yu8mada.com/2018/06/15/how-to-escape-a-backtick-or-a-backslash-inside-inline-code-in-markdown/">Markdown のインラインコードでバックティックやバックスラッシュをエスケープする方法 - yu8mada&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Namespace</title><link>https://progrhy.me/tech-notes/a/software/k8s/namespace/</link><pubDate>Mon, 04 May 2020 21:45:30 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/namespace/</guid><description>
&lt;p>&lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/namespaces/">https://kubernetes.io/docs/tasks/administer-cluster/namespaces/&lt;/a>&lt;/p>
&lt;p>Kubernetesでは、複数の仮想的なクラスタを同じ物理クラスタ上に構築することができる。この仮想クラスタのことを &lt;strong>Namespace&lt;/strong> と呼ぶ。&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Namespace&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>myapp&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-15/">Kubernetes道場 15日目 - Namespace / Resource QoS / ResourceQuota / LimitRangeについて - Toku&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="リソース管理">リソース管理&lt;/h2>
&lt;p>See also &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/concept/#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%84pod%E3%81%B8%E3%81%AEcpu%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%AE%E5%89%B2%E5%BD%93%E3%81%A6">Concept#コンテナやpodへのcpuメモリの割当て&lt;/a>&lt;/p>
&lt;p>ResourceQuotasやLimitRangeを設定することで、リソース管理をよりいい感じに行えるっぽい。（が、逆に面倒ではないかという気もする。）&lt;/p>
&lt;h3 id="resourcequotas">ResourceQuotas&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/policy/resource-quotas/">https://kubernetes.io/docs/concepts/policy/resource-quotas/&lt;/a>&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>ResourceQuota&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>compute-resources&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hard&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">requests.cpu&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">requests.memory&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>1Gi&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">limits.cpu&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">limits.memory&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>2Gi&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>適用例:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">kubectl create -f ./compute-resources.yaml --namespace&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>myspace
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note:&lt;/p>
&lt;ul>
&lt;li>ResourceQuotaを設定したnamespaceに属する全Podの合計値が上限になる&lt;/li>
&lt;li>cpu, memory以外も色々ある&lt;/li>
&lt;/ul>
&lt;h3 id="limitrange">LimitRange&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/policy/limit-range/">https://kubernetes.io/docs/concepts/policy/limit-range/&lt;/a>&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>LimitRange&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>limit-mem-cpu-per-container&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">limits&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">max&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">cpu&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;800m&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">memory&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;1Gi&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">min&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">cpu&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;100m&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">memory&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;99Mi&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">cpu&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;700m&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">memory&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;900Mi&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">defaultRequest&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">cpu&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;110m&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">memory&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;111Mi&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Container&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>namespaceに対して設定する&lt;/li>
&lt;li>cpu/memoryのrequests/limitsの下限、上限、デフォルト値を設定できる&lt;/li>
&lt;/ul></description></item><item><title>A: Vim Plugins</title><link>https://progrhy.me/tech-notes/a/program/vim/plugin/</link><pubDate>Tue, 05 May 2020 11:23:51 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/vim/plugin/</guid><description>
&lt;h2 id="plugins">Plugins&lt;/h2>
&lt;p>次節以降で紹介していないもの:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ervandew/supertab">ervandew/supertab&lt;/a> &amp;hellip; タブ補完を可能にしてくれる
&lt;ul>
&lt;li>補完リストのスクロールを上から下にしたい場合、vimrcに&lt;br>
&lt;code>let g:SuperTabDefaultCompletionType = &amp;quot;&amp;lt;c-n&amp;gt;&amp;quot;&lt;/code>&lt;br>
を設定する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/cespare/vim-toml">cespare/vim-toml&lt;/a> &amp;hellip; TOMLのシンタックスハイライト&lt;/li>
&lt;li>&lt;a href="https://github.com/kana/vim-operator-user">kana/vim-operator-user&lt;/a> &amp;hellip; 後掲のvim-operator-replaceなどが依存している
&lt;ul>
&lt;li>ドキュメント: &lt;a href="http://kana.github.io/config/vim/operator-user.html">Vim: operator-user - Define your own operator easily&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://sy-base.com/myrobotics/vim/vim-my-plugins/">vim – 強力なおすすめプラグイン – MY ROBOTICS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://liginc.co.jp/469142">僕がVimで愛用しているプラグイン30連発 | 東京のWeb制作会社LIG&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ctrlpvim">ctrlp.vim&lt;/h2>
&lt;p>&lt;a href="https://github.com/ctrlpvim/ctrlp.vim">https://github.com/ctrlpvim/ctrlp.vim&lt;/a>&lt;/p>
&lt;p>ディレクトリ下のファイルからファイル名をインクリメンタル検索して開いたり、バッファ一覧から検索したり、開いてるバッファの該当行を探してジャンプしたりできる。&lt;/p>
&lt;p>vimrc設定例:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#8f5902;font-style:italic">&amp;#34; &amp;lt;C-p&amp;gt;で実行するフィーチャーをCtrlPMixedに変更&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; カレントディレクトリ下のファイル検索 + バッファ一覧 + 最後に開いたファイルリスト&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span> &lt;span style="color:#000">g&lt;/span>:&lt;span style="color:#000">ctrlp_cmd&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;CtrlPMixed&amp;#39;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; &amp;lt;C-p&amp;gt;で実行するコマンドを変更&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; git下じゃないときはvimのglobとかにフォールバックしてくれる&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">let&lt;/span> &lt;span style="color:#000">g&lt;/span>:&lt;span style="color:#000">ctrlp_user_command&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span> \ [&lt;span style="color:#4e9a06">&amp;#39;.git&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;cd %s &amp;amp;&amp;amp; git ls-files -co --exclude-standard&amp;#39;&lt;/span>]&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">nnoremap&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Leader&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>/ &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">ESC&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>:&lt;span style="color:#000">CtrlPLine&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Return&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/oahiroaki/items/d71337fb9d28303a54a8">ctrlp.vimの使い方まとめ - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sy-base.com/myrobotics/vim/vim_ctrlp/">vimのファイル検索プラグインctrlp.vimの設定 – MY ROBOTICS&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="nerdtree">NERDTree&lt;/h2>
&lt;p>&lt;a href="https://github.com/scrooloose/nerdtree">https://github.com/scrooloose/nerdtree&lt;/a>&lt;/p>
&lt;p>有名なVimのファイラプラグイン。&lt;/p>
&lt;h3 id="usage">Usage&lt;/h3>
&lt;p>ツリービューの操作:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>キー&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>?&lt;/code>&lt;/td>
&lt;td>help表示（トグル）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>I&lt;/code>&lt;/td>
&lt;td>隠しファイルの表示（トグル）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="ファイルディレクトリを作成">ファイル・ディレクトリを作成&lt;/h4>
&lt;p>ファイルツリーの任意の位置で &lt;code>m&lt;/code> を押すとメニューが表示されるので、 &lt;code>(a)dd a childnode&lt;/code> を選ぶ。&lt;br>
ディレクトリを作る場合は末尾に &lt;code>/&lt;/code> を入力すること。&lt;br>
でないと、空のファイルが作られる。&lt;/p>
&lt;p>&lt;code>Ctrl-C&lt;/code> でメニューを抜けることができた。(Macで)&lt;/p>
&lt;h2 id="vim-operator-replace">vim-operator-replace&lt;/h2>
&lt;p>&lt;a href="https://github.com/kana/vim-operator-replace">https://github.com/kana/vim-operator-replace&lt;/a>&lt;/p>
&lt;p>ドキュメント:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://kana.github.io/config/vim/operator-replace.html">Vim: operator-replace - Operator to replace text with register content&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>ヤンクしているテキストでカーソル下のテキストを置き換える。&lt;/p>
&lt;p>vimrc設定例:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#000">nmap&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Space&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Plug&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;(&lt;/span>&lt;span style="color:#000">operator&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">replace&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>※ドキュメントでは &lt;code>map&lt;/code> になっているが、 &lt;code>nmap&lt;/code> でも動いた。&lt;/p>
&lt;p>下のようなテキストを編集する:&lt;/p>
&lt;pre>&lt;code>foo
bar
baz
&lt;/code>&lt;/pre>&lt;p>3行とも &lt;code>foo&lt;/code> にしたいときは次のように操作すればいい:&lt;/p>
&lt;ol>
&lt;li>カーソルを先頭行 &lt;code>f&lt;/code> 位置に置き、「ye」とタイプして &lt;code>foo&lt;/code> をヤンク&lt;/li>
&lt;li>「j」を押して2行目の行頭にカーソルを移動し、「&lt;Space>e」とタイプする&lt;/li>
&lt;li>「j^」とタイプして3行目の行頭に移動し、「.」をタイプする&lt;/li>
&lt;/ol>
&lt;p>（参考記事の通りにやるのは難しかった。。）&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://kazuph.hateblo.jp/entry/2013/01/04/005030">vim-operator-replaceでコピペを簡単に - 僕のYak Shavingは終わらない&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="yankroundvim">yankround.vim&lt;/h2>
&lt;p>&lt;a href="https://github.com/LeafCage/yankround.vim">https://github.com/LeafCage/yankround.vim&lt;/a>&lt;/p>
&lt;p>レジスタ履歴を取得・再利用する。&lt;/p>
&lt;p>vimrc設定例:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#000">nmap&lt;/span> &lt;span style="color:#000">p&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Plug&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;(&lt;/span>&lt;span style="color:#000">yankround&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">p&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">xmap&lt;/span> &lt;span style="color:#000">p&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Plug&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;(&lt;/span>&lt;span style="color:#000">yankround&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">p&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">nmap&lt;/span> &lt;span style="color:#000">P&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Plug&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;(&lt;/span>&lt;span style="color:#000">yankround&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">P&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">nmap&lt;/span> &lt;span style="color:#000">gp&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Plug&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;(&lt;/span>&lt;span style="color:#000">yankround&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">gp&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">xmap&lt;/span> &lt;span style="color:#000">gp&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Plug&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;(&lt;/span>&lt;span style="color:#000">yankround&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">gp&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">nmap&lt;/span> &lt;span style="color:#000">gP&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Plug&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;(&lt;/span>&lt;span style="color:#000">yankround&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">gP&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">nmap&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">C&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">p&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Plug&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;(&lt;/span>&lt;span style="color:#000">yankround&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">prev&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">nmap&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">C&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">n&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Plug&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;(&lt;/span>&lt;span style="color:#000">yankround&lt;/span>&lt;span style="color:#000;font-weight:bold">-&lt;/span>&lt;span style="color:#000">next&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000">nnoremap&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Leader&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#000">y&lt;/span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">ESC&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>:&lt;span style="color:#000">Unite&lt;/span> &lt;span style="color:#000">yankround&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">Return&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>p&lt;/code> や &lt;code>P&lt;/code> でヤンクを貼り付けた後、 &lt;code>&amp;lt;C-p&amp;gt;&lt;/code> や &lt;code>&amp;lt;C-n&amp;gt;&lt;/code> で順に操作して選べる。&lt;/p>
&lt;p>&lt;code>:Unite yankround&lt;/code> でUniteの小画面を開いてレジスタを一覧できる。
この小画面内で &lt;code>d&lt;/code> でレジスタを消したり、 &lt;code>x&lt;/code> で素早く対象を選んだりできる。（Unite全然使い倒してない）&lt;/p>
&lt;p>ctrlp.vimと組み合わせると &lt;code>:CtrlPYankRound&lt;/code> というコマンドが使えるようになって、これもレジスタを一覧できるのだけど、レジスタの内容でインクリメンタル検索できないので、 &lt;code>:Unite yankround&lt;/code> の方が使いやすい。&lt;br>
（GitHubにイシューが挙がっている。）&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://engineerspirit.com/2017/07/01/post-1427/">vimの便利なPlugin（その26）yankround | 技術者魂&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Pod</title><link>https://progrhy.me/tech-notes/a/software/k8s/pod/</link><pubDate>Mon, 04 May 2020 21:45:01 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/pod/</guid><description>
&lt;p>1つ以上のコンテナを内包する、ワークロードの基本単位。&lt;/p>
&lt;p>See also &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/container/">Container&lt;/a>&lt;/p>
&lt;h2 id="スケジューリング">スケジューリング&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/ja/docs/concepts/configuration/assign-pod-node/">Node上へのPodのスケジューリング - Kubernetes&lt;/a>&lt;/p>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>Podが起動できない理由:
&lt;ul>
&lt;li>OutOfMemory, OutOfCpu &amp;hellip; Nodeのリソースが足りない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="affinity">Affinity&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/ja/docs/concepts/configuration/assign-pod-node/#affinity-%e3%81%a8-anti-affinity">Node上へのPodのスケジューリング - Kubernetes#AffinityとAnti-Affinity&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cstoku.dev/posts/2018/k8sdojo-18/#affinity-anti-affinity">Kubernetes道場 18日目 - Affinity / Anti-Affinity / Taint / Tolerationについて - Toku&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.1915keke.com/entry/2018/09/26/163447">KubernetesのNode AffinityとInternal Pod Affinityを使ってPodを高度スケジューリングする - Kekeの日記&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/sheepland/items/ed12b3dc4a8f1df7c4ec">KubernetesのNode Affinity, Inter-Pod Affinityについて - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="taintsとtolerations">TaintsとTolerations&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/">Taints and Tolerations - Kubernetes&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://qiita.com/sheepland/items/8fedae15e157c102757f">KubernetesのTaintsとTolerationsについて - Qiita&lt;/a>より:&lt;/p>
&lt;blockquote>
&lt;p>Node SelectorやNode Affinityが特定のノードに特定のPodをスケジュールするための仕組みに対し、TaintsとTolerationsは特定のノードにPodをスケジュールしないための仕組み&lt;/p>
&lt;/blockquote>
&lt;h2 id="ライフサイクル">ライフサイクル&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/ja/docs/concepts/workloads/pods/pod-lifecycle/">Podのライフサイクル - Kubernetes&lt;/a>&lt;/p>
&lt;p>See also &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/container/#lifecycle-hooks">Container#lifecycle-hooks&lt;/a>&lt;/p>
&lt;h3 id="podの終了">Podの終了&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods">https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods&lt;/a>&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/superbrothers/items/3ac78daba3560ea406b2">Kubernetes: 詳解 Pods の終了 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tech-lab.sios.jp/archives/18730">KubernetesでRollingUpdateするためのPodの安全な終了 | SIOS Tech. Lab&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="topics">Topics&lt;/h2>
&lt;h3 id="crashloopbackoff">CrashLoopBackOff&lt;/h3>
&lt;p>発生条件:&lt;/p>
&lt;ul>
&lt;li>memory limits以上を使おうとしてOOMで殺され、繰り返し再起動されるとき
&lt;ul>
&lt;li>再起動間隔はexponential backoffで延びる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/sheepland/items/eb0e4c65aaae70ec4e2f">KubernetesのResource RequestsとResource Limitsについて - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="pod-eviction">Pod Eviction&lt;/h3>
&lt;p>See &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/concept/#pod-eviction">Concept#pod-eviction&lt;/a>&lt;/p></description></item><item><title>A: Perl</title><link>https://progrhy.me/tech-notes/a/program/lang/perl/</link><pubDate>Fri, 08 May 2020 22:34:00 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/perl/</guid><description>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://perldoc.perl.org/">https://perldoc.perl.org/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>邦訳: &lt;a href="https://perldoc.jp/">https://perldoc.jp/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="podの書き方">PODの書き方&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://perldoc.perl.org/5.30.0/perlpod.html">https://perldoc.perl.org/5.30.0/perlpod.html&lt;/a>&lt;/li>
&lt;li>邦訳: &lt;a href="https://perldoc.jp/docs/perl/5.26.1/perlpod.pod">https://perldoc.jp/docs/perl/5.26.1/perlpod.pod&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="history">History&lt;/h2>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/Perl">Perl - Wikipedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://history.perl.org/PerlTimeline.html">http://history.perl.org/PerlTimeline.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="cpan">CPAN&lt;/h2>
&lt;h3 id="cpanモジュールのメンテに関する備忘録">CPANモジュールのメンテに関する備忘録&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://d.hatena.ne.jp/gfx/20140823/1408750107">comaint(1)でCPAN moduleのcomaintainerを追加する - Islands in the byte stream&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://keyamb.hatenablog.com/entry/2014/03/15/204118">Minilla を使って CPAN にモジュールを上げてみた - weblog of key_amb&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sites.google.com/site/progrhymetechwiki/home/memo/2017/20170509#TOC-CPAN-">久しぶりにCPANリリース / 20170509 - progrhyme&amp;rsquo;s Tech Wiki&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Pipelines</title><link>https://progrhy.me/tech-notes/a/software/spinnaker/pipeline/</link><pubDate>Tue, 05 May 2020 00:28:05 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/spinnaker/pipeline/</guid><description>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>Guides:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.spinnaker.io/guides/user/pipeline/managing-pipelines/">Managing Pipelines&lt;/a> &amp;hellip; 作成、実行、無効化、削除、編集、設定の復元、etc.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.spinnaker.io/reference/pipeline/">Reference&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.spinnaker.io/reference/pipeline/stages/">Stages&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h3 id="automated-triggers">Automated Triggers&lt;/h3>
&lt;p>パイプラインを外部から実行するためのトリガー設定。&lt;/p>
&lt;h4 id="docker-registry">Docker Registry&lt;/h4>
&lt;p>&lt;a href="https://www.spinnaker.io/setup/install/providers/docker-registry/">https://www.spinnaker.io/setup/install/providers/docker-registry/&lt;/a> で設定しているリポジトリに新しいイメージがpushされたときに発火する。&lt;br>
※タグが更新されないと発火しない&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.armory.io/spinnaker-user-guides/docker/">Working with Docker Images - Armory Spinnaker Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tech.virtualtech.jp/entry/2018/06/25/180834">Spinnakerのパイプラインによる自動デプロイ - 仮想化通信&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="webhooks">Webhooks&lt;/h4>
&lt;p>&lt;a href="https://www.spinnaker.io/guides/user/pipeline/triggers/webhooks/">https://www.spinnaker.io/guides/user/pipeline/triggers/webhooks/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;lt;spinnaker-url&amp;gt;/webhooks/webhook/$key&lt;/code> な任意のURLを発行して、対象のパイプラインのトリガーにできる&lt;/li>
&lt;li>Spinnaker for GCPな環境でも外から叩けるURLが発行できそうだった&lt;/li>
&lt;/ul>
&lt;h3 id="manual-judgement">Manual Judgement&lt;/h3>
&lt;p>Documents:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.spinnaker.io/guides/tutorials/codelabs/safe-deployments/">Safe Deployments - Spinnaker&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Manual Judgement&lt;/code> stageを追加することで、人間による手動判断のプロセスを追加できる。&lt;/p>
&lt;p>MEMO:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Manual Judgement&lt;/code> stageでは通知を飛ばすことができる。これによってパイプラインの実行権限のある人に判断を促す&lt;/li>
&lt;li>&lt;code>Manual Judgement&lt;/code> の結果によって処理を分岐させたい場合、続くstageで &lt;code>Conditional on Expression&lt;/code> にチェックを入れ、条件として &lt;code>${ #(&amp;quot;Manual Judgementのstage名&amp;quot;).equals(&amp;quot;選択肢&amp;quot;)}&lt;/code> を入れる&lt;/li>
&lt;/ul>
&lt;h4 id="propagate-authentication">Propagate Authentication&lt;/h4>
&lt;p>これにチェックを入れると、認証機能によって許可されたユーザにしか判断が下せないようになる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.armory.io/spinnaker/authorization/">Authentication and Authorization - Armory Spinnaker Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.spinnaker.io/workshops/lab-5.html">Lab 5: Deployment Safeguards | workshops&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Secret</title><link>https://progrhy.me/tech-notes/a/software/k8s/secret/</link><pubDate>Mon, 04 May 2020 22:39:15 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/software/k8s/secret/</guid><description>
&lt;p>See also &lt;a href="https://progrhy.me/tech-notes/a/software/k8s/configmap/">ConfigMap&lt;/a>&lt;/p>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>ConfigMapと同じような使い方ができるが、暗号化機構が備わっており、クレデンシャルなど機微情報を扱うのに向いている。&lt;/p>
&lt;p>Podから環境変数として読み込むという使い方をすることが多いようだ。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://ubiteku.oinker.me/2017/03/01/kubernetes-secrets/">Kubernetes Secrets の紹介 – データベースのパスワードやその他秘密情報をどこに保存するか？ – ゆびてく&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="documents">Documents&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/auth/secrets.md">design-proposals/secrets.md - kubernetes/community&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="secretsの作成">Secretsの作成&lt;/h2>
&lt;p>例1) テキストファイルから作成&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="color:#204a87">echo&lt;/span> -n &lt;span style="color:#4e9a06">&amp;#39;admin&amp;#39;&lt;/span> &amp;gt; ./username.txt
&lt;span style="color:#204a87">echo&lt;/span> -n &lt;span style="color:#4e9a06">&amp;#39;1f2d1e2e67df&amp;#39;&lt;/span> &amp;gt; ./password.txt
kubectl create secret generic db-user-pass --from-file&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>./username.txt --from-file&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>./password.txt
&lt;/code>&lt;/pre>&lt;/div>&lt;p>例2) 自分で定義ファイル(YAML)を作る&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="color:#204a87">echo&lt;/span> -n &lt;span style="color:#4e9a06">&amp;#39;admin&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> base64
&lt;span style="color:#000">YWRtaW4&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> -n &lt;span style="color:#4e9a06">&amp;#39;1f2d1e2e67df&amp;#39;&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> base64
MWYyZDFlMmU2N2Rm
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-YAML" data-lang="YAML">&lt;span style="color:#8f5902;font-style:italic">## secret.yaml&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>v1&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Secret&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>mysecret&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>Opaque&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">data&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">username&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>YWRtaW4=&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">password&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>MWYyZDFlMmU2N2Rm&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Bash" data-lang="Bash">kubectl apply -f ./secret.yaml
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>