<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>progrhyme's Tech Notes – シェル</title><link>https://progrhy.me/tech-notes/a/cli/shell/</link><description>Recent content in シェル on progrhyme's Tech Notes</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 10 May 2020 18:04:56 +0900</lastBuildDate><atom:link href="https://progrhy.me/tech-notes/a/cli/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>A: POSIXシェル</title><link>https://progrhy.me/tech-notes/a/cli/shell/posix/</link><pubDate>Mon, 01 Jun 2020 16:04:37 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/cli/shell/posix/</guid><description>
&lt;p>POSIXシェルの仕様などについて書く。&lt;/p>
&lt;h2 id="about">About&lt;/h2>
&lt;p>sh, bash, ksh, ash, dashなど。&lt;/p>
&lt;p>POSIX準拠だったり、互換だったりするシェル。&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://www.unix.com/man-page/posix/1p/sh/">POSIX 1003.1 - man page for sh (posix section 1p) - Unix &amp;amp; Linux Commands&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html">CONTENTS - Shell &amp;amp; Utilities: Detailed TOC | The Open Group&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18">Shell Command Language&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="http://www.unix.org/whitepapers/shdiffs.html">Shell Command Language (www.unix.org))&lt;/a>
&lt;ul>
&lt;li>System V や POSIX の古典的な仕様がまとまってるっぽい雰囲気&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="スクリプティング">スクリプティング&lt;/h2>
&lt;p>POSIX互換/準拠にこだわる人たち（原理主義者）がコツをまとめてくれてたりする。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/richmikan@github/items/bd4b21cf1fe503ab2e5c">どの環境でも使えるシェルスクリプトを書くためのメモ ver4.60 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/ko1nksm/items/8d28d4f7cb2c325c00fa">スクリプト言語としてみた各POSIXシェルの特徴と互換性上の注意点まとめ - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.amazon.co.jp/dp/4863541775">すべてのUNIXで20年動くプログラムはどう書くべきか デプロイ・保守に苦しむエンジニア達へ贈る［シェルスクリプトレシピ集］ | 松浦 智之, USP研究所 |本 | 通販 | Amazon&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="spec">Spec&lt;/h2>
&lt;p>※調査が甘くてPOSIXの仕様じゃないものが混ざっているかもしれない。&lt;/p>
&lt;h3 id="パラメータと変数">パラメータと変数&lt;/h3>
&lt;h4 id="parameter-expansion">Parameter Expansion&lt;/h4>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02">Shell Command Language#2.6.2 Parameter Expansion&lt;/a>&lt;/p>
&lt;p>&lt;code>${expression}&lt;/code> こういうやつ。最もシンプルなのは &lt;code>${parameter}&lt;/code> とそのままブレースで囲むだけ。&lt;/p>
&lt;p>種類:&lt;/p>
&lt;ul>
&lt;li>&lt;code>${#parameter}&lt;/code> &amp;hellip; 文字列の長さを表す&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://xtech.nikkei.com/it/article/COLUMN/20060228/231152/">【 文字列の長さを調べる 】 | 日経クロステック（xTECH）&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="演算子">演算子&lt;/h3>
&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>&lt;code>[ 条件式 ]&lt;/code> は &lt;code>test 条件式&lt;/code> と同じ。&lt;/li>
&lt;/ul>
&lt;p>See &lt;a href="#test">test&lt;/a>&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/egawa_kun/items/196cd354c0d8e4e0fefc">シェルスクリプト（bash）のif文やwhile文で使う演算子について - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tiswww.case.edu/php/chet/bash/bashref.html#Bash-Conditional-Expressions">Bash Reference Manual&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="単項条件演算子">単項条件演算子&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>演算子&lt;/th>
&lt;th>真の条件&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>-v VAR&lt;/td>
&lt;td>変数VARが定義されている。※ &lt;code>-v $VAR&lt;/code> ではない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-n $str&lt;/td>
&lt;td>$str に長さ1以上の文字列が入っている&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-z $str&lt;/td>
&lt;td>$str が空文字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-x $path&lt;/td>
&lt;td>$path が実行可能ファイル&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-L $path&lt;/td>
&lt;td>$path がシンボリックリンク&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-S $path&lt;/td>
&lt;td>$path がソケット&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://nekoyukimmm.hatenablog.com/entry/2018/01/21/101828">&amp;lt;Bash, zsh&amp;gt; シェル変数が定義されているかを判定する方法 - ねこゆきのメモ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="二項条件演算子">二項条件演算子&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>構文&lt;/th>
&lt;th>真の条件&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&amp;ldquo;$str1&amp;rdquo; = &amp;ldquo;$str2&amp;rdquo;&lt;/td>
&lt;td>$str1と$str2が等しい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ldquo;$str1&amp;rdquo; != &amp;ldquo;$str2&amp;rdquo;&lt;/td>
&lt;td>$str1と$str2が等しくない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -eq $y&lt;/td>
&lt;td>数値$xと$yが等しい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -ne $y&lt;/td>
&lt;td>数値$xと$yが等しくない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -gt $y&lt;/td>
&lt;td>数値$xが$yより大きい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -lt $y&lt;/td>
&lt;td>数値$xが$yより小さい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -ge $y&lt;/td>
&lt;td>数値$xが$y以上&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$x -le $y&lt;/td>
&lt;td>数値$xが$y以下&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$path1 -nt $path2&lt;/td>
&lt;td>$path1 のタイムスタンプが $path2 より新しい&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$path1 -ot $path2&lt;/td>
&lt;td>$path1 のタイムスタンプが $path2 より古い&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="ループ">ループ&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">## 無限ループ&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> true&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> true&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">continue&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># 後続の処理をスキップして次の周回へ&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span>
:
&lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
:
&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">## イテレータでループ&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> i in &lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>get_some_list&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
:
&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://xtech.nikkei.com/it/article/COLUMN/20060228/231135/">【 次の繰り返しに移る「continue」 】 | 日経クロステック（xTECH）&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="関数">関数&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_05">Shell Command Language#2.9.5 Function Definition Command&lt;/a>&lt;/p>
&lt;p>Syntax:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">fname&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> compound-command &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>io-redirect ...&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>&lt;code>function&lt;/code> キーワードはBash等による拡張のようだ&lt;/li>
&lt;/ul>
&lt;h3 id="case構文">case構文&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_04_05">Shell Command Language#Case Conditional Construct&lt;/a>&lt;/p>
&lt;p>構文:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> 値 in
パターン1 &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 処理1 &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
パターン2 &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 処理2 &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
パターン3 &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 処理3 &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
…
パターンn &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 処理n &lt;span style="color:#000;font-weight:bold">;;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">esac&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>NOTE:&lt;/p>
&lt;ul>
&lt;li>シェルの&lt;a href="#%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%83%9E%E3%83%83%E3%83%81">パターンマッチ&lt;/a>を使うこともできる&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://shellscript.sunone.me/case.html">case 文の使用方法 | UNIX &amp;amp; Linux コマンド・シェルスクリプト リファレンス&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="パターンマッチ">パターンマッチ&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_13">Shell Command Language#2.13. Pattern Matching Notation&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>パターン&lt;/th>
&lt;th>マッチ文字列&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>?&lt;/code>&lt;/td>
&lt;td>任意のアスキー1字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>*&lt;/code>&lt;/td>
&lt;td>ヌル文字を含む任意の文字列&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>[&lt;/code>&lt;/td>
&lt;td>&lt;code>[...]&lt;/code> で &lt;code>[]&lt;/code> 内の任意の1字にマッチする&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="parameter-expansion-1">Parameter Expansion&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">parameter&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">parameter&lt;/span>&lt;span style="color:#204a87;font-weight:bold">:-&lt;/span>&lt;span style="color:#000">word&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> -z &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">var&lt;/span>&lt;span style="color:#000;font-weight:bold">+x&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;var is unset&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;var is set to &amp;#39;&lt;/span>&lt;span style="color:#000">$var&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/3601515/how-to-check-if-a-variable-is-set-in-bash">shell - How to check if a variable is set in Bash? - Stack Overflow&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="built-ins">Built-Ins&lt;/h2>
&lt;h3 id="-dot">. (dot)&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_18">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_18&lt;/a>&lt;/p>
&lt;h3 id="-colon">: (colon)&lt;/h3>
&lt;p>null utility&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_16">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_16&lt;/a>&lt;/li>
&lt;li>Bash: &lt;a href="https://tiswww.case.edu/php/chet/bash/bashref.html#Bourne-Shell-Builtins">https://tiswww.case.edu/php/chet/bash/bashref.html#Bourne-Shell-Builtins&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>何もしないコマンド&lt;/p>
&lt;h3 id="return">return&lt;/h3>
&lt;p>関数かdot scriptを終了する&lt;/p>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_24">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_24&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 0以外だと異常終了扱い&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 引数省略時は最後のコマンドのexit statusになる&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/blueskyarea/items/805c0aa4b1cbba11818a">シェルスクリプト return コマンド - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/progrhyme/experiments/tree/master/bash/source-scripts">https://github.com/progrhyme/experiments/tree/master/bash/source-scripts&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="unset">unset&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_29">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_29&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># シェル変数または環境変数を削除&lt;/span>
&lt;span style="color:#204a87">unset&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>-v&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> FOO
&lt;span style="color:#8f5902;font-style:italic"># 関数名を削除&lt;/span>
&lt;span style="color:#204a87">unset&lt;/span> -f my_func
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.atmarkit.co.jp/ait/articles/1905/24/news015.html">【 unset 】コマンド――変数や関数を削除する：Linux基本コマンドTips（307） - ＠IT&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="utilities">Utilities&lt;/h2>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap04.html#tag_20">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap04.html#tag_20&lt;/a>&lt;/p>
&lt;p>必須のものと、オプショナルなものがある。&lt;br>
何が必須で、何がそうでないかについては、&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap01.html#tag_01_07_01">1.7.1 Codes&lt;/a>にコードが定義されている。&lt;/p>
&lt;h3 id="test">test&lt;/h3>
&lt;p>&lt;a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/test.html#tag_20_128">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/test.html#tag_20_128&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 1&lt;/span>
&lt;span style="color:#204a87">test&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>expression&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 2&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>expression&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>expressionを評価して、成功なら0, 失敗なら非0で終了する。&lt;br>
もっぱら論理式的に使われる。&lt;/p></description></item><item><title>A: Bash</title><link>https://progrhy.me/tech-notes/a/cli/shell/bash/</link><pubDate>Tue, 28 Apr 2020 09:14:42 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/cli/shell/bash/</guid><description>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>入門コンテンツ:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://cs.lmu.edu/~ray/notes/bash/">Introduction to Bash&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://se.cite.ehime-u.ac.jp/~aman/memo/bash/">bash 入門 - se.cite.ehime-u.ac.jp&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rat.cis.k.hosei.ac.jp/article/linux/bash_intro.html">bash 入門 - rat.cis.k.hosei.ac.jp&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>コーディング規約:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://google.github.io/styleguide/shell.xml">Shell Style Guide&lt;/a> &amp;hellip; Google&lt;/li>
&lt;li>&lt;a href="https://qiita.com/Bopllq0916/items/eeb1b8e2cfe386c4f64f">bashコーディング規約参考 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="documents">Documents&lt;/h2>
&lt;h3 id="公式">公式&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://linuxjm.osdn.jp/html/GNU_bash/man1/bash.1.html" title="Man page of BASH">Man page of BASH&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tiswww.case.edu/php/chet/bash/bashref.html" title="Bash Reference Manual">Bash Reference Manual&lt;/a>&lt;/li>
&lt;li>CHANGES: &lt;a href="https://tiswww.case.edu/php/chet/bash/CHANGES">https://tiswww.case.edu/php/chet/bash/CHANGES&lt;/a>&lt;/li>
&lt;li>リリースノート的なもの: &lt;a href="https://tiswww.case.edu/php/chet/bash/NEWS">https://tiswww.case.edu/php/chet/bash/NEWS&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="非公式">非公式&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://wiki.bash-hackers.org/scripting/bashchanges" title="Bash changes [Bash Hackers Wiki]">Bash changes [Bash Hackers Wiki]&lt;/a>&lt;/li>
&lt;li>★&lt;a href="http://iishikawa.s371.xrea.com/note/bash-script.html">Bash scripting&lt;/a> &amp;hellip; 便利な Bash の小技いろいろ&lt;/li>
&lt;li>&lt;a href="http://qiita.com/b4b4r07/items/e56a8e3471fb45df2f59">bash 配列まとめ - Qiita&lt;/a>
&lt;ul>
&lt;li>配列の操作いろいろ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>プロンプトについて:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://linuxconfig.org/bash-prompt-basics">Bash prompt basics - LinuxConfig.org&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rcmdnk.github.io/blog/2013/03/21/prompt-command/">PS1とPROMPT_COMMAND, GNU screenでの活用も&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="bashコマンド">bashコマンド&lt;/h2>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">bash -n script.sh &lt;span style="color:#8f5902;font-style:italic"># シンタックスチェック&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/dharry/items/f593d96c1b0269182922">シェルスクリプトのlint - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;h3 id="配列">配列&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 配列の生成&lt;/span>
&lt;span style="color:#000">array&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=()&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># 空配列&lt;/span>
&lt;span style="color:#000">array&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;a&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;b&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;c&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 配列の要素数&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">${#&lt;/span>&lt;span style="color:#000">array&lt;/span>&lt;span style="color:#000;font-weight:bold">[@]&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 末尾に要素追加&lt;/span>
&lt;span style="color:#000">array&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">+=(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;x&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 先頭に追加&lt;/span>
&lt;span style="color:#000">array&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;x&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">array&lt;/span>&lt;span style="color:#000;font-weight:bold">[@]&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/b4b4r07/items/e56a8e3471fb45df2f59">bash 配列まとめ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="リダイレクト">リダイレクト&lt;/h3>
&lt;p>Qiitaにまとめを書いた:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/progrhyme/items/e99be732c2e62d4a7641">Bashの入出力リダイレクトまとめ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/laikuaut/items/e1cc312ffc7ec2c872fc">bash: 標準出力、標準エラー出力をファイル、画面それぞれに出力する方法 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://orebibou.com/2016/02/%E8%A6%9A%E3%81%88%E3%81%A6%E3%82%8B%E3%81%A8%E6%A1%88%E5%A4%96%E4%BE%BF%E5%88%A9%E3%81%AAbash%E3%81%AE%E3%83%AA%E3%83%80%E3%82%A4%E3%83%AC%E3%82%AF%E3%83%88%E3%83%BB%E3%83%91%E3%82%A4%E3%83%97/">覚えてると案外便利なBashのリダイレクト・パイプの使い方9個 | 俺的備忘録 〜なんかいろいろ〜&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="ヒアドキュメント">ヒアドキュメント&lt;/h3>
&lt;p>※POSIX標準ではないか。少なくともkshでは動かなさそう。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt; EOS &amp;gt; cat.out
&lt;/span>&lt;span style="color:#4e9a06">foo
&lt;/span>&lt;span style="color:#4e9a06"> bar
&lt;/span>&lt;span style="color:#4e9a06"> baz
&lt;/span>&lt;span style="color:#4e9a06">EOS&lt;/span>
&lt;span style="color:#000">BODY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>cat &lt;span style="color:#4e9a06">&amp;lt;&amp;lt; EOS
&lt;/span>&lt;span style="color:#4e9a06">Dear Ken,
&lt;/span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;span style="color:#4e9a06">I&amp;#39;m so happy to write this message.
&lt;/span>&lt;span style="color:#4e9a06">I&amp;#39;ll be back soon!
&lt;/span>&lt;span style="color:#4e9a06">EOS&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ヒアドキュメントは文字列リテラルではなく、標準入力らしい。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/take4s5i/items/e207cee4fb04385a9952" title="bashのヒアドキュメントを活用する - Qiita">bashのヒアドキュメントを活用する - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="正規表現">正規表現&lt;/h3>
&lt;p>POSIXか、EREなのだと思う。&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$str&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>~ ^ba*r$ &lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> match
end
&lt;span style="color:#8f5902;font-style:italic">## マッチしないことの検査&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[[&lt;/span> ! &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$str&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>~ ^ba*r$ &lt;span style="color:#ce5c00;font-weight:bold">]]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> not match
end
&lt;/code>&lt;/pre>&lt;/div>&lt;p>関連項目:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/cli/shell/bash/cookbook/#%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%8F%BE%E3%81%A7%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E5%8C%96%E3%81%A8%E5%BE%8C%E6%96%B9%E5%8F%82%E7%85%A7">Cookbooks#正規表現でグループ化と後方参照&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://sites.google.com/site/progrhymetechwiki/program/regexp">https://sites.google.com/site/progrhymetechwiki/program/regexp&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://shellscript.sunone.me/case.html">case 文の使用方法 | UNIX &amp;amp; Linux コマンド・シェルスクリプト リファレンス&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://takuya-1st.hatenablog.jp/entry/2016/12/22/175514">bashでif に正規表現を使った文字列マッチ条件分岐 - それマグで！&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="ansi-c-quoting">ANSI-C Quoting&lt;/h3>
&lt;p>&lt;a href="https://tiswww.case.edu/php/chet/bash/bashref.html#ANSI_002dC-Quoting">https://tiswww.case.edu/php/chet/bash/bashref.html#ANSI_002dC-Quoting&lt;/a>&lt;/p>
&lt;p>&lt;code>$'string'&lt;/code> 形式のもの。ユニコードとかエスケープシーケンスで使える。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">$&amp;#39;\e[031mThis text will be colored Red.\e[0m&amp;#39;&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">$&amp;#39;\U25c0&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="built-ins">Built-ins&lt;/h2>
&lt;h3 id="help">help&lt;/h3>
&lt;p>ビルトインコマンドの説明を表示する。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># helpコマンド自身のヘルプを表示&lt;/span>
&lt;span style="color:#204a87">help&lt;/span> &lt;span style="color:#204a87">help&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 擬似man pageモード&lt;/span>
&lt;span style="color:#204a87">help&lt;/span> -m &lt;span style="color:#204a87">unset&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.atmarkit.co.jp/ait/articles/1703/03/news025.html">【 help 】コマンド――Bashのビルトインコマンドの使い方を表示する：Linux基本コマンドTips（91） - ＠IT&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="history">history&lt;/h3>
&lt;p>&lt;a href="https://tiswww.case.edu/php/chet/bash/bashref.html#Bash-History-Builtins">https://tiswww.case.edu/php/chet/bash/bashref.html#Bash-History-Builtins&lt;/a>&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 10件表示&lt;/span>
&lt;span style="color:#204a87">history&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Tips:&lt;/p>
&lt;ul>
&lt;li>シェル変数 &lt;code>HISTTIMEFORMAT&lt;/code> をstrftime書式で設定しておくとタイムスタンプを記録してくれる。
また、表示時にその書式でタイムスタンプを表示してくれる&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/khotta/items/948c8fd9cae32b392424">historyコマンドの実行日時のフォーマットについて - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="spec">Spec&lt;/h2>
&lt;p>その他の仕様など。&lt;/p>
&lt;h3 id="配列はexportできない">配列はexportできない&lt;/h3>
&lt;p>&lt;a href="https://www.mail-archive.com/bug-bash@gnu.org/msg01774.html">Re: export does not work on array&lt;/a>&lt;/p>
&lt;p>これは2006年のメールなのだけど、2020-05-23のmacOS + bash v5.0.17でも駄目だった。&lt;/p>
&lt;p>サブシェルでは見えるんだけど、子プロセスとして起動したスクリプトからだと見えなかった。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://stackoverflow.com/questions/5564418/exporting-an-array-in-bash-script">Exporting an array in bash script - Stack Overflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.mazn.net/blog/2008/11/29/161.html">bashで配列のエクスポートができない@bash 3.2 | Mazn.net&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="プロンプトps1の変更">プロンプト(PS1)の変更&lt;/h3>
&lt;p>&lt;code>PS1&lt;/code> 変数を設定する。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">PS1&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;\[\e[1;34m\][\u@\h \W]\\&lt;/span>$&lt;span style="color:#4e9a06"> \[\e[m\]&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>特殊文字&lt;/th>
&lt;th>内容&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>\u&lt;/td>
&lt;td>現在のユーザ名&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>\h&lt;/td>
&lt;td>ホスト名（ドメイン部除く）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>\w&lt;/td>
&lt;td>カレントディレクトリ（ホームディレクトリからの絶対パス）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考（カスタマイズしたくなったときに見るページ）:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.atmarkit.co.jp/flinux/rensai/linuxtips/002cngprmpt.html" title="bashのプロンプトを変更するには">bashのプロンプトを変更するには&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jp.linux.com/news/linuxcom-exclusive/416957-lco20140519" title="Linuxで、bash プロンプトを素敵で実用的なものに変更する">Linuxで、bash プロンプトを素敵で実用的なものに変更する&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/wildeagle/items/5da17e007e2c284dc5dd">BashでPromptの色を変更する方法 - Qiita&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: fish shell</title><link>https://progrhy.me/tech-notes/a/cli/shell/fish/</link><pubDate>Sat, 20 Jun 2020 16:39:53 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/cli/shell/fish/</guid><description>
&lt;h2 id="about">About&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>Finally, a command line shell for the 90s&lt;/strong>&lt;br>
fish is a smart and user-friendly command line shell for Linux, macOS, and the rest of the family.&lt;/p>
&lt;/blockquote>
&lt;p>使いやすいシェルとして人気のもの。&lt;/p>
&lt;ul>
&lt;li>C++ 実装&lt;/li>
&lt;li>POSIX &lt;strong>非互換&lt;/strong>&lt;/li>
&lt;li>プラグイン機能がある&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://nulab.com/ja/blog/backlog/fish-shell-tutorial/">fish-shell でシェルの海をスイスイ泳いでみた | 株式会社ヌーラボ(Nulab inc.)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/hennin/items/33758226a0de8c963ddf">fish shellが結構良かった話 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/kuwa72/items/f3a90fcd215938f5817e">シェル芸人のためのfish入門 - Qiita&lt;/a> &amp;hellip; Bashとの違いがわかりやすかった&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>Install:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://fishshell.com/">https://fishshell.com/&lt;/a> の「Go fish」から&lt;/li>
&lt;/ul>
&lt;p>Documentation:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://fishshell.com/docs/current/">https://fishshell.com/docs/current/&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://fishshell.com/docs/current/tutorial.html">Tutorial — fish-shell 3.1.2 documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>有志和訳:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://natsukium.github.io/fish-docs-jp/">https://natsukium.github.io/fish-docs-jp/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="spec">Spec&lt;/h2>
&lt;ul>
&lt;li>配列のインデックスは1から始まる&lt;/li>
&lt;/ul>
&lt;h3 id="変数のスコープ">変数のスコープ&lt;/h3>
&lt;p>&lt;a href="https://fishshell.com/docs/current/#variable-scope">https://fishshell.com/docs/current/#variable-scope&lt;/a>&lt;/p>
&lt;p>3種類のスコープ:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Universal&lt;/strong> &amp;hellip; 該当ユーザの全fishセッションで共有される&lt;/li>
&lt;li>&lt;strong>Global&lt;/strong> &amp;hellip; 現在のfishセッションに閉じるが、他のブロックスコープに結びつかず、 &lt;code>set -e&lt;/code> で明示的に消されない限り消えない&lt;/li>
&lt;li>&lt;strong>Local&lt;/strong> &amp;hellip; 特定のブロックに関連付けられ、ブロックを抜けると消える。ブロックは &lt;code>for&lt;/code>, &lt;code>while&lt;/code>, &lt;code>if&lt;/code>, &lt;code>function&lt;/code>, &lt;code>begin&lt;/code> や &lt;code>switch&lt;/code> で作られ、 &lt;code>end&lt;/code> で閉じる&lt;/li>
&lt;/ul>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># Universal. -U, --universal で定義&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> -U fish_user_paths . &lt;span style="color:#000">$fish_user_paths&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Global. -g, --global で定義&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> -g PATH &lt;span style="color:#000">$HOME&lt;/span>/bin &lt;span style="color:#000">$PATH&lt;/span>
begin
&lt;span style="color:#8f5902;font-style:italic"># Local. -l, --local で定義&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> -l pirate &lt;span style="color:#4e9a06">&amp;#39;There be treasure in them thar hills&amp;#39;&lt;/span>
end
&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#000">$pirate&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># pirateはlocalなので何も出力されない&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="commands">Commands&lt;/h2>
&lt;p>&lt;a href="https://fishshell.com/docs/current/commands.html">https://fishshell.com/docs/current/commands.html&lt;/a>&lt;/p>
&lt;h3 id="contains">contains&lt;/h3>
&lt;p>&lt;a href="https://fishshell.com/docs/current/cmds/contains.html">https://fishshell.com/docs/current/cmds/contains.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">contains &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> KEY &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>VALUES...&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ワードがリストに含まれるか調べる。&lt;br>
オプション &lt;code>-i, --index&lt;/code> を付けると、ワードのインデックス値を返す。&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># PATHにまだ含まれていなければ追加&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> not contains &lt;span style="color:#000">$HOME&lt;/span>/bin &lt;span style="color:#000">$PATH&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> PATH &lt;span style="color:#000">$HOME&lt;/span>/bin &lt;span style="color:#000">$PATH&lt;/span>
end
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="eval">eval&lt;/h3>
&lt;p>&lt;a href="https://fishshell.com/docs/current/cmds/eval.html">https://fishshell.com/docs/current/cmds/eval.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87">eval&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>COMMANDS...&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>テキストをコマンドとして評価する。&lt;br>
コマンドが標準入力を使わないのなら &lt;code>source&lt;/code> を使ったほうがいいかも。&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87">set&lt;/span> cmd ls &lt;span style="color:#4e9a06">\|&lt;/span> cut -c 1-12
&lt;span style="color:#204a87">eval&lt;/span> &lt;span style="color:#000">$cmd&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="function">function&lt;/h3>
&lt;p>&lt;a href="https://fishshell.com/docs/current/cmds/function.html">https://fishshell.com/docs/current/cmds/function.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">function&lt;/span> NAME &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> BODY&lt;span style="color:#000;font-weight:bold">;&lt;/span> end
&lt;/code>&lt;/pre>&lt;/div>&lt;p>関数を作る。&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">function&lt;/span> ll
ls -l &lt;span style="color:#000">$argv&lt;/span>
end
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Spec:&lt;/p>
&lt;ul>
&lt;li>引数は &lt;code>$argv&lt;/code> でリストとして渡される&lt;/li>
&lt;/ul>
&lt;h3 id="functions">functions&lt;/h3>
&lt;p>&lt;a href="https://fishshell.com/docs/current/cmds/functions.html">https://fishshell.com/docs/current/cmds/functions.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">functions &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> -a &lt;span style="color:#000;font-weight:bold">|&lt;/span> --all &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> -n &lt;span style="color:#000;font-weight:bold">|&lt;/span> --names &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
functions &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> -D &lt;span style="color:#000;font-weight:bold">|&lt;/span> --details &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> -v &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> FUNCTION
functions -c OLDNAME NEWNAME
functions -d DESCRIPTION FUNCTION
functions &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> -e &lt;span style="color:#000;font-weight:bold">|&lt;/span> -q &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> FUNCTIONS...
&lt;/code>&lt;/pre>&lt;/div>&lt;p>関数を表示したり消したりする。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Option&lt;/th>
&lt;th>機能&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>-a, -all&lt;/code>&lt;/td>
&lt;td>&lt;code>_&lt;/code> で始まるものも全て表示&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-e, --erase FUNCTIONS...&lt;/code>&lt;/td>
&lt;td>関数を消す&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">functions -n
&lt;span style="color:#8f5902;font-style:italic"># Displays a list of currently-defined functions&lt;/span>
functions -c foo bar
&lt;span style="color:#8f5902;font-style:italic"># Copies the &amp;#39;foo&amp;#39; function to a new function called &amp;#39;bar&amp;#39;&lt;/span>
functions -e bar
&lt;span style="color:#8f5902;font-style:italic"># Erases the function ``bar``&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="if">if&lt;/h3>
&lt;p>&lt;a href="https://fishshell.com/docs/current/cmds/if.html">https://fishshell.com/docs/current/cmds/if.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> CONDITION&lt;span style="color:#000;font-weight:bold">;&lt;/span> COMMANDS_TRUE...&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> CONDITION2&lt;span style="color:#000;font-weight:bold">;&lt;/span> COMMANDS_TRUE2...&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87;font-weight:bold">else&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> COMMANDS_FALSE...&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
end
&lt;/code>&lt;/pre>&lt;/div>&lt;p>条件分岐構文として使える。&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#204a87">test&lt;/span> -f foo.txt
&lt;span style="color:#204a87">echo&lt;/span> foo.txt exists
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#204a87">test&lt;/span> -f bar.txt
&lt;span style="color:#204a87">echo&lt;/span> bar.txt exists
&lt;span style="color:#204a87;font-weight:bold">else&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> foo.txt and bar.txt &lt;span style="color:#204a87;font-weight:bold">do&lt;/span> not exist
end
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="set">set&lt;/h3>
&lt;p>&lt;a href="https://fishshell.com/docs/current/cmds/set.html">https://fishshell.com/docs/current/cmds/set.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87">set&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>SCOPE_OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> VARIABLE_NAME VALUES...
&lt;span style="color:#204a87">set&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> VARIABLE_NAME&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>INDICES&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>... VALUES...
&lt;span style="color:#204a87">set&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> -q &lt;span style="color:#000;font-weight:bold">|&lt;/span> --query &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>SCOPE_OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> VARIABLE_NAMES...
&lt;span style="color:#204a87">set&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> -e &lt;span style="color:#000;font-weight:bold">|&lt;/span> --erase &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>SCOPE_OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> VARIABLE_NAME
&lt;span style="color:#204a87">set&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> -e &lt;span style="color:#000;font-weight:bold">|&lt;/span> --erase &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>SCOPE_OPTIONS&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> VARIABLE_NAME&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>INDICES&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>...
&lt;span style="color:#204a87">set&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> -S &lt;span style="color:#000;font-weight:bold">|&lt;/span> --show &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>VARIABLE_NAME&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>...
&lt;/code>&lt;/pre>&lt;/div>&lt;p>シェル変数の表示や操作を行う。&lt;/p>
&lt;p>関連項目:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#%E5%A4%89%E6%95%B0%E3%81%AE%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97">変数のスコープ&lt;/a>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Option&lt;/th>
&lt;th>機能&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>-e, --erase NAME&lt;/code>&lt;/td>
&lt;td>変数を削除する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-x, --export NAME VALUES...&lt;/code>&lt;/td>
&lt;td>変数をエクスポートし、環境変数にする&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-u, --unexport NAME VALUES...&lt;/code>&lt;/td>
&lt;td>変数をアンエクスポートし、環境変数ではなくする&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># Prints all global, exported variables.&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> -xg
&lt;span style="color:#8f5902;font-style:italic"># Sets the value of the variable $foo to be &amp;#39;hi&amp;#39;.&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> foo hi
&lt;span style="color:#8f5902;font-style:italic"># $fooを配列と見なして&amp;#34;there&amp;#34;をappendする&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> -a foo there
&lt;span style="color:#8f5902;font-style:italic"># Does the same thing as the previous two commands the way it would be done pre-fish 3.0.&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> foo hi
&lt;span style="color:#204a87">set&lt;/span> foo &lt;span style="color:#000">$foo&lt;/span> there
&lt;span style="color:#8f5902;font-style:italic"># 先頭に要素を追加&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> foo &lt;span style="color:#4e9a06">&amp;#34;Hello, &amp;#34;&lt;/span> &lt;span style="color:#000">$foo&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Removes the variable $smurf&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> -e smurf
&lt;span style="color:#8f5902;font-style:italic"># Changes the fourth element of the $PATH list to ~/bin&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> PATH&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>4&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> ~/bin
&lt;span style="color:#8f5902;font-style:italic"># PATH変数の3つ目を削除&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> -e PATH&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>3&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="source">source&lt;/h3>
&lt;p>&lt;a href="https://fishshell.com/docs/current/cmds/source.html">https://fishshell.com/docs/current/cmds/source.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 1&lt;/span>
&lt;span style="color:#204a87">source&lt;/span> FILENAME &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>ARGUMENTS...&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 2&lt;/span>
somecommand &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">source&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ファイルや標準入力から受け取ったコマンド群を現在のシェルのコンテキストで評価・実行する。&lt;/p>
&lt;h3 id="test">test&lt;/h3>
&lt;p>&lt;a href="https://fishshell.com/docs/current/cmds/test.html">https://fishshell.com/docs/current/cmds/test.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 1&lt;/span>
&lt;span style="color:#204a87">test&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>EXPRESSION&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># 2&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>EXPRESSION&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://progrhy.me/tech-notes/a/cli/shell/posix/#test">POSIX shellのtest&lt;/a>ユーティリティのように機能する。&lt;br>
互換性のために2番めの構文も利用可能だが、fishでは &lt;code>test ...&lt;/code> 形式が好まれるとのこと。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#204a87">test&lt;/span> -d /tmp
cp /etc/motd /tmp/motd
end
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#204a87">test&lt;/span> -n &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$MANPATH&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#000">$MANPATH&lt;/span>
end
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> ! &lt;span style="color:#204a87">test&lt;/span> -r secret.txt
&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Can&amp;#39;t read secret.txt&amp;#34;&lt;/span> &amp;gt;&lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>
end
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#204a87">test&lt;/span> &lt;span style="color:#4e9a06">\(&lt;/span> -f /foo -o -f /bar &lt;span style="color:#4e9a06">\)&lt;/span> -a &lt;span style="color:#4e9a06">\(&lt;/span> -f /baz -o -f /bat &lt;span style="color:#4e9a06">\)&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> Success
end
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#204a87">test&lt;/span> &lt;span style="color:#000">$status&lt;/span> -ne &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Previous command failed&amp;#34;&lt;/span>
end
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="パッケージ管理">パッケージ管理&lt;/h2>
&lt;p>関連項目:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/cli/shell/pkg-man/">シェル &amp;gt; パッケージ管理&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="fisher">fisher&lt;/h3>
&lt;p>&lt;a href="https://github.com/jorgebucaran/fisher">https://github.com/jorgebucaran/fisher&lt;/a>&lt;/p>
&lt;p>人気のパッケージ管理ツール。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># oh-my-fishのテーマをfisherでインストール&lt;/span>
fisher add oh-my-fish/theme-&amp;lt;テーマ名&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/nutsinshell/items/5f111184b50f7081c92f">初心者がShellを知りFish〜Fisherを導入するまで - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hi120ki.github.io/blog/posts/20190123/">fisher v3 で変わったこと | Hi120kiのメモ&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Zsh</title><link>https://progrhy.me/tech-notes/a/cli/shell/zsh/</link><pubDate>Tue, 28 Apr 2020 00:14:04 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/cli/shell/zsh/</guid><description>
&lt;p>&lt;a href="http://www.zsh.org/">http://www.zsh.org/&lt;/a>&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://zsh.sourceforge.net/Doc/Release/">zsh: The Z Shell Manual&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://sourceforge.net/p/zsh/code/ci/master/tree/">https://sourceforge.net/p/zsh/code/ci/master/tree/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh">https://github.com/zsh-users/zsh&lt;/a> &amp;hellip; Mirror&lt;/li>
&lt;/ul>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;h3 id="配列">配列&lt;/h3>
&lt;p>Bashと違って、配列の添字が &lt;code>1&lt;/code> から始まることに注意が必要。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#000">a&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=(&lt;/span>x y z&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#000">$a&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#8f5902;font-style:italic">#=&amp;gt; x&lt;/span>
&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#000">$a&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#8f5902;font-style:italic">#=&amp;gt; y&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/mollifier/items/f897b3fddd2d10369333">zsh の配列操作の基本から応用まで - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-zsh" data-lang="zsh">&lt;span style="color:#8f5902;font-style:italic"># history -i でコマンドの実行時間表示&lt;/span>
setopt extended_history
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://orumin.blogspot.com/2017/10/unix-os.html">Unix 系 OS でコマンド実行間にタイムスタンプを付ける&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tegetegekibaru.blogspot.com/2012/08/zsh_2.html">zsh 設定 - プロンプト -&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="options">Options&lt;/h3>
&lt;p>&lt;a href="http://zsh.sourceforge.net/Doc/Release/Options.html">http://zsh.sourceforge.net/Doc/Release/Options.html&lt;/a>&lt;/p>
&lt;p>&lt;code>setopt&lt;/code>, &lt;code>unsetopt&lt;/code> はPOSIXの &lt;code>set +/-o&lt;/code> の代わりにzshoptionsの設定に用いることができる。 &lt;code>set +/-o&lt;/code> も使えるみたい。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">setopt shwordsplit &lt;span style="color:#8f5902;font-style:italic"># 他のシェルと文字列変数の分割方法を揃える&lt;/span>
setopt ksharrays &lt;span style="color:#8f5902;font-style:italic"># 配列の添字を0から始める&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://linux.die.net/man/1/zshoptions">zshoptions(1): zsh options - Linux man page&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/ko1nksm/items/8d28d4f7cb2c325c00fa#-zsh---z-shell">スクリプト言語としてみた各POSIXシェルの特徴と互換性上の注意点まとめ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="emulate">emulate&lt;/h4>
&lt;p>他のシェルと互換性のあるモード。色んなオプションがセットされる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">emulate -R sh &lt;span style="color:#8f5902;font-style:italic"># POSIX shに近いモード&lt;/span>
emulate -R ksh &lt;span style="color:#8f5902;font-style:italic"># ksh (bash) に近いモード&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://fumiyas.github.io/2013/12/03/zsh-scripting.sh-advent-calendar.html">zsh でシェルスクリプトを書くときの留意点 - 拡張 POSIX シェルスクリプト Advent Calendar 2013 - ダメ出し Blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="helpコマンド">helpコマンド&lt;/h3>
&lt;p>&lt;a href="https://wiki.archlinux.jp/index.php/Zsh#.E3.83.98.E3.83.AB.E3.83.97.E3.82.B3.E3.83.9E.E3.83.B3.E3.83.89">Zsh - ArchWiki#ヘルプコマンド&lt;/a>より。&lt;/p>
&lt;blockquote>
&lt;p>Bashとは違って、Zshは組み込まれている &lt;code>help&lt;/code> コマンドを有効にしていません。Zshでhelpを使うには、以下をzshrcに追加してください:&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">autoload -U run-help
autoload run-help-git
autoload run-help-svn
autoload run-help-svk
&lt;span style="color:#204a87">unalias&lt;/span> run-help
&lt;span style="color:#204a87">alias&lt;/span> &lt;span style="color:#000">help&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>run-help
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="プロンプト">プロンプト&lt;/h3>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/yamagen0915/items/77fb78d9c73369c784da">zshプロンプトのカスタマイズ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="プロンプトの種類">プロンプトの種類&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>プロンプト&lt;/th>
&lt;th>説明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>PROMPT&lt;/td>
&lt;td>左プロンプト&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RPROMPT&lt;/td>
&lt;td>右プロンプト&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SPROMPT&lt;/td>
&lt;td>correctで訂正の候補を出すときに表示されるプロンプトです&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PROMPT2, RPOMPT2&lt;/td>
&lt;td>コマンドが複数行になった時に表示されるプロンプトです&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PROMPT3&lt;/td>
&lt;td>?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PROMPT4&lt;/td>
&lt;td>?&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="特殊文字">特殊文字&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>文字&lt;/th>
&lt;th>出力内容&lt;/th>
&lt;th>例&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>%n&lt;/td>
&lt;td>ユーザー名&lt;/td>
&lt;td>root&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%#&lt;/td>
&lt;td>ユーザー種別&lt;/td>
&lt;td>#（rootのとき）&lt;br />%（root以外）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%m&lt;/td>
&lt;td>ホスト名&lt;/td>
&lt;td>localhost&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%d, %/&lt;/td>
&lt;td>カレントディレクトリ&lt;/td>
&lt;td>/home/me/dir&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%~&lt;/td>
&lt;td>カレントディレクトリ&lt;/td>
&lt;td>~/dir&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%C&lt;/td>
&lt;td>カレントディレクトリ&lt;/td>
&lt;td>dir&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%T&lt;/td>
&lt;td>時間 (HH:MM)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%*&lt;/td>
&lt;td>時間 (HH:MM:SS)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%D&lt;/td>
&lt;td>日付 (YY-MM-DD)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="色">色&lt;/h4>
&lt;p>こんな感じで色を付けられれる。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># ①依存なし&lt;/span>
&lt;span style="color:#000">PROMPT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;%F{cyan} $n %f&amp;#39;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># ②colorsを使う&lt;/span>
autoload -Uz colors
colors
&lt;span style="color:#000">PROMPT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;%{${fg[cyan]}%} $n %{${reset_color}%}&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>色の文字か番号で色を指定できる。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>番号&lt;/th>
&lt;th>色&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>0&lt;/td>
&lt;td>black&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>red&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>green&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>yellow&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td>blue&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5&lt;/td>
&lt;td>magenta&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6&lt;/td>
&lt;td>cyan&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>7&lt;/td>
&lt;td>white&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/mollifier/items/40d57e1da1b325903659">zshでプロンプトをカラー表示する - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="色-256色対応">色: 256色対応&lt;/h4>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># Zshパラメータ利用&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># - %F{文字色番号}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># - %K{背景色番号}&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># - %f ... 文字色リセット&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># - %k ... 背景色リセット&lt;/span>
&lt;span style="color:#000">PROMPT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;%K{082}%F{001}[%n@%m]%f%k&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># エスケープシーケンス利用&lt;/span>
&lt;span style="color:#000">PROMPT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">$&amp;#39;%{\e[30;48;5;082m%}%{\e[38;5;001m%}[%n@%m]%{\e[0m%}&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>上2つはどちらも同じ効果を表す&lt;/li>
&lt;li>エスケープシーケンスについては See &lt;a href="https://progrhy.me/tech-notes/a/cli/shell/#ansi%E3%82%A8%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%97%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9">シェル#ANSIエスケープシーケンス&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/butaosuinu/items/770a040bc9cfe22c71f4">zshのプロンプトを256色表示にする＋好きなフォーマットで時刻表示 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>MEMO:&lt;/p>
&lt;ul>
&lt;li>（2020-05-19）上のZshパラメータを使う方法がUbuntu 18.04デスクトップ環境 + 端末アプリだと上手く行ってない&lt;/li>
&lt;li>（2020-05-24）macOS + iTerm2なら上手く行った^&lt;/li>
&lt;/ul>
&lt;h4 id="複数行対応">複数行対応&lt;/h4>
&lt;p>左側のPROMPTなら改行文字を入れればいいが、 &lt;code>precmd()&lt;/code> でプリントするという手もある。&lt;br>
&lt;code>print -P&lt;/code> オプションを付けると、PROMPTのフォーマットで出力できるみたい。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/eexiech8aNahShee/items/355cd4d884ce03656285">zsh の右プロンプトを2行にする - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://superuser.com/questions/974908/multiline-rprompt-in-zsh">prompt - Multiline RPROMPT in zsh - Super User&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="vcs_info">vcs_info&lt;/h4>
&lt;p>メモ:&lt;/p>
&lt;ul>
&lt;li>&lt;code>check-for-changes&lt;/code> をtrueにしても、まだgitの管理下にない新規ファイルがあるだけだと &lt;code>stagedstr&lt;/code> にも &lt;code>unstagedstr&lt;/code> にも表れない。&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh/blob/master/Misc/vcs_info-examples">zsh/vcs_info-examples at master · zsh-users/zsh&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tkengo.github.io/blog/2013/05/12/zsh-vcs-info/">zshのターミナルにリポジトリの情報を表示してみる · けんごのお屋敷&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://timothybasanov.com/2016/04/23/zsh-prompt-and-vcs_info.html">Show Git State in ZSH Prompt via vcs_info | Timothy Basanov&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="feature">Feature&lt;/h2>
&lt;h3 id="zle">ZLE&lt;/h3>
&lt;p>&lt;a href="http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html">Zsh Line Editor&lt;/a>.&lt;/p>
&lt;p>Zshのコマンドライン編集機能。&lt;/p>
&lt;p>たぶん、peco等でキーボードショートカットを作るときに使う人が多いのではないかな。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># 編集を終了し、入力されたコマンドを実行する&lt;/span>
zle accept-line
&lt;span style="color:#8f5902;font-style:italic"># 画面をクリアする&lt;/span>
zle clear-screen
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/b4b4r07/items/8db0257d2e6f6b19ecb9">コマンドライン編集機能 Zsh Line Editor を使いこなす - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tools">Tools&lt;/h2>
&lt;p>パッケージ管理ツールについては、&lt;a href="https://progrhy.me/tech-notes/a/cli/shell/pkg-man/">シェル &amp;gt; パッケージ管理&lt;/a>参照。&lt;/p>
&lt;h3 id="packages--plugins">Packages / Plugins&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/zsh-users/zsh-syntax-highlighting">https://github.com/zsh-users/zsh-syntax-highlighting&lt;/a>
&lt;ul>
&lt;li>fish shellのようなシンタックスハイライトを提供してくれる&lt;/li>
&lt;li>See &lt;a href="https://progrhy.me/tech-notes/a/memo/2020/20200522/#ubuntu-1804%E3%81%A7zsh-syntax-highlighting%E3%82%92%E5%85%A5%E3%82%8C%E3%81%9F">2020-05-22#Ubuntu 18.04でzsh-syntax-highlightingを入れた&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="child-pages">Child Pages&lt;/h2></description></item><item><title>A: シェルスクリプト</title><link>https://progrhy.me/tech-notes/a/cli/shell/script/</link><pubDate>Mon, 04 May 2020 14:49:53 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/cli/shell/script/</guid><description>
&lt;p>関連ページ:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/cli/shell/posix/">POSIXシェル&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/cli/shell/bash/cookbook/">Bash &amp;gt; Cookbooks&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="about">About&lt;/h2>
&lt;p>シェル上で動作する簡易なプログラミング言語、あるいはそれによって書かれたプログラム。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://e-words.jp/w/%E3%82%B7%E3%82%A7%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88.html">シェルスクリプトとは - IT用語辞典 e-Words&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;h3 id="コーディング規約">コーディング規約&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://google.github.io/styleguide/shell.xml" title="Shell Style Guide">Shell Style Guide&lt;/a> &amp;hellip; Google の
&lt;ul>
&lt;li>参考: &lt;a href="http://qiita.com/laqiiz/items/5f72ca668f1c58176644" title="Googleの肩に乗ってShellコーディングしちゃおう - Qiita">Googleの肩に乗ってShellコーディングしちゃおう - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="入門サイトなど">入門サイトなど&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://shellscript.sunone.me/">UNIX &amp;amp; Linux コマンド・シェルスクリプト リファレンス&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://motw.mods.jp/shellscript/tutorial.html">シェルスクリプト入門 書き方のまとめ | Memo on the Web&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/katsukii/items/383b241209fe96eae6e7">シェルスクリプトの基礎知識まとめ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="テスト">テスト&lt;/h2>
&lt;p>シェルスクリプトのテストフレームワークは意外とけっこうある。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Software&lt;/th>
&lt;th>対応シェル&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://github.com/bats-core/bats-core">Bats&lt;/a>&lt;/td>
&lt;td>Bash&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/kward/shunit2">shUnit2&lt;/a>&lt;/td>
&lt;td>POSIX互換シェル&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/pgrange/bash_unit">bash_unit&lt;/a>&lt;/td>
&lt;td>Bash&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://shellspec.info/">ShellSpec&lt;/a>&lt;/td>
&lt;td>POSIX互換シェル&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/rylnd/shpec">rylnd/shpec&lt;/a>&lt;/td>
&lt;td>POSIX準拠シェル&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/progrhyme/shove">progrhyme/shove&lt;/a>&lt;/td>
&lt;td>POSIX互換シェル&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://zunit.xyz/">ZUnit&lt;/a>&lt;/td>
&lt;td>Zsh&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dodie/testing-in-bash">dodie/testing-in-bash: Bash test framework comparison 2020&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://keyamb.hatenablog.com/entry/shove-release-v0.7">&amp;quot;shove&amp;quot; というシェルスクリプト用のテストツールを作った - weblog of key_amb&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="documentation-comments">Documentation Comments&lt;/h2>
&lt;p>ドキュメントコメントの書き方には標準がない感じ。&lt;br>
たぶん一番有名なのは&lt;a href="https://google.github.io/styleguide/shellguide.html#s4.1-file-header">Googleコーディング規約&lt;/a>。&lt;/p>
&lt;p>「shdoc」や「shelldoc」で検索すると、色んな人が様々なツールを作っている。&lt;/p>
&lt;p>使えそうなツール:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>ツール&lt;/th>
&lt;th>実装言語&lt;/th>
&lt;th>出力形式&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://github.com/reconquest/shdoc">reconquest/shdoc&lt;/a>&lt;/td>
&lt;td>AWK&lt;/td>
&lt;td>Markdown&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/essentialkaos/shdoc">essentialkaos/shdoc&lt;/a>&lt;/td>
&lt;td>Go&lt;/td>
&lt;td>Text/Markdown/HTML&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://gitlab.com/RoverAMD/shelldoc">RoverAMD/shelldoc&lt;/a>&lt;/td>
&lt;td>Bash&lt;/td>
&lt;td>Markdown&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/jmcantrell/bashful/blob/master/bin/shdoc">shdoc in jmcantrell/bashful&lt;/a>&lt;/td>
&lt;td>Bash&lt;/td>
&lt;td>Text&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/larsks/shdoc">larsks/shdoc&lt;/a>&lt;/td>
&lt;td>Python&lt;/td>
&lt;td>任意 (Jinja2)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/progrhyme/items/073dbf58844caa0e4b5c">シェルスクリプトの説明をコメントで書いてコマンドラインでヘルプとして表示する - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/memo/2020/20200509/#%E3%82%B7%E3%82%A7%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AE%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92pod%E3%81%A7%E6%9B%B8%E3%81%8F%E3%81%AE%E3%81%AF%E3%82%82%E3%81%86%E3%82%84%E3%82%81%E3%81%A6%E3%81%84%E3%81%84%E3%81%8B%E3%81%AA">2020-05-09#シェルスクリプトのドキュメントコメントをPODで書くのはもうやめていいかな&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Package Managers</title><link>https://progrhy.me/tech-notes/a/cli/shell/pkg-man/</link><pubDate>Mon, 18 May 2020 23:21:41 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/cli/shell/pkg-man/</guid><description>
&lt;p>シェルスクリプトのパッケージ管理ツールについて。&lt;br>
たまに調べるのでこのページにまとめる。&lt;/p>
&lt;h2 id="汎用">汎用&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/basherpm/basher">basherpm/basher&lt;/a> &amp;hellip; clenvと似てる。複数環境切替えなんて機能はもちろんない&lt;/li>
&lt;li>&lt;a href="https://github.com/rossmacarthur/sheldon">rossmacarthur/sheldon&lt;/a> &amp;hellip; Rust製。Zshに向いてそう。なんでもできそう。zplugに機能が似ている&lt;/li>
&lt;li>&lt;a href="https://github.com/rerun/rerun">rerun&lt;/a> &amp;hellip; フレームワーク色がある&lt;/li>
&lt;li>&lt;a href="https://github.com/progrhyme/shelp">progrhyme/shelp&lt;/a> &amp;hellip; Goで書いた自作ツール&lt;/li>
&lt;li>&lt;a href="https://github.com/progrhyme/clenv">progrhyme/clenv&lt;/a> &amp;hellip; 拙作。未完&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/progrhyme/items/3a31282dfd0512a402cc">シェルスクリプトのパッケージマネージャー「basher」の機能概要と使い方 - Qiita&lt;/a> &amp;hellip; 2020年に書いたbasherの紹介記事&lt;/li>
&lt;li>&lt;a href="https://juanibiapina.github.io/articles/basher-a-package-manager-for-shell-scripts/">A Package Manager For Shell Scripts - Juan Ibiapina&lt;/a> &amp;hellip; basherの作者による紹介記事&lt;/li>
&lt;li>&lt;a href="https://keyamb.hatenablog.com/entry/clenv-release-v0.1">&amp;quot;clenv&amp;quot; というシェルスクリプトのパッケージ管理ツールのようなものを作った - weblog of key_amb&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="bash">Bash&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bpkg.sh/">bpkg&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ash-shell/ash">ash-shell/ash&lt;/a> &amp;hellip; フレームワークだそうだ&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/Cj-bc/items/3ce2d9e451f3a06a4b4d">bash package manager: bpkgの紹介 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="zsh">Zsh&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/cli/shell/zsh/ohmyzsh/">Oh My Zsh&lt;/a> &amp;hellip; プラグインマネージャーというよりはフレームワークなのかな&lt;/li>
&lt;li>&lt;a href="https://github.com/zsh-users/antigen">zsh-users/antigen&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zplug/zplug">zplug&lt;/a>&lt;/li>
&lt;li>zplugin&lt;/li>
&lt;li>&lt;a href="https://github.com/tarjoilija/zgen">tarjoilija/zgen&lt;/a>&lt;/li>
&lt;li>antibody&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/b4b4r07/items/cd326cd31e01955b788b">おい、Antigen もいいけど zplug 使えよ - Qiita&lt;/a> &amp;hellip; b4b4r07氏のエントリ&lt;/li>
&lt;li>&lt;a href="https://qiita.com/b4b4r07/items/f37aadef0b3f740e8c14">もっと便利になれる zsh プラグインによる CLI ライフ - Qiita&lt;/a> &amp;hellip; b4b4r07氏のエントリ&lt;/li>
&lt;li>&lt;a href="https://www.reddit.com/r/zsh/comments/ak0vgi/a_comparison_of_all_the_zsh_plugin_mangers_i_used/">A comparison of all the ZSH plugin mangers I used : zsh&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="fish">fish&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/jorgebucaran/fisher">jorgebucaran/fisher&lt;/a> &amp;hellip; これが人気っぽい&lt;/li>
&lt;li>&lt;a href="https://github.com/oh-my-fish/oh-my-fish">oh-my-fish&lt;/a> &amp;hellip; fisher以前はこれが人気だったっぽい。fishで使えるテーマがたくさんある
&lt;ul>
&lt;li>&lt;a href="https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md">https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md&lt;/a> &amp;hellip; 利用可能なテーマ一覧。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>