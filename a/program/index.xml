<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>progrhyme's Tech Notes – プログラミング</title><link>https://progrhy.me/tech-notes/a/program/</link><description>Recent content in プログラミング on progrhyme's Tech Notes</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 26 Apr 2020 07:50:29 +0900</lastBuildDate><atom:link href="https://progrhy.me/tech-notes/a/program/index.xml" rel="self" type="application/rss+xml"/><item><title>A: プログラム言語</title><link>https://progrhy.me/tech-notes/a/program/lang/</link><pubDate>Sun, 26 Apr 2020 07:54:05 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/</guid><description>
&lt;h2 id="topics">Topics&lt;/h2>
&lt;h3 id="変数や関数の命名">変数や関数の命名&lt;/h3>
&lt;p>便利なサービス:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://codic.jp/">https://codic.jp/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考になる記事:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.aerith.net/design/bool-j.html" title="ブール値を返すメンバー関数の命名規則">ブール値を返すメンバー関数の命名規則&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="言語の習得">言語の習得&lt;/h3>
&lt;h4 id="a-to-z">a to z&lt;/h4>
&lt;p>ある言語を一通り学ぶということがどういうことかをまとめる。&lt;/p>
&lt;ul>
&lt;li>文法
&lt;ul>
&lt;li>ソースコードの構造、形式
&lt;ul>
&lt;li>ステートメント
&lt;ul>
&lt;li>区切り文字&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>コメント&lt;/li>
&lt;li>式&lt;/li>
&lt;li>演算子&lt;/li>
&lt;li>キーワード&lt;/li>
&lt;li>リテラル
&lt;ul>
&lt;li>数値, 文字列, ヒアドキュメント, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>その他記号&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数値演算&lt;/li>
&lt;li>プリミティブな文字列処理
&lt;ul>
&lt;li>結合, 分解, 書式, &amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>型&lt;/li>
&lt;li>制御構文
&lt;ul>
&lt;li>ループ&lt;/li>
&lt;li>条件分岐&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>例外処理&lt;/li>
&lt;li>関数&lt;/li>
&lt;li>構造体, 拡張型&lt;/li>
&lt;li>オブジェクト&lt;/li>
&lt;li>外部ファイルの利用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>言語機能
&lt;ul>
&lt;li>基本的なデータ型
&lt;ul>
&lt;li>配列&lt;/li>
&lt;li>連想配列(マッピング構造体, ハッシュ)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>日付、時刻、時間&lt;/li>
&lt;li>標準入出力&lt;/li>
&lt;li>ファイル入出力&lt;/li>
&lt;li>テキスト処理
&lt;ul>
&lt;li>正規表現&lt;/li>
&lt;li>エンコーディング&lt;/li>
&lt;li>マルチバイト文字対応&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>オブジェクト指向プログラミング
&lt;ul>
&lt;li>クラス, メソッド&lt;/li>
&lt;li>継承&lt;/li>
&lt;li>Mixin&lt;/li>
&lt;li>オーバーライド, オーバーロード&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>バイナリ処理&lt;/li>
&lt;li>並行処理&lt;/li>
&lt;li>関数型プログラミング
&lt;ul>
&lt;li>高階関数&lt;/li>
&lt;li>curry化&lt;/li>
&lt;li>クロージャ, 無名関数, lambda式&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ライブラリの利用
&lt;ul>
&lt;li>標準ライブラリ&lt;/li>
&lt;li>3rd Partyのライブラリ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>テスト&lt;/li>
&lt;li>メタプログラミング
&lt;ul>
&lt;li>リフレクション&lt;/li>
&lt;li>ジェネリクス&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>実行
&lt;ul>
&lt;li>対話IFによる実行
&lt;ul>
&lt;li>REPL&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>テスト
&lt;ul>
&lt;li>単体テスト&lt;/li>
&lt;li>フレームワーク, ライブラリ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>典型的な問題解決
&lt;ul>
&lt;li>乱数&lt;/li>
&lt;li>典型的アルゴリズム
&lt;ul>
&lt;li>ソート, ハッシュ表, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>典型的データ構造
&lt;ul>
&lt;li>連結リスト, 木, グラフ, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>プログラミング手法
&lt;ul>
&lt;li>ダックタイピング&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>デバッグ&lt;/li>
&lt;li>プロファイリング&lt;/li>
&lt;li>内部構造
&lt;ul>
&lt;li>実行プロセス
&lt;ul>
&lt;li>スレッド&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>コンパイラ&lt;/li>
&lt;li>インタープリタ&lt;/li>
&lt;li>VM&lt;/li>
&lt;li>GC
&lt;ul>
&lt;li>アルゴリズム&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ソフトウェア開発
&lt;ul>
&lt;li>CLI&lt;/li>
&lt;li>バッチ処理&lt;/li>
&lt;li>デーモン&lt;/li>
&lt;li>ライブラリ&lt;/li>
&lt;li>Webアプリケーション&lt;/li>
&lt;li>システムプログラミング&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>開発環境・ツール
&lt;ul>
&lt;li>エディタ&lt;/li>
&lt;li>IDE&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>コミュニティ&lt;/li>
&lt;/ul>
&lt;h2 id="child-pages">Child Pages&lt;/h2></description></item><item><title>A: IntelliJ IDEA</title><link>https://progrhy.me/tech-notes/a/program/idea/</link><pubDate>Wed, 29 Apr 2020 10:44:28 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/idea/</guid><description>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>画面分割 &amp;hellip; &lt;code>Window &amp;gt; Editor Tabs &amp;gt; (Split Vertically|Split Horizontally)&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/pipi_taro/items/859d445960bb79a3ac78">IntelliJの使い方 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="file-typeの関連付け">File Typeの関連付け&lt;/h3>
&lt;p>&lt;code>Preferences &amp;gt; Editor &amp;gt; File Types&lt;/code> で関連付けを設定できる。&lt;br>
まだ関連付けがない拡張子のファイルであれば、エディタ上で右クリックして「Associate File Type」を選んで設定することもできる。&lt;/p>
&lt;h2 id="plugins">Plugins&lt;/h2>
&lt;h3 id="file-watchers">File Watchers&lt;/h3>
&lt;p>ファイルを監視して自動で実行されるアクションを設定できる。&lt;br>
例えば、ファイルの変更を監視してコードフォーマッタを適用するとか。&lt;/p>
&lt;p>&lt;a href="https://pleiades.io/help/idea/using-file-watchers.html">ファイル監視 - 公式ヘルプ | IntelliJ IDEA&lt;/a>&lt;/p>
&lt;h2 id="how-to-upgrade">How to Upgrade&lt;/h2>
&lt;h3 id="ubuntu">Ubuntu&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://progrhy.me/tech-notes/a/memo/2020/20200429/#ubuntu-1804%E3%81%A7intellij-idea%E3%82%9220201%E3%81%AB%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88">2020年に2018年版から2020.1にアップデートしたときのログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sites.google.com/site/progrhymetechwiki/home/memo/2018/20180331#TOC-Ubuntu-16.04-IntelliJ-IDEA-">2018年に2017年版から2018.1にアップデートしたときのログ&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Vim</title><link>https://progrhy.me/tech-notes/a/program/vim/</link><pubDate>Wed, 29 Apr 2020 20:37:00 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/vim/</guid><description>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;ul>
&lt;li>エディタの操作 → &lt;a href="https://progrhy.me/tech-notes/a/program/vim/edit/">エディタ&lt;/a>&lt;/li>
&lt;li>Vimの設定 → &lt;a href="https://progrhy.me/tech-notes/a/program/vim/vimrc/">vimrc&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;h3 id="ubuntuに新しいvimを入れる">Ubuntuに新しいVimを入れる&lt;/h3>
&lt;p>2020-05-06現在、Ubuntu 18.04に入っているVimのバージョンが8.0だった。&lt;br>
より新しいバージョンを使うには、aptで &lt;code>ppa:jonathonf/vim&lt;/code> のようなリポジトリの追加が必要そう。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>2019年12月の記事: &lt;a href="http://ubuntuhandbook.org/index.php/2019/12/install-vim-8-2-ubuntu-18-04-16-04-19-10/">How to Install Vim 8.2 in Ubuntu 18.04, 16.04, 19.10 | UbuntuHandbook&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="パッケージ管理">パッケージ管理&lt;/h2>
&lt;p>Vim 8から標準機能になった。&lt;/p>
&lt;p>&lt;a href="https://vim-jp.org/vimdoc-ja/repeat.html#packages">https://vim-jp.org/vimdoc-ja/repeat.html#packages&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Vim script のパッケージは1つかそれ以上のプラグインを含むディレクトリである&lt;/p>
&lt;/blockquote>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/thinca/items/cdc0169e3bcc5a55a5ba">Vim 8.0 Advent Calendar 6 日目 パッケージ - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="プラグインマネージャー">プラグインマネージャー&lt;/h2>
&lt;p>サードパーティーのものが色々ある。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/VundleVim/Vundle.vim">Vundle&lt;/a> &amp;hellip; 一番人気っぽいがここ数年、全然更新されてない（2020-05-05現在）&lt;/li>
&lt;li>&lt;a href="https://github.com/junegunn/vim-plug">vim-plug&lt;/a> &amp;hellip; ミニマリストにオススメっぽい&lt;/li>
&lt;li>&lt;a href="#deinvim">dein.vim&lt;/a> &amp;hellip; 闇の力を得たプラグインマネージャー（笑） NeoBundleの後継&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/tanabee/items/e2064c5ce59c85915940">Vim におけるプラグイン管理についてまとめてみた - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="deinvim">dein.vim&lt;/h3>
&lt;p>&lt;a href="https://github.com/Shougo/dein.vim">https://github.com/Shougo/dein.vim&lt;/a>&lt;/p>
&lt;p>ヘルプ:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Shougo/dein.vim/blob/master/doc/dein.txt">https://github.com/Shougo/dein.vim/blob/master/doc/dein.txt&lt;/a>&lt;/li>
&lt;li>&lt;code>:help dein&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/okamos/items/2259d5c770d51b88d75b">NeoVim、そしてdein.vimへ - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/delphinus/items/cd221a450fd23506e81a">[dein.vim] hook の便利な使い方 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="specs">Specs&lt;/h2>
&lt;h3 id="正規表現">正規表現&lt;/h3>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/kawaz/items/d0708a4ab08e572f38f3">vim正規表現リファレンス - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="オプションのグローバルな値とローカルな値">オプションのグローバルな値とローカルな値&lt;/h3>
&lt;p>&lt;a href="https://whileimautomaton.net/2008/01/14011600">Vim: オプションのグローバルな値とローカルな値 - while (“im automaton”);&lt;/a> より。&lt;/p>
&lt;ul>
&lt;li>ふつうは &lt;code>set&lt;/code> を使う&lt;/li>
&lt;li>ローカルに設定したい値は &lt;code>setlocal&lt;/code> を使う。そうでないとグローバル値も変化してしまう
&lt;ul>
&lt;li>例えば &lt;code>ftplugin/xxx&lt;/code> でファイルタイプごとの設定をするときに &lt;code>set&lt;/code> を使ってしまうと、ファイルを開くたびにグローバルの設定値が変化しかねない&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://wonderwall.hatenablog.com/entry/2016/03/20/222308">Vimメモ : filetypeの確認 - もた日記&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="現在編集してるファイルのfiletypeを確認">現在編集してるファイルのfiletypeを確認&lt;/h3>
&lt;p>エディタ上でどちらかを実行&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">set&lt;/span> &lt;span style="color:#000">filetype&lt;/span>?&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">echo&lt;/span> &amp;amp;&lt;span style="color:#000">filetype&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="filetype一覧の確認">filetype一覧の確認&lt;/h3>
&lt;p>エディタ上で以下を実行:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Vim" data-lang="Vim">&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">echo&lt;/span> &lt;span style="color:#000">glob&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>$&lt;span style="color:#000">VIMRUNTIME&lt;/span> . &lt;span style="color:#4e9a06">&amp;#39;/ftplugin/*.vim&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">echo&lt;/span> &lt;span style="color:#000">glob&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>$&lt;span style="color:#000">VIMRUNTIME&lt;/span> . &lt;span style="color:#4e9a06">&amp;#39;/indent/*.vim&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">echo&lt;/span> &lt;span style="color:#000">glob&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>$&lt;span style="color:#000">VIMRUNTIME&lt;/span> . &lt;span style="color:#4e9a06">&amp;#39;/syntax/*.vim&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&amp;#34; 拡張子との関係を一覧&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#000">autocmd&lt;/span> &lt;span style="color:#000">filetypedetect&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="関連プロジェクト">関連プロジェクト&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://neovim.io/">Neovim&lt;/a>
&lt;ul>
&lt;li>Vimのメンテナンシビリティと拡張性を高め、モダン化するプロジェクト&lt;/li>
&lt;li>参考:
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/lighttiger2505/items/440c32e40082dc310c1e">Neovimがどういうプロジェクトなのかまとめ - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vim.blue/what-is-neovim/">neovim とは何か？ | Vim入門&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="child-pages">Child Pages&lt;/h2></description></item><item><title>A: Visual Studio Code</title><link>https://progrhy.me/tech-notes/a/program/vscode/</link><pubDate>Mon, 27 Apr 2020 22:33:58 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/vscode/</guid><description>
&lt;p>Micfosoftが提供するOSSのクロスプラットフォームなコードエディタ。&lt;br>
Electronをベースにしており、IDE並の機能を持つ。&lt;/p>
&lt;p>3rd Partyの拡張機能も多数あり、機能を拡充することができる。&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/docs">https://code.visualstudio.com/docs&lt;/a>
&lt;ul>
&lt;li>Get Started:
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/docs/getstarted/keybindings">Visual Studio Code Key Bindings&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>User Guide:
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/docs/editor/extension-gallery">Managing Extensions in Visual Studio Code&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="features">Features&lt;/h2>
&lt;h3 id="スニペット機能">スニペット機能&lt;/h3>
&lt;ul>
&lt;li>ユーザ定義のスニペットを作成可能
&lt;ul>
&lt;li>&lt;code>File &amp;gt; Preferences &amp;gt; User Snippets&lt;/code>&lt;/li>
&lt;li>コメント付きJSON形式で書く&lt;/li>
&lt;li>グローバルなスニペット&lt;/li>
&lt;li>ワークスペースごとのスニペット&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>スニペットが有効になると、補完で選択可能になる&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://vscode-doc-jp.github.io/docs/userguide/userdefinedsnippets.html">独自のスニペットを作成 | 非公式 - Visual Studio Code Docs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.lisz-works.com/entry/vscode-snippets">VS Codeをスニペット作成は簡単で便利だった！ - lisz-works&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="preferences">Preferences&lt;/h2>
&lt;p>昔はJSON設定ファイルを直接編集するようなスタイルだったが、2018年9月現在、GUIで設定できる項目も増えてきたようだ。&lt;/p>
&lt;p>2種類の設定がある。&lt;/p>
&lt;ul>
&lt;li>ユーザ設定 &amp;hellip; ワークスペースによらない、ユーザ環境で常に有効になる設定。&lt;/li>
&lt;li>ワークスペース設定 &amp;hellip; ワークスペースの &lt;code>.vscode/settings.json&lt;/code> に保存される。&lt;/li>
&lt;/ul>
&lt;p>Quick Reference:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>config&lt;/th>
&lt;th>値（*）&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>editor.insertSpaces&lt;/code>&lt;/td>
&lt;td>true, false&lt;/td>
&lt;td>ソフトタブ（タブキーで半角スペースを挿入）のon/off&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>editor.renderWhitespace&lt;/code>&lt;/td>
&lt;td>none, all, boundary&lt;/td>
&lt;td>スペースやタブを描画するかどうか。 &lt;code>boundary&lt;/code> では単語境界は描画しない&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>（*）デフォルト値は太字&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/spica/items/cfae8492804b8d3f8726">VSCodeのエディター設定の話 - タブ文字がなぜか半角スペースになってしまう - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="言語ごとの設定を行う">言語ごとの設定を行う&lt;/h3>
&lt;p>インデントなどの設定を言語ごとに変えることができる。&lt;/p>
&lt;p>settings.jsonで &lt;code>&amp;quot;[ruby]&amp;quot;: {}&lt;/code> などのエントリを作って、その中に設定を記述すればいい。&lt;br>
コマンドパレットで &lt;code>Preferences: Configure language specific settings&lt;/code> と入力し、設定したい言語を選ぶやり方もある。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://ja.stackoverflow.com/questions/34014/visual-studio-code%E3%81%A7%E8%A8%80%E8%AA%9E%E3%81%94%E3%81%A8%E3%81%AB%E3%82%A4%E3%83%B3%E3%83%87%E3%83%B3%E3%83%88%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92%E3%81%97%E3%81%9F%E3%81%84">vscode - Visual Studio Codeで言語ごとにインデントの設定をしたい - スタック・オーバーフロー&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="自動フォーマット">自動フォーマット&lt;/h3>
&lt;p>&lt;a href="https://code.visualstudio.com/docs/editor/codebasics#_formatting">https://code.visualstudio.com/docs/editor/codebasics#_formatting&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>config&lt;/th>
&lt;th>値（*）&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>editor.formatOnSave&lt;/code>&lt;/td>
&lt;td>true, &lt;strong>false&lt;/strong>&lt;/td>
&lt;td>保存時にコードフォーマッタをかける&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>（*）デフォルト値は太字&lt;/p>
&lt;h3 id="インデント設定">インデント設定&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>config&lt;/th>
&lt;th>値（*）&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>editor.detectIndentation&lt;/code>&lt;/td>
&lt;td>&lt;strong>true&lt;/strong>, false&lt;/td>
&lt;td>ファイルタイプごとのインデント設定を有効にする&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>editor.insertSpaces&lt;/code>&lt;/td>
&lt;td>true, false&lt;/td>
&lt;td>ソフトタブ（タブキーで半角スペースを挿入）のon/off&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>editor.tabSize&lt;/code>&lt;/td>
&lt;td>&lt;strong>4&lt;/strong>&lt;/td>
&lt;td>インデント幅&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>（*）デフォルト値は太字&lt;/p>
&lt;p>なぜか設定が反映されないときや、一時的に設定を変更したいときは、画面右下のインデント設定をクリックすることでアドホックに変更が可能。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.atmarkit.co.jp/ait/articles/1805/25/news039.html">VS Codeでインデントを設定するには：Visual Studio Code TIPS - ＠IT&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://oua-iea-programmer.blogspot.com/2017/04/visual-studio-code.html">【Visual Studio Code】インデント幅の変更方法と、変えても反映されない時の対処法&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ja.stackoverflow.com/questions/34014/visual-studio-code%e3%81%a7%e8%a8%80%e8%aa%9e%e3%81%94%e3%81%a8%e3%81%ab%e3%82%a4%e3%83%b3%e3%83%87%e3%83%b3%e3%83%88%e3%81%ae%e8%a8%ad%e5%ae%9a%e3%82%92%e3%81%97%e3%81%9f%e3%81%84">vscode - Visual Studio Codeで言語ごとにインデントの設定をしたい - スタック・オーバーフロー&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="フォント設定">フォント設定&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>config&lt;/th>
&lt;th>値（*）&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>editor.fontSize&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;td>エディタのフォントサイズ&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>（*）デフォルト値は太字&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/tkyaji/items/45d5f88047e99c29dda2">Visual Studio Codeでフォントサイズをいい感じにする - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="ファイルを常に新しいタブで開く">ファイルを常に新しいタブで開く&lt;/h3>
&lt;p>&lt;code>workbench.editor.enablePreview: false&lt;/code> に設定し、プレビューを無効化する。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://code.i-harness.com/">[Visual-Studio-Code] ファイルを常に新しいタブで開くようにvscodeを設定するには？ | CODE Q&amp;amp;A 問題解決 [日本語]&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="テキストの折り返し">テキストの折り返し&lt;/h3>
&lt;p>デフォルトは &lt;code>editor.wordWrap&lt;/code> が折り返さない設定(= &lt;code>off&lt;/code>)になっている。&lt;br>
その他、次のオプションが有る:&lt;/p>
&lt;ul>
&lt;li>&lt;code>on&lt;/code> &amp;hellip; エディタの右端で折り返す&lt;/li>
&lt;li>&lt;code>wordWrapColumn&lt;/code> &amp;hellip; &lt;code>editor.wordWrapColumn&lt;/code> で設定した値で折り返す&lt;/li>
&lt;li>&lt;code>bounded&lt;/code> &amp;hellip; &lt;code>editor.wordWrapColumn&lt;/code> 設定値とエディタの幅の小さい方で折り返す&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.atmarkit.co.jp/ait/articles/1807/27/news035.html">VS Codeでテキストの折り返しを設定するには：Visual Studio Code TIPS - ＠IT&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ショートカットキー">ショートカットキー&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Win/Linux&lt;/th>
&lt;th>Mac&lt;/th>
&lt;th>機能&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>Ctrl+,&lt;/code>&lt;/td>
&lt;td>&lt;code>⌘+,&lt;/code>&lt;/td>
&lt;td>設定画面を開く&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+p&lt;/code>&lt;/td>
&lt;td>&lt;code>⌘+p&lt;/code>&lt;/td>
&lt;td>ファイルを検索して開く&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+Shift+p&lt;/code>, &lt;code>F1&lt;/code>&lt;/td>
&lt;td>&lt;code>⌘+Shift+p&lt;/code>, &lt;code>F1&lt;/code>&lt;/td>
&lt;td>コマンドパレットを開く&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+Shift+x&lt;/code>&lt;/td>
&lt;td>&lt;code>⌘+Shift+x&lt;/code>&lt;/td>
&lt;td>拡張機能を開く&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+`&lt;/code>&lt;/td>
&lt;td>&lt;code>Ctrl+`&lt;/code>&lt;/td>
&lt;td>ターミナルの表示/非表示&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+Shift+`&lt;/code>&lt;/td>
&lt;td>&lt;code>Ctrl+Shift+^&lt;/code>&lt;/td>
&lt;td>新しいターミナルの作成&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+k v&lt;/code>&lt;/td>
&lt;td>&lt;code>⌘+k v&lt;/code>&lt;/td>
&lt;td>Markdownファイルのプレビュー画面をサイドバイサイドで表示&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+Shift+v&lt;/code>&lt;/td>
&lt;td>&lt;code>⌘+Shift+v&lt;/code>&lt;/td>
&lt;td>Markdownファイルのプレビュー画面を別タブで表示&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+k Ctrl+s&lt;/code>&lt;/td>
&lt;td>&lt;code>⌘+k ⌘+s&lt;/code>&lt;/td>
&lt;td>キーバインド一覧を開く&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Ctrl+k Ctrl+t&lt;/code>&lt;/td>
&lt;td>&lt;code>⌘+k ⌘+t&lt;/code>&lt;/td>
&lt;td>カラーテーマ(配色)設定&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>リファレンス:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf">keyboard-shortcuts-linux.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf">keyboard-shortcuts-macos.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf">keyboard-shortcuts-windows.pdf&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/oruponu/items/ae9c720d4522c1606daf">Visual Studio Code キーボード ショートカット - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.atmarkit.co.jp/ait/articles/1804/20/news030.html">VS CodeでMarkdownをプレビューするには？：Visual Studio Code TIPS - ＠IT&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="キーバインドの変更">キーバインドの変更&lt;/h3>
&lt;p>↑のキーバインド一覧から変更可能&lt;/p>
&lt;h2 id="extensions">Extensions&lt;/h2>
&lt;h3 id="改行コードの表示">改行コードの表示&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=sohamkamani.code-eol">code-eol&lt;/a>
&lt;ul>
&lt;li>設定値: &lt;code>code-eol.color&lt;/code> &amp;hellip; 改行を表す記号の文字色を16進数のカラーコードで指定。
&lt;ul>
&lt;li>例: &lt;code>&amp;quot;#841a75&amp;quot;&lt;/code> (ラズベリー色)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=steditor.line-endings">line-endings&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>2018年9月、code-eolを入れて使っている。&lt;/p>
&lt;h3 id="textlint">textlint&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=taichi.vscode-textlint">vscode-textlint&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>日本語の書き方など指摘・修正してくれるLintツール。&lt;/p>
&lt;p>使い方:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/azu/items/2c565a38df5ed4c9f4e1#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">VS Codeでtextlintを使って文章をチェックする - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="how-to">How-to&lt;/h2>
&lt;h3 id="vs-codeの更新">VS Codeの更新&lt;/h3>
&lt;p>Ubuntu:&lt;/p>
&lt;ol>
&lt;li>debパッケージをダウンロード&lt;/li>
&lt;li>&lt;code>sudo dpkg -i code_xxx.deb&lt;/code>&lt;/li>
&lt;/ol></description></item></channel></rss>