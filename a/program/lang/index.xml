<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>progrhyme's Tech Notes – プログラム言語</title><link>https://progrhy.me/tech-notes/a/program/lang/</link><description>Recent content in プログラム言語 on progrhyme's Tech Notes</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 26 Apr 2020 07:54:05 +0900</lastBuildDate><atom:link href="https://progrhy.me/tech-notes/a/program/lang/index.xml" rel="self" type="application/rss+xml"/><item><title>A: Go</title><link>https://progrhy.me/tech-notes/a/program/lang/go/</link><pubDate>Sun, 26 Apr 2020 08:01:51 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/go/</guid><description>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;h3 id="ドキュメント">ドキュメント&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://golang.org/doc/">https://golang.org/doc/&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://golang.org/doc/effective_go.html">https://golang.org/doc/effective_go.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="http://golang-jp.org/">http://golang-jp.org/&lt;/a> &amp;hellip; golang.orgの日本語訳プロジェクト&lt;/li>
&lt;/ul>
&lt;h4 id="3rd-party-がまとめた資料">3rd Party がまとめた資料&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://motemen.github.io/go-for-go-book/">GoのためのGo&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.golangprograms.com/" title="Go Language Programs, Tutorial, Articles and Examples">Go Language Programs, Tutorial, Articles and Examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="play-ground">Play Ground&lt;/h3>
&lt;p>Sandbox &lt;a href="https://play.golang.org/">https://play.golang.org/&lt;/a>&lt;/p>
&lt;h3 id="記事">記事&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://postd.cc/go-best-practices-2016/" title="6年間におけるGoのベストプラクティス | プログラミング | POSTD">6年間におけるGoのベストプラクティス | プログラミング | POSTD&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="開発ツール">開発ツール&lt;/h2>
&lt;h3 id="goimports">goimports&lt;/h3>
&lt;p>&lt;a href="https://godoc.org/golang.org/x/tools/cmd/goimports">https://godoc.org/golang.org/x/tools/cmd/goimports&lt;/a>&lt;/p>
&lt;p>Install:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">go get golang.org/x/tools/cmd/goimports
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>goimports&lt;/code> というコマンドが入る。&lt;br>
&lt;code>go fmt&lt;/code> のときに使われてないpkgの &lt;code>import&lt;/code> 文を削除してくれる。&lt;/p>
&lt;p>Goglandだと &lt;code>Settings &amp;gt; Go &amp;gt; On Save &amp;gt; On save run&lt;/code> で設定できる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://y0m0r.hateblo.jp/entry/20140112/1389501259" title="goのimportを自動的に追加/削除してくれる「goimports」を試してみた - Misc Notes">goのimportを自動的に追加/削除してくれる「goimports」を試してみた - Misc Notes&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://qiita.com/kuro_milk/items/6adbf544dcb333d0f472" title="Gogland で保存時に go fmt を走らせる - Qiita">Gogland で保存時に go fmt を走らせる - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ビルトイン関数">ビルトイン関数&lt;/h2>
&lt;h3 id="append">append&lt;/h3>
&lt;p>&lt;a href="https://golang.org/pkg/builtin/#append">https://golang.org/pkg/builtin/#append&lt;/a>&lt;/p>
&lt;p>&lt;code>func append(slice []Type, elems ...Type) []Type&lt;/code>&lt;/p>
&lt;p>sliceに要素、またはsliceを結合し、新たなsliceを返す。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#000">slice&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">slice&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">elem1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">elem2&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">slice&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">slice&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">anotherSlice&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="topics">Topics&lt;/h2>
&lt;h3 id="vendoring">vendoring&lt;/h3>
&lt;p>アプリケーションなどで、依存パッケージを管理する仕組み。&lt;br>
Go 1.6から正式にサポートされた。&lt;br>
Go 1.5ではexperimental扱いで、有効化するには環境変数 &lt;code>GO15VENDOREXPERIMENT&lt;/code> を設定してコンパイルする必要がある。&lt;/p>
&lt;p>vendoringのためのツールとして、glideやgomなどがある。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://qiita.com/okamos/items/587a5693a3ae9cae9b88" title="今更だけどGoのVendoringについて思いをはせる - Qiita">今更だけどGoのVendoringについて思いをはせる - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://yoru9zine.hatenablog.com/entry/2016/02/02/054922" title="go vendoring - 隙あらば寝る">go vendoring - 隙あらば寝る&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://librabuch.jp/blog/2016/04/go-lang-vendoring-glide/" title="Glide で Go 言語のパッケージ管理と vendoring - Librabuch">Glide で Go 言語のパッケージ管理と vendoring - Librabuch&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="enum">enum&lt;/h3>
&lt;p>Goにはenumがない。&lt;br>
intの独自型を定義するのがイディオムになっている。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Fruit&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">Apple&lt;/span> &lt;span style="color:#000">Fruit&lt;/span> &lt;span style="color:#000;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">iota&lt;/span>
&lt;span style="color:#000">Orange&lt;/span>
&lt;span style="color:#000">Banana&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">myFruit&lt;/span> &lt;span style="color:#000">Fruit&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>この独自型に対して &lt;code>String()&lt;/code> メソッドを実装しておくと、名前が引けて便利:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">f&lt;/span> &lt;span style="color:#000">Fruit&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">switch&lt;/span> &lt;span style="color:#000">f&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">Apple&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Apple&amp;#34;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">Orange&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Orange&amp;#34;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">case&lt;/span> &lt;span style="color:#000">Banana&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Banana&amp;#34;&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">default&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Unknown&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>golang.org/x/tools/cmd/stringer&lt;/code> で &lt;code>String()&lt;/code> メソッドを含むコードを自動生成することもできる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://qiita.com/awakia/items/c81c7816b9aea5422250" title="GoのEnumイディオム - Qiita">GoのEnumイディオム - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mattn.kaoriya.net/software/lang/go/20141208093852.htm" title="Big Sky :: Re: GoLangでJavaのenumっぽいライブラリ作った話">Big Sky :: Re: GoLangでJavaのenumっぽいライブラリ作った話&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://arslan.io/2015/10/08/ten-useful-techniques-in-go/" title="Ten Useful Techniques in Go – Fatih Arslan">Ten Useful Techniques in Go – Fatih Arslan&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godoc.org/golang.org/x/tools/cmd/stringer">https://godoc.org/golang.org/x/tools/cmd/stringer&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="build">build&lt;/h3>
&lt;p>&lt;a href="https://golang.org/pkg/go/build/">https://golang.org/pkg/go/build/&lt;/a>&lt;/p>
&lt;p>&lt;code>Build Constraints&lt;/code> という機能は「build tag」としても知られている。&lt;br>
こんなの:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8f5902;font-style:italic">// (A)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// +build foo
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">// (B)
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">// +build !foo
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(A) &lt;code>go build -tags=foo&lt;/code> でビルドされる。&lt;br>
(B) &lt;code>go build&lt;/code> でビルドされる。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://shinpei.github.io/blog/2014/10/07/use-build-constrains-or-build-tag-in-golang/" title="go build -tagsを使ってRelease/Debugを切り替える - flyhigh">go build -tagsを使ってRelease/Debugを切り替える - flyhigh&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="プロファイリング">プロファイリング&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://golang.org/pkg/runtime/pprof/" title="pprof - The Go Programming Language">runtime/pprof&lt;/a>という標準pkgを使うのが基本な感じ。
&lt;ul>
&lt;li>その内 &lt;a href="https://sites.google.com/site/progrhymetechwiki/programming/go/std-pkg" title="標準パッケージ - progrhyme's Tech Wiki">標準パッケージ - progrhyme&amp;rsquo;s Tech Wiki&lt;/a> に書くと思う。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>runtimeのデバッグに役立つ環境変数の話:
&lt;ul>
&lt;li>&lt;a href="https://dave.cheney.net/tag/godebug" title="GODEBUG | Dave Cheney">GODEBUG | Dave Cheney&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.golang.org/profiling-go-programs" title="Profiling Go Programs - The Go Blog">Profiling Go Programs - The Go Blog&lt;/a> &amp;hellip; pprof&lt;/li>
&lt;li>&lt;a href="http://hakobe932.hatenablog.com/entry/2014/04/10/010619" title="golangで書かれたプログラムのメモリ使用状況を見る - hakobe-blog ♨">golangで書かれたプログラムのメモリ使用状況を見る - hakobe-blog ♨&lt;/a> &amp;hellip; pprof, net/http/pprof&lt;/li>
&lt;li>&lt;a href="https://www.slideshare.net/yuichironakazawa2/golang-profiling-77163552" title="golang profiling の基礎">golang profiling の基礎&lt;/a> &amp;hellip; pprof他&lt;/li>
&lt;li>&lt;a href="http://qiita.com/oywc410/items/ad8baee00f039705a5c0" title="golangパフォーマンス3: mapとGC - Qiita">golangパフォーマンス3: mapとGC - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="child-pages">Child Pages&lt;/h2></description></item><item><title>A: JavaScript</title><link>https://progrhy.me/tech-notes/a/program/lang/js/</link><pubDate>Sun, 26 Apr 2020 20:47:40 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/js/</guid><description>
&lt;p>&lt;a href="https://developer.mozilla.org/ja/docs/Web/JavaScript">JavaScript | MDN&lt;/a>&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide" title="JavaScript ガイド - JavaScript | MDN">JavaScript ガイド - JavaScript | MDN&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Reference:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference" title="JavaScript リファレンス - JavaScript | MDN">JavaScript リファレンス - JavaScript | MDN&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.w3schools.com/jsref/" title="JavaScript and HTML DOM Reference">JavaScript and HTML DOM Reference&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>コーディング規約:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://google.github.io/styleguide/javascriptguide.xml" title="Google JavaScript Style Guide">Google JavaScript Style Guide&lt;/a>
&lt;ul>
&lt;li>非公式和訳: &lt;a href="http://cou929.nu/data/google_javascript_style_guide/" title="Google JavaScript Style Guide 和訳 — Google JavaScript Style Guide 和訳">Google JavaScript Style Guide 和訳 — Google JavaScript Style Guide 和訳&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/felixge/node-style-guide">https://github.com/felixge/node-style-guide&lt;/a>&lt;/li>
&lt;li>参考まとめ:
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/takeharu/items/dee0972e5f39bfd4d7c8" title="JavaScriptのスタイルガイドまとめ(おすすめ4選) - Qiita">JavaScriptのスタイルガイドまとめ(おすすめ4選) - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;h3 id="date">Date&lt;/h3>
&lt;p>&lt;a href="https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Date">https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Date&lt;/a>&lt;/p>
&lt;h3 id="json">JSON&lt;/h3>
&lt;p>&lt;a href="https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON">https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON&lt;/a>&lt;/p>
&lt;p>SYNOPSIS:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">obj&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">str&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">str&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">stringify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">obj&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tips">Tips&lt;/h2>
&lt;h3 id="デバッグ">デバッグ&lt;/h3>
&lt;ul>
&lt;li>&lt;code>debugger;&lt;/code> 文を埋め込む。&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://postd.cc/how-to-not-hate-javascript-tips-from-the-frontline/" title="JavaScriptのデバッグ方法 – JSを嫌いにならないためのTips | プログラミング | POSTD">JavaScriptのデバッグ方法 – JSを嫌いにならないためのTips | プログラミング | POSTD&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="日付と時刻の計算">日付と時刻の計算&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/kazu56/items/cca24cfdca4553269cab" title="【JavaScript】日付処理 - Qiita">【JavaScript】日付処理 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://msdn.microsoft.com/ja-jp/library/ee532932%28v=vs.94%29.aspx" title="日付と時刻の計算 (JavaScript)">日付と時刻の計算 (JavaScript)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="topics">Topics&lt;/h2>
&lt;h3 id="var-let-constの使い分け">var, let, constの使い分け&lt;/h3>
&lt;p>2017年12月現在、イマイチよくわかっていない。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://sbfl.net/blog/2016/07/14/javascript-var-let-const/" title="JavaScriptにおけるvar/let/constの使い分け">JavaScriptにおけるvar/let/constの使い分け&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="sprintfなさそう">sprintfなさそう&lt;/h3>
&lt;p>Node.jsだとutilがある:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://nodejs.org/api/util.html">https://nodejs.org/api/util.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>npmもある:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.npmjs.com/package/sprintf">https://www.npmjs.com/package/sprintf&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&amp;ldquo;0&amp;quot;埋めとか半角スペースで埋める方法としては substr を使った例が出て来る:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://takuya-1st.hatenablog.jp/entry/2014/12/03/114154" title="Javascriptで文字列の０埋め、空白で右寄せでフォーマット - それマグで！">Javascriptで文字列の０埋め、空白で右寄せでフォーマット - それマグで！&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>自作関数を作る例も出てくる:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/pseudo_foxkeh/items/9297a834bc8e05133e7a" title="Javascriptで日付・時刻をフォーマット表示 - Qiita">Javascriptで日付・時刻をフォーマット表示 - Qiita&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/osakanafish/items/c64fe8a34e7221e811d0" title="日付フォーマットなど 日付系処理 - Qiita">日付フォーマットなど 日付系処理 - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>日付時刻については、固定フォーマットで出力する関数はある。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://msdn.microsoft.com/ja-jp/library/ff743760(v=vs.94).aspx" title="日付と時刻文字列 (JavaScript)">日付と時刻文字列 (JavaScript)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.sejuku.net/blog/23064" title="【Javascript入門】日付のフォーマット処理まとめ | 侍エンジニア塾ブログ | プログラミング入門者向け学習情報サイト">【Javascript入門】日付のフォーマット処理まとめ | 侍エンジニア塾ブログ | プログラミング入門者向け学習情報サイト&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Perl</title><link>https://progrhy.me/tech-notes/a/program/lang/perl/</link><pubDate>Fri, 08 May 2020 22:34:00 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/perl/</guid><description>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://perldoc.perl.org/">https://perldoc.perl.org/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>邦訳: &lt;a href="https://perldoc.jp/">https://perldoc.jp/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="podの書き方">PODの書き方&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://perldoc.perl.org/5.30.0/perlpod.html">https://perldoc.perl.org/5.30.0/perlpod.html&lt;/a>&lt;/li>
&lt;li>邦訳: &lt;a href="https://perldoc.jp/docs/perl/5.26.1/perlpod.pod">https://perldoc.jp/docs/perl/5.26.1/perlpod.pod&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="history">History&lt;/h2>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/Perl">Perl - Wikipedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://history.perl.org/PerlTimeline.html">http://history.perl.org/PerlTimeline.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="cpan">CPAN&lt;/h2>
&lt;h3 id="cpanモジュールのメンテに関する備忘録">CPANモジュールのメンテに関する備忘録&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://d.hatena.ne.jp/gfx/20140823/1408750107">comaint(1)でCPAN moduleのcomaintainerを追加する - Islands in the byte stream&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://keyamb.hatenablog.com/entry/2014/03/15/204118">Minilla を使って CPAN にモジュールを上げてみた - weblog of key_amb&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sites.google.com/site/progrhymetechwiki/home/memo/2017/20170509#TOC-CPAN-">久しぶりにCPANリリース / 20170509 - progrhyme&amp;rsquo;s Tech Wiki&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>A: Rust</title><link>https://progrhy.me/tech-notes/a/program/lang/rust/</link><pubDate>Sun, 24 May 2020 15:28:59 +0900</pubDate><guid>https://progrhy.me/tech-notes/a/program/lang/rust/</guid><description>
&lt;h2 id="about">About&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/rust-lang/rust">https://github.com/rust-lang/rust&lt;/a> &amp;hellip; ソースコードもRust&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://doc.rust-lang.org/book/">https://doc.rust-lang.org/book/&lt;/a>
&lt;ul>
&lt;li>日本語訳: &lt;a href="https://doc.rust-jp.rs/">https://doc.rust-jp.rs/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;p>&lt;a href="https://www.rust-lang.org/learn">https://www.rust-lang.org/learn&lt;/a> &amp;hellip; ランディングページ&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://doc.rust-lang.org/edition-guide/">Edition Guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://doc.rust-lang.org/std/">Standard Library&lt;/a>
&lt;ul>
&lt;li>See &lt;a href="https://progrhy.me/tech-notes/a/program/lang/rust/std/">std Library&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://doc.rust-lang.org/cargo/">Cargo Book&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://doc.rust-lang.org/rustc/">rustc book&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://doc.rust-lang.org/error-index.html">Rust Compiler Error Index&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://doc.rust-lang.org/rustdoc/">rustdoc book&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="style-guide">Style Guide&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/rust-dev-tools/fmt-rfcs/blob/master/guide/guide.md">Rust Style Guide&lt;/a> &amp;hellip; 2020-05-25現在の正式版はこちらのようだ&lt;/li>
&lt;/ul>
&lt;p>古い（と思われる）もの:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://doc.rust-lang.org/1.0.0/style/">https://doc.rust-lang.org/1.0.0/style/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/rust-lang/www.rust-lang.org/issues/695">Outdated documentation on doc.rust-lang.org is exposed to search engines · Issue #695 · rust-lang/www.rust-lang.org&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="開発環境">開発環境&lt;/h3>
&lt;p>2018/8/22現在、VSCode, IntelliJが人気のようだ。&lt;br>
もちろん、Atomでも開発できそうだし、Eclipseもある。&lt;/p>
&lt;h2 id="community">Community&lt;/h2>
&lt;p>&lt;a href="https://www.rustaceans.org/">https://www.rustaceans.org/&lt;/a>&lt;/p>
&lt;p>Tips:&lt;/p>
&lt;ul>
&lt;li>Rustを書く人のことを「Rustacean」という。&lt;/li>
&lt;/ul>
&lt;h2 id="cli">CLI&lt;/h2>
&lt;ul>
&lt;li>rustup &amp;hellip; Rustコンパイラインストール。最新バージョンへのアップデート。クロスコンパイル&lt;/li>
&lt;li>rustc &amp;hellip; Rustコンパイラ&lt;/li>
&lt;/ul>
&lt;h3 id="cargo">cargo&lt;/h3>
&lt;p>Rustのビルドシステム兼パッケージマネージャ。&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># バージョン表示&lt;/span>
cargo --version
&lt;span style="color:#8f5902;font-style:italic"># プロジェクト作成&lt;/span>
cargo new &amp;lt;project&amp;gt;
cargo new --bin &amp;lt;project&amp;gt;
cargo check &lt;span style="color:#8f5902;font-style:italic"># コンパイル可能かチェック&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># コンパイル。バイナリ生成&lt;/span>
cargo build
cargo build --release &lt;span style="color:#8f5902;font-style:italic"># 最適化込み&lt;/span>
cargo run &lt;span style="color:#8f5902;font-style:italic"># バイナリを作らずに直接実行&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://doc.rust-lang.org/book/2018-edition/ch01-03-hello-cargo.html">Hello, Cargo! - The Rust Programming Language&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="rustup">rustup&lt;/h3>
&lt;p>Rust toolchain installer.&lt;/p>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># ヘルプ表示&lt;/span>
rustup &lt;span style="color:#204a87">help&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Update Rust toolchains and rustup&lt;/span>
rustup update
&lt;span style="color:#8f5902;font-style:italic"># 更新の有無を確認&lt;/span>
rustup check
&lt;span style="color:#8f5902;font-style:italic"># ブラウザでローカルにインストールされたドキュメントを開く&lt;/span>
rustup doc
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rustc">rustc&lt;/h3>
&lt;p>Examples:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic"># コンパイル&lt;/span>
rustc main.rs
&lt;span style="color:#8f5902;font-style:italic"># ヘルプ表示&lt;/span>
rustc --&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>h&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>elp
&lt;span style="color:#8f5902;font-style:italic">## 全コマンドオプションを表示&lt;/span>
rustc --help -v
&lt;span style="color:#8f5902;font-style:italic"># バージョン表示&lt;/span>
rustc --version&lt;span style="color:#000;font-weight:bold">|&lt;/span>-V
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="crates">Crates&lt;/h2>
&lt;p>Rustのパッケージ管理システム。&lt;br>
Rustプログラムの単位でもある。&lt;br>
&lt;code>cargo new&lt;/code> するとcrateが作られる。&lt;/p>
&lt;p>&lt;a href="https://crates.io/">https://crates.io/&lt;/a> : 公式レジストリっぽい。&lt;/p>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/skitaoka/items/753a519d720a1ccebb0d">Rust のモジュールシステム - Qiita&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="randhttpscratesiocratesrand">&lt;a href="https://crates.io/crates/rand">rand&lt;/a>&lt;/h3>
&lt;p>乱数生成&lt;/p></description></item></channel></rss>